===============================================================================
--frmCustomerManagement
Option Compare Database
Option Explicit
Dim TimerSeconds As Long
Private Sub btnCloseForm_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmWelcome", , , , , acDialog
End Sub
Private Sub Form_Load()

    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    TimerSeconds = TimerSeconds + 1
    lblDateTime.RightMargin = 0
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    
    Form.Section(0).BackColor = Get_Color1
    
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    
    Me.Caption = "Welcome to Julia.com -Select a feature to start work"
    Me.NavigationButtons = False
    Me.RecordSelectors = False
      
    DoCmd.OpenForm "frmWelcome", , , , , acHidden
End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub
Private Sub lblDeleteCustomers_Click()

    DoCmd.OpenForm "frmCustomerManagement", , , , , acHidden
    DoCmd.OpenForm "frmDeleteCustomers", , , , , acDialog
    
End Sub
Private Sub lblEnterNewCustomers_Click()
    DoCmd.OpenForm "frmCustomerManagement", , , , , acHidden
    DoCmd.OpenForm "frmEnterNewCustomers", , , , , acDialog
End Sub
Private Sub lblUpdateCustomers_Click()
    DoCmd.OpenForm "frmCustomerManagement", , , , , acHidden
    DoCmd.OpenForm "frmUpdateCustomers", , , , , acDialog
End Sub
Private Sub lblViewCustomers_Click()
    DoCmd.OpenForm "frmCustomerManagement", , , , , acHidden
    DoCmd.OpenForm "frmViewCustomers", , , , , acDialog
End Sub
Private Sub lblEnterNewCustomers_MouseMove(button As Integer, Shift As Integer, x As Single, y As Single)

    lblEnterNewCustomers.SpecialEffect = 1
    
End Sub
Private Sub lblEnterNewCustomers_Mousedown(button As Integer, Shift As Integer, x As Single, y As Single)

    lblEnterNewCustomers.SpecialEffect = 3
    
End Sub
Private Sub lblEnterNewCustomers_Mouseup(button As Integer, Shift As Integer, x As Single, y As Single)

    lblEnterNewCustomers.SpecialEffect = 1
    
End Sub

=====================================================================================
--frmDeleteCustomers
Option Compare Database
Option Explicit
Dim RecordNumber As Long
Dim MaxRecNo As Long
Dim fastNumber As Integer
'-------------------------
Dim SQLStmt As String
Dim INACTIVEsql As String
'Dim DELSql As String
Dim Reason As Byte 'to determine if the client give a proper reason for deletion
Dim DelNo As String 'the representing number for reasons of deletion
Dim recset As adodb.Recordset
'Dim CustomerSet As ADODB.Recordset
'------------------------
Dim load As Boolean
Dim DownArrowKey As Boolean
Dim cboChange As Boolean 'to clse the dropdown list properly
Dim DefaultSQL As String
Dim Flag As Boolean
Dim Deleteable As Boolean
Private Sub btnClose_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmCustomerManagement", , , , , acDialog
End Sub

Private Sub btnFirst_Click()
    If RecordNumber > 1 Then
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveFirst
        populateResult recset
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If

End Sub
Private Sub btnFastPrevious_Click()
    If RecordNumber > 1 Then
        If RecordNumber > fastNumber Then
            RecordNumber = RecordNumber - fastNumber
            recset.Move -fastNumber
            populateResult recset
        ElseIf RecordNumber < fastNumber Then
            RecordNumber = 1
            recset.MoveFirst
            populateResult recset
        End If
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnPrevious_Click()

    If RecordNumber > 1 Then
        RecordNumber = RecordNumber - 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MovePrevious
        populateResult recset
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If

End Sub
Private Sub btnLast_Click()
    If RecordNumber < MaxRecNo Then
        RecordNumber = MaxRecNo
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveLast
        populateResult recset
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
End Sub
Private Sub btnFastNext_Click()
    If RecordNumber < MaxRecNo Then
        If RecordNumber < MaxRecNo - fastNumber Then
            RecordNumber = RecordNumber + fastNumber
            recset.Move fastNumber
            populateResult recset
        Else
            RecordNumber = MaxRecNo
            recset.MoveLast
            populateResult recset
        End If
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
    
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnNext_Click()

    If RecordNumber < MaxRecNo Then
        RecordNumber = RecordNumber + 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveNext
        populateResult recset
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If

End Sub
Private Sub Form_Load()
    load = True
    Deleteable = False
    CheckActive ("frmDeleteCustomers")
    cboChange = True
    
    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    lblDateTime.RightMargin = 0
    
    Me.Caption = "Delete Customers"
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    btnSearchCustomers.Caption = "Search Customers"
    doInit 'to initialize the screen for a new search
    
    Me.txtCountry.RowSourceType = "Table/Query"
    EquipCountry
    Set Me.txtCountry.Recordset = G_CountrySet
    Flag = False
    txtCountry.Value = "Canada"
    Flag = True
    
    Me.txtRegion.RowSourceType = "Table/query"
    EquipRegion "Canada"
    Set Me.txtRegion.Recordset = G_RegionSet
    G_RegionSet.Find "Regions='Ontario'"
    txtRegion.Value = G_RegionSet.Fields(0)
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    fastNumber = 500
    Flag = False
    
    '------------------------------------
    EquipCustomerID Active
    Set Me.txtCustomerID.Recordset = G_CustomerSet ' only one word can populate combobox with recordset
    With txtCustomerID
        .ListWidth = .ListWidth
    End With
    '------------------------------------
    'DoCmd.OpenForm "frmCustomerManagement", , , , , acHidden
    txtCompanyName.SetFocus
    load = False
End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub
Private Sub doInit()
    'preparing the textbox for later search

    doReset1 txtCustomerID
    doReset txtContactName
    doReset txtContactTitle
    doReset txtPhone
    doReset txtFax
    doReset txtCompanyName
    doReset txtAddress
    
    doReset txtCity
    doReset1 txtRegion
    doReset1 txtCountry
    doReset txtPostalCode
    
    btnSearchCustomers.SetFocus
    
    RecordNumber = 1
    lblRecNo.Caption = ""
    OpenNavigationButtons False
    
    'below is reset every form-level parameter
    SQLStmt = "" 'to clear the SQL clause for next new search

End Sub
Private Sub doReset(tb As TextBox)
    'Open the textbox for putting in
    'If tb.Tag <> "s" Then
    tb.Enabled = True
    tb.Locked = False
    tb.Value = ""
    'End If
    'txtOrderID.SetFocus
    'only after the txtOrderID is set focus, can the last two textboxes be disabled
    'tb.enabled = enabled
    
End Sub
Private Sub doReset1(cbo As ComboBox)  ',Optional enabled As Boolean = True
    'Open the textbox for putting in
    'If tb.Tag <> "s" Then
    cbo.Enabled = True
    cbo.Locked = False
    cbo.Value = ""
    'End If
    'txtOrderID.SetFocus
    'only after the txtOrderID is set focus, can the last two textboxes be disabled
    'tb.enabled = enabled
    
End Sub
Private Sub AdjustNavigationArea()
        If MaxRecNo = 1 Then
            doInit
            RecordNumber = 0
            MaxRecNo = 0
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            recset.Delete
            If MaxRecNo > 1 Then
                If RecordNumber = 1 Then
                    MaxRecNo = MaxRecNo - 1
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                    
                    recset.MoveNext
                    populateResult recset
                    Exit Sub
                End If
                
                If RecordNumber <= MaxRecNo And RecordNumber > 1 Then
                
                    RecordNumber = RecordNumber - 1
                    MaxRecNo = MaxRecNo - 1
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                    
                    recset.MovePrevious
                    populateResult recset
                    Exit Sub
                End If
            End If
        End If
End Sub
Private Sub GoForClarify()

        DelNo = InputBox("Please type in the number of the reason deleting the Customer." & vbNewLine & _
            "1 Customer no long active" & vbNewLine & _
            "2 Customer information is wrong. It needs reentring." & vbNewLine & _
            "3 Other Reasons", "Deletion")
        If IsNumeric(DelNo) = True Then
            Dim a As Integer
            Dim b As Integer
            
            Reason = 0
            a = DelNo
            If a = DelNo Then
                For b = 1 To 3
                    If b = DelNo Then
                        Reason = Reason + 1
                    End If
                Next b
            End If
            If Reason = 0 Then
               MsgBox "A reason must be clarified before an Order can be deleted. " _
                & "Please make sure you type in the right number. ", vbOKOnly
            End If
        Else
            MsgBox "A reason must be clarified before an Order can be deleted. " _
                & "Please make sure you type in the right number. ", vbOKOnly
        End If
            
End Sub
Private Sub btnDeleteCustomers_Click()
    If Deleteable = True Then
        If txtCustomerID.ForeColor <> 12566463 Then '12566463 is color grey
            txtCustomerID.Enabled = True
            txtCustomerID.Locked = False
            txtCustomerID.SetFocus
            If Trim(txtCustomerID.Text) = "" Then
                MsgBox "Cannot delete: CustomerID is invalid."
                Exit Sub
            End If
            
            G_CustomerID = txtCustomerID.Value
            btnSearchCustomers.SetFocus
            txtCustomerID.Enabled = False
            txtCustomerID.Locked = True
            
            If MsgBox("Are you sure to delete the Customer [ID=" & G_CustomerID & "]?", _
                vbOKCancel, "Confirm Deletion [" & G_CustomerID & "]") = vbOK Then
                'DELsql = "DELETE FROM Customers WHERE CustomerID = '" & Replace(G_CustomerID, "'", "''") & "'"
                'doDelete DELsql
                GoForClarify 'to see if the client gives a proper reason to delete
                
                    If Reason > 0 Then 'continue to delete
                        '----------------------------------------------
                        INACTIVEsql = "Update Customers Set Status= " & DelNo & "  WHERE CustomerID='" & Replace(G_CustomerID, "'", "''") & "'"
                        AddStatus INACTIVEsql
                        '----------------------------------------------
                        Write_log -2, INACTIVEsql
                        AdjustNavigationArea
                        'recset.Delete in the above sub
                        EquipCustomerID Active
                        Set Me.txtCustomerID.Recordset = G_CustomerSet ' only one word can populate combobox with recordset
                        With txtCustomerID
                            .ListWidth = .ListWidth
                        End With
                    End If
            End If
        ElseIf txtCustomerID.ForeColor = 12566463 Then
            'the customerID is in grey
            MsgBox "Cant delete: This CustomerID is already inactive. Try selecting ''active Customers Only'' in " _
                & "the option buttons if you wish to check all the active Customers."
        End If

    Else
        MsgBox "Please search for the Customer before deletion." _
                & "Or Customer does not exist."
        
    End If
    
End Sub
Private Sub AddStatus(sql As String)

    Dim conn As adodb.Connection
    
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    conn.Execute sql
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Sub doDelete(sql As String)

    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress(C, 0)
    conn.Open
    conn.Execute sql
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Sub OpenNavigationButtons(button As Boolean)
    If button = True Then
        btnNext.Enabled = True
        btnFastNext.Enabled = True
        btnLast.Enabled = True
        btnPrevious.Enabled = True
        btnFastPrevious.Enabled = True
        btnFirst.Enabled = True
    Else
        btnNext.Enabled = False
        btnFastNext.Enabled = False
        btnLast.Enabled = False
        btnPrevious.Enabled = False
        btnFastPrevious.Enabled = False
        btnFirst.Enabled = False
    End If
End Sub
Private Sub btnSearchCustomers_Click()

    Dim TotalCustomers As Long
    If btnSearchCustomers.Caption = "Search Customers" Then
        Flag = True
        CheckActive "frmDeleteCustomers" 'always check first to get the lastest Active
        TotalCustomers = getCustomersCount(Active)
        
        MsgBox "Searching within a total of " & TotalCustomers & " Customers. Please wait.", vbOKOnly
        btnSearchCustomers.SetFocus
        btnSearchCustomers.Caption = "Searching"
        btnDeleteCustomers.SetFocus
        btnSearchCustomers.Enabled = False
        load = True
        doSearch
        'determine deleteable/openNavigationButtons within the sub of doSearch
        'because not sure reseach returns nothing or sth
        btnSearchCustomers.Enabled = True
        btnSearchCustomers.SetFocus
        btnSearchCustomers.Caption = "Click to Reset"
        Dim a As Control
        
        For Each a In Me.Controls
            If TypeOf a Is TextBox Then
                a.Enabled = False
            End If
        Next a
        
        'lblPrompt.Caption = ""
    Else ' it is "Click to Reset and Reenter" switching btw search and clear
        doInit
        load = False
        Deleteable = False
        Flag = False
        btnSearchCustomers.Caption = "Search Customers"
    End If

End Sub
Private Sub doSearch()
    
    Dim sql As String

    Dim conn As adodb.Connection
    Set recset = New adodb.Recordset

    sql = setSQLSelect 'to assign static portion of the query
    sql = setSQLWhere(sql) 'to add WHERE clause collecting entered values
    SQLStmt = sql '!reserve the query in the form level
    'If InStr(SQLStmt, "where") = 0 Then 'Select* from Customers

    Set conn = New adodb.Connection 'obtain the connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    
    recset.CursorLocation = adUseClient
    recset.Open SQLStmt, conn, adOpenStatic, adLockBatchOptimistic

    If recset.RecordCount = 0 Then
        MsgBox "No Customers found. Please try enter some more information. "
        doQuery
        Write_log 2, "Searching information on " & Right(sql, Len(sql) - InStr(1, sql, "WHERE") + 1)
        Deleteable = False
        OpenNavigationButtons False
       
    Else
   
        Set Me.Recordset = recset 'only one word to populate form with recordset
        MaxRecNo = recset.RecordCount
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveFirst
        populateResult recset
        Deleteable = True
        OpenNavigationButtons True
    '-----------------------------------
        If InStr(SQLStmt, "where") = 0 Then
            Write_log 2, "Searching all Customer information"
        Else
            Write_log 2, "Searching information on " & Right(sql, Len(sql) - InStr(1, sql, "WHERE") + 1)
        End If
    End If
    
End Sub
Private Sub doQuery()

    Dim conn As adodb.Connection
    Dim rs As adodb.Recordset
    Dim i As Long

    Set rs = recset
    
    MaxRecNo = 0
    If Not rs.BOF Then
        rs.MoveFirst
        MaxRecNo = 1
        Do While Not rs.EOF
            rs.MoveNext
            If Not rs.EOF Then
                MaxRecNo = MaxRecNo + 1
            End If
        Loop
    End If

    
    If RecordNumber > MaxRecNo Then
        RecordNumber = MaxRecNo
    Else
        If MaxRecNo = 0 Then
            RecordNumber = 0
        End If
    End If
    
    If MaxRecNo > 0 Then
        rs.MoveFirst 'this is the step required, because the rs is one way direction,for previous code,the rs has reached the end already
        i = 1
    'Do While rs.EOF=FALSE is the same as below
    Do While Not rs.EOF
       If i = RecordNumber Then
        populateResult rs
       Exit Do
       Else
            rs.MoveNext
            i = i + 1
       End If
    Loop
    
    End If
    
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Function setSQLSelect() As String
    If Active = 1 Then 'only active customers
    
        setSQLSelect = "SELECT CustomerID, CompanyName, ContactName, ContactTitle, Address, " _
                    & "City, Region, PostalCode, Country, Phone, Fax FROM Customers WHERE Status is null"
    Else
        
        setSQLSelect = "SELECT CustomerID, CompanyName, ContactName, ContactTitle, Address, " _
                    & "City, Region, PostalCode, Country, Phone, Fax FROM Customers "
    End If
    
End Function
Private Function setSQLWhere(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt
    sql = addEnteredValue1(sql, txtCustomerID)
    sql = addEnteredValue(sql, txtContactName)
    sql = addEnteredValue(sql, txtContactTitle)
    sql = addEnteredValue(sql, txtPhone)
    sql = addEnteredValue(sql, txtFax)
    sql = addEnteredValue(sql, txtCompanyName)
    sql = addEnteredValue(sql, txtAddress)
    sql = addEnteredValue(sql, txtCity)
    sql = addEnteredValue1(sql, txtRegion)
    sql = addEnteredValue1(sql, txtCountry)
    sql = addEnteredValue(sql, txtPostalCode)
    sql = sql & " Order by CustomerID"
    setSQLWhere = sql
   
End Function
Private Function addEnteredValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    tb.SetFocus
    tmpSQL = sql
    
    
    If Trim(tb.Text) <> "" And Active = 1 Then ' if anything is entered on this textbox
        'WHERE, no need as we have 'where Status is null' already
        'If InStr(1, tmpSQL, " WHERE ") <> 0 Then
            tmpSQL = tmpSQL & " AND "
        'Else
            'tmpSQL = tmpSQL & " WHERE "
        'End If
        
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "'" & CDate(CStr(tb.Text)) & "'"
            Case "N"
                tmpSQL = tmpSQL & tb.Text
        
        End Select

    End If
    If Trim(tb.Text) <> "" And Active = 2 Then ' if anything is entered on this textbox
        'WHERE,
        If InStr(1, tmpSQL, " WHERE ") <> 0 Then
            tmpSQL = tmpSQL & " AND "
        Else
            tmpSQL = tmpSQL & " WHERE "
        End If
        
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "'" & CDate(CStr(tb.Text)) & "'"
            Case "N"
                tmpSQL = tmpSQL & tb.Text
        
        End Select

    End If
    

    addEnteredValue = tmpSQL

End Function
Private Function addEnteredValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql
    
    If Trim(cbo.Text) <> "" And Active = 1 Then ' if anything is entered on this textbox
            tmpSQL = tmpSQL & " AND "
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "'" & CDate(CStr(cbo.Text)) & "'"
            Case "N"
                tmpSQL = tmpSQL & cbo.Text
        
        End Select

    End If
        If Trim(cbo.Text) <> "" And Active = 2 Then ' if anything is entered on this textbox
        'WHERE
        If InStr(1, tmpSQL, " WHERE ") <> 0 Then
            tmpSQL = tmpSQL & " AND "
        Else
            tmpSQL = tmpSQL & " WHERE "
        End If
        
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "'" & CDate(CStr(cbo.Text)) & "'"
            Case "N"
                tmpSQL = tmpSQL & cbo.Text
        
        End Select

    End If

    addEnteredValue1 = tmpSQL

End Function
Private Sub populateResult(rs As adodb.Recordset)

    setSearchedValue1 txtCustomerID, rs, 0
    setSearchedValue txtCompanyName, rs, 1
    setSearchedValue txtContactName, rs, 2
    setSearchedValue txtContactTitle, rs, 3
    setSearchedValue txtAddress, rs, 4
    setSearchedValue txtCity, rs, 5
    setSearchedValue1 txtRegion, rs, 6
    setSearchedValue txtPostalCode, rs, 7
    setSearchedValue1 txtCountry, rs, 8
    setSearchedValue txtPhone, rs, 9
    setSearchedValue txtFax, rs, 10
   
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    tb.Locked = False
    tb.Enabled = True
    'tb.SetFocus
    tb.Value = val
    tb.Locked = True

End Sub
Private Sub setSearchedValue1(cbo As ComboBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    cbo.Locked = False
    cbo.Enabled = True
    cbo.Value = val
    If cbo.Name = "txtCustomerID" Then
        CheckInactiveCustomerIDs (val)
        If CheckInactiveCustomerID = True Then ' the customerID IS INACTIVE
            cbo.ForeColor = RGB(191, 191, 191)
        Else: cbo.ForeColor = vbBlack
        End If
    End If
    cbo.Locked = True

End Sub



Private Sub txtCustomerID_Change()
If DownArrowKey = False Then
    If load = False And cboChange = True Then
        CheckActive "frmDeleteCustomers" 'get the lastest optionbuttons selection
        DefaultSQL = "select CustomerID, CompanyName " & _
                  "FROM Customers WHERE "
        'EquipCustomerID Active 'reEquip txtCustomerID
        FilterCboAsYouType G_CustomerSet, txtCustomerID, DefaultSQL, "CustomerID", "CompanyName"
    
        Set Me.txtCustomerID.Recordset = FilterSet
        txtCustomerID.Dropdown

    End If
End If
End Sub
Private Sub txtCustomerID_gotfocus()
    If load = False And cboChange = True Then
        CheckActive "frmDeleteCustomers"
        DefaultSQL = "select CustomerID, CompanyName " & _
                  "FROM Customers WHERE "
        'EquipCustomerID Active
        FilterCboAsYouType G_CustomerSet, txtCustomerID, DefaultSQL, "CustomerID", "CompanyName"
    
        Set Me.txtCustomerID.Recordset = FilterSet
        txtCustomerID.Dropdown

    End If
       
End Sub
Private Sub txtCustomerID_AfterUpdate()
    'txtCustomerID.SetFocus
    If Trim(txtCustomerID) <> "" Then
    
        Dim newCustomerID As String
        newCustomerID = Me.txtCustomerID
        
        CheckInputWithPK "Customers", newCustomerID, "CustomerID", txtCustomerID
        If Found = False Then
            MsgBox "This CustomerID is not valid. Please check again.", vbOKOnly
            'txtCustomerID.SetFocus
            txtCustomerID.Value = ""
            txtCompanyName.SetFocus
            txtCustomerID.SetFocus
        End If

    Else
        Exit Sub
    End If
        
End Sub
Private Sub txtCustomerID_Click()
    cboChange = False
    SendKeys "{F4}"
    'close the dropdownlist in one move
    cboChange = True
End Sub
Private Sub txtCustomerID_KeyDown(keycode As Integer, Shift As Integer)
    'If KeyCode = vbKeyDown And Shift <> acAltMask Then
    If keycode = vbKeyDown Or keycode = vbKeyUp Then
        DownArrowKey = True
        txtCustomerID.Dropdown
    Else
        DownArrowKey = False
    
    End If
End Sub
Private Sub txtPhone_AFTERupdate()
If Flag = False Then

    If IsNull(Trim(txtPhone)) = True Then ' if nothing typed in
       
        Exit Sub
    Else
    
        Dim i As Byte
        Dim Extract As String
        For i = 1 To Len(txtPhone.Value)
            If Mid(txtPhone.Value, i, 1) <> "(" And _
                Mid(txtPhone.Value, i, 1) <> ")" And _
                Mid(txtPhone.Value, i, 1) <> "-" And _
                Mid(txtFax.Value, i, 1) <> " " Then
                Extract = Extract & Mid(txtPhone.Value, i, 1)
            End If
        Next i
            If IsNumeric(Extract) = False Or Len(Extract) < 8 Or InStr(1, Extract, ".") Then
                MsgBox "Phone must be at least a 8-digit number and should not " _
                    & "include punctuation marks other than ""()"" and ""-"". Please check again.", vbOKOnly
            txtPhone = " "
            End If
    End If
End If
End Sub
Private Sub txtFax_AFTERupdate()
    If Flag = False Then
    
        If IsNull(Trim(txtFax)) = True Then  ' if nothing typed in
            Exit Sub
        Else
            Dim i As Byte
            Dim Extract As String
            For i = 1 To Len(txtFax.Value)
                If Mid(txtFax.Value, i, 1) <> "(" And _
                    Mid(txtFax.Value, i, 1) <> ")" And _
                    Mid(txtFax.Value, i, 1) <> "-" And _
                    Mid(txtFax.Value, i, 1) <> " " Then
                    Extract = Extract & Mid(txtFax.Value, i, 1)
                End If
            Next i
                If IsNumeric(Extract) = False Or Len(Extract) < 8 Or InStr(1, Extract, ".") Then
                    MsgBox "Fax must be at least a 8-digit number and should not " _
                        & "include punctuation marks other than ""()"" and ""-"". Please check again.", vbOKOnly
                txtFax.SetFocus
                txtFax = " "
                End If
        End If
    End If
End Sub
Private Sub txtCountry_afterupdate()
'ENTER FORMs use afterdate only for cascading
'all invalid input will go to NotInList event and addnew there
'UPDATE FORMs use afterupdate to check/cascading/addnew

   If Trim(txtCountry.Text) <> "" Then
    'the cboShipcountry.RowSource must be'Table/Query'
    'to use.text
        Dim newCountry As String
        newCountry = Me.txtCountry
        
        If IsNumeric(newCountry) Then
            GetBoundColumnValue "Country", "CountryList", "CountryID", newCountry, G_CountryName
            If G_CountryName = "" Then 'means there is no such value matching this Country number
                MsgBox "No Country Matches this ID number. Please check again."
                txtCountry = ""
            Else 'there is a country matching this number
                Me.txtCountry = G_CountryName
                'make the cbo populate G_countryname
            End If
            
        Else 'there is string input
            
            CheckInputWithPK "CountryList", newCountry, "Country", txtCountry, G_CountryName
            If Found = False Then
                'If MsgBox("Are you sure to add the new item '" & newCountry _
                    & "' to the list?", vbYesNo, "New Item") = vbYes Then
                    'G_CountryName = newCountry
                    'DoInsert newCountry
                    'EquipCountry
                    'Set txtCountry.Recordset = G_CountrySet
                    'Write_log 111, "Insert new category in CountryList: " _
                        & newCountry & " ,CountryName=" & G_CountryName, 0
                'Else
                MsgBox "That is not an item of the list. Please check again."
                txtCountry = ""
                G_CountryName = ""
                EquipCountry
                Set txtCountry.Recordset = G_CountrySet
                txtCompanyName.SetFocus
                txtCountry.SetFocus
            
            Else
                G_CountryName = newCountry
            End If
        End If
    Else 'there is nothing input
        G_CountryName = ""
        'for region to return nothing
        'otherwise the region still follow the previous CountryName
    End If
    
    EquipRegion G_CountryName
    Set Me.txtRegion.Recordset = G_RegionSet
    Me.txtRegion = txtRegion.ItemData(8)
    'default is Ontario

End Sub
Private Sub txtCountry_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub txtCountry_GotFocus()

    Me.txtCountry.Dropdown
    
End Sub
Private Sub txtCountry_KeyDown(keycode As Integer, Shift As Integer)

    Me.txtCountry.Dropdown
    
End Sub
Private Sub txtRegion_gotfocus()

    Me.txtRegion.Dropdown
End Sub
Private Sub txtRegion_KeyDown(keycode As Integer, Shift As Integer)

    Me.txtRegion.Dropdown
    
End Sub
======================================================================================
--frmDeleteOrderDetails
Option Compare Database
Option Explicit
Dim Flag As Boolean
Dim conn As New adodb.Connection
Dim DetailsSet As adodb.Recordset
Dim ProductSet As adodb.Recordset
Dim newProductID As Integer ' prepare to get G_ProductID
Dim SQLStmt As String
Dim logString As String
Dim MaxRecNo As Long
Dim RecordNumber As Long
Dim fastNumber As Integer
Dim j As Byte
Dim i As Integer 'to record which DB is involved
Dim UpdateSQL As String
Dim DBNo As Integer
Dim DELSql As String
Dim INACTIVEsql As String
Private Sub btnClose_Click()
    DoCmd.Close
End Sub
Private Sub fetchDetailsRS(rs As adodb.Recordset)
        
    newProductID = ProductSet.Fields(0)
    G_ProductID = newProductID

    Dim sql As String
    sql = "SELECT * from OrderDetails_" & i & " where Status is null AND OrderID=" & G_OrderID & " AND ProductID=" & G_ProductID
    Set DetailsSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    '---------------------------------------------------------
    DetailsSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    DetailsSet.Open sql, conn, adOpenStatic, adLockBatchOptimistic
    '----------------------------------------------------------
    
End Sub
Private Sub btnFirst_Click()
    Flag = True
    If RecordNumber > 1 Then
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        ProductSet.MoveFirst
        populateProductID ProductSet
        fetchDetailsRS ProductSet
        Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If
    Flag = False
End Sub
Private Sub btnFastPrevious_Click()
    Flag = True
    If RecordNumber > 1 Then
        If RecordNumber > fastNumber Then
            RecordNumber = RecordNumber - fastNumber
            ProductSet.Find "ProductID=" & txtProductID.Column(0)
            'the above is to let ProductSet to move to the right position
            'as the dropdownlist selected
            ProductSet.Move -fastNumber
            populateProductID ProductSet
            fetchDetailsRS ProductSet
            Set Me.Recordset = DetailsSet
            populateResult DetailsSet
        ElseIf RecordNumber < fastNumber Then
            RecordNumber = 1
            ProductSet.MoveFirst
            populateProductID ProductSet
            fetchDetailsRS ProductSet
            Set Me.Recordset = DetailsSet
            populateResult DetailsSet
        End If
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    Flag = False
End Sub
Private Sub btnPrevious_Click()
    Flag = True
    If RecordNumber > 1 Then
        RecordNumber = RecordNumber - 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        ProductSet.Find "ProductID=" & txtProductID.Column(0)
        'the above is to let ProductSet to move to the right position
        'as the dropdownlist selected
        ProductSet.MovePrevious
        populateProductID ProductSet
        fetchDetailsRS ProductSet
        Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If
    Flag = False
End Sub
Private Sub btnLast_Click()
    Flag = True
    If RecordNumber < MaxRecNo Then
        RecordNumber = MaxRecNo
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        ProductSet.MoveLast
        populateProductID ProductSet
        fetchDetailsRS ProductSet
        Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
    Flag = False
End Sub
Private Sub btnFastNext_Click()
    Flag = True
    If RecordNumber < MaxRecNo Then
        If RecordNumber < MaxRecNo - fastNumber Then
            RecordNumber = RecordNumber + fastNumber
            ProductSet.Find "ProductID=" & txtProductID.Column(0)
            'the above is to let ProductSet to move to the right position
            'as the dropdownlist selected
            ProductSet.Move fastNumber
            populateProductID ProductSet
            fetchDetailsRS ProductSet
            Set Me.Recordset = DetailsSet
            populateResult DetailsSet
        Else
            RecordNumber = MaxRecNo
            ProductSet.MoveLast
            populateProductID ProductSet
            fetchDetailsRS ProductSet
            Set Me.Recordset = DetailsSet
            populateResult DetailsSet
        End If
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
    
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    Flag = False
End Sub
Private Sub btnNext_Click()
    Flag = True
    If RecordNumber < MaxRecNo Then
        RecordNumber = RecordNumber + 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        ProductSet.Find "ProductID=" & txtProductID.Column(0)
        'the above is to let ProductSet to move to the right position
        'as the dropdownlist selected
        ProductSet.MoveNext
        populateProductID ProductSet
        fetchDetailsRS ProductSet
        Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
    Flag = False
End Sub
Private Sub AdjustNavigationArea()
        If MaxRecNo = 1 Then
            doInit
            RecordNumber = 0
            MaxRecNo = 0
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            
        Else 'DetailsSet.Delete, will generate new DetailsSet later
            
            If MaxRecNo > 1 Then
                If RecordNumber = 1 Then
                    MaxRecNo = MaxRecNo - 1
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                    
                    ProductSet.Find "ProductID=" & G_ProductID
                    ProductSet.Delete
                    ProductSet.MoveNext
                    populateProductID ProductSet
                    fetchDetailsRS ProductSet
                    populateResult DetailsSet
                    Exit Sub
                End If
                
                If RecordNumber < MaxRecNo And RecordNumber > 1 Then
                
                    RecordNumber = RecordNumber - 1
                    MaxRecNo = MaxRecNo - 1
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                    
                    ProductSet.Find "ProductID=" & G_ProductID
                    ProductSet.Delete
                    ProductSet.MovePrevious
                    populateProductID ProductSet
                    fetchDetailsRS ProductSet
                    populateResult DetailsSet
                    Exit Sub
                End If
            End If
        End If
End Sub
Private Sub btnDelete_Click()
    txtOrderID.Enabled = True
    txtOrderID.Locked = False
    txtProductID.Enabled = True
    txtProductID.Locked = False
    '-------------------------
    txtOrderID.SetFocus
    If Trim(txtOrderID.Text) = "" Or txtOrderID.Text = "0" Then
        MsgBox "Cannot delete: OrderID is invalid."
        Exit Sub
    End If
    G_OrderID = txtOrderID.Text
    '--------------------------
    txtProductID.SetFocus
    If Trim(txtProductID.Text) = "" Or txtProductID.Text = "0" Then
        MsgBox "Cannot delete: ProductID is invalid."
        Exit Sub
    End If
    G_ProductID = txtProductID.Text
    '--------------------------
    txtOrderID.Enabled = False
    txtOrderID.Locked = True
    btnClose.SetFocus
    txtProductID.Enabled = False
    txtProductID.Locked = True
    '-------------------------------------------
       
    If MsgBox("Are you sure to delete the OrderDetails [ProductID=" & G_ProductID & "]?", _
        vbOKCancel, "Confirm Deletion [" & G_OrderID & "]") = vbOK Then
        Dim DelNo As String
        DelNo = InputBox("Please type in the number of the reason deleting the OrderDetails." & vbNewLine & _
            "1 Client Canceled partial Order" & vbNewLine & _
            "2 Client Returned partial of the whole Items" & vbNewLine & _
            "3 Items Out of Stock" & vbNewLine & _
            "4 Item Lost on Delivery" & vbNewLine & _
            "5 Other Reasons", "Deletion")
        'to check if the client has typed the right number
        If IsNumeric(DelNo) = True Then
            Dim a As Integer
            Dim b As Integer
            Dim Count As Byte
            Count = 0
            a = DelNo
            If a = DelNo Then
                For b = 1 To 5
                    If b = DelNo Then
                        Count = Count + 1
                    End If
                Next b
            End If
            'if the number typed in is right
            If Count > 0 Then
        
                Dim i As Integer
                i = getDBnumber(G_OrderID)
                DBNo = i
                'DELSql = "DELETE FROM OrderDetails_" & i & " WHERE OrderID = " & G_OrderID
                'doDelete DELSql, DBNo
                '----------------------------------------------
                INACTIVEsql = "Update OrderDetails_" & i & " Set Status= " & DelNo _
                            & " WHERE OrderID=" & G_OrderID & " AND ProductID=" & G_ProductID
                            
                            
                AddStatus INACTIVEsql, DBNo
                '----------------------------------------------
                
                Write_log -2, INACTIVEsql
                AdjustNavigationArea
            Else
                MsgBox "A reason must be clarified before OrderDetails can be deleted. " _
                    & "Please make sure you type in the right number. ", vbOKOnly
            End If
        Else
            MsgBox "A reason must be clarified before OrderDetails can be deleted. " _
                & "Please make sure you type in the right number. ", vbOKOnly
        End If
    End If
           
End Sub
Private Sub AddStatus(sql As String, i As Integer)

    Dim conn As adodb.Connection
    
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)
    conn.Open
    conn.Execute sql
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Sub doDelete(sql As String, i As Byte) 'not for this case

    Dim conn As adodb.Connection
    
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)
    conn.Open
    conn.Execute sql
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Sub populateResult(rs As adodb.Recordset)

    'setSearchedValue txtOrderID, rs, 0
    'setSearchedValue1 txtProductID, rs, 1
    setSearchedValue txtUnitPrice, rs, 2
    setSearchedValue txtQuantity, rs, 3
    setSearchedValue txtDiscount, rs, 4
    
End Sub
Private Sub populateProductID(rs As adodb.Recordset)

    setSearchedValue1 txtProductID, rs, 0
    
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    tb.Locked = False
    tb.Enabled = True
    'tb.SetFocus
    
    tb.Value = val

    tb.Locked = True

End Sub
Private Sub setSearchedValue1(cbo As ComboBox, rs As adodb.Recordset, fn As Integer)
    txtProductID.LimitToList = False
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    cbo.Locked = False
    cbo.Enabled = True
    cbo.Undo
    'cbo.SetFocus
    cbo.Value = val
    cbo.LimitToList = True
    'If cbo.Name <> "txtProductID" Then
        'cbo.Locked = True
    'End If
    'dont lock ProductID as the combobox needs the client to choose from dropdownlist
End Sub
Private Sub doInit()
    'preparing the textbox for later search
    'doReset txtOrderID
    'doReset txtProductID
    doReset txtUnitPrice
    doReset txtQuantity
    doReset txtDiscount
       
    'RecordNumber = 1
    lblRecNo.Caption = ""
    btnNext.Enabled = False
    btnFastNext.Enabled = False
    btnLast.Enabled = False
    btnPrevious.Enabled = False
    btnFastPrevious.Enabled = False
    btnFirst.Enabled = False
    
    'below is reset every form-level parameter
    SQLStmt = "" 'to clear the SQL clause for next new search
    logString = ""
    j = 0

End Sub
Private Sub doReset(tb As TextBox)
    'Open the textbox for putting in
    'If tb.Tag <> "s" Then
    tb.Enabled = True
    tb.Locked = False
    tb.SetFocus
    tb.Text = ""
    'End If
    'txtOrderID.SetFocus
    'only after the txtOrderID is set focus, can the last two textboxes be disabled
    'tb.enabled = enabled
    
End Sub
Private Sub doReset1(cbo As ComboBox)  ',Optional enabled As Boolean = True
    'Open the textbox for putting in
    'If tb.Tag <> "s" Then
    cbo.Enabled = True
    cbo.Locked = False
    'cbo.SetFocus
    cbo.Value = ""
    'End If
    'txtOrderID.SetFocus
    'only after the txtOrderID is set focus, can the last two textboxes be disabled
    'tb.enabled = enabled
    
End Sub
Private Sub Form_Load()
    Flag = True 'form starts loading, input validation is not working for txtProductID
    txtProductID.LimitToList = False
    
    'populate the current date_time
    lblDateTime.Caption = Get_DT
    'turn on the timer on the form
    Me.TimerInterval = 1000 'set the interval of timer to 1 second =1000ms
    lblDateTime.RightMargin = 0
    
    Me.Caption = "Delete OrderDetails"
    'No display navi. Buttons (on the bottom)
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    
    Me.Filter = "txtOrderID =" & G_OrderID
    Me.FilterOn = True
    txtOrderID.Enabled = True
    txtOrderID.Locked = False
    txtOrderID.SetFocus
    txtOrderID.Text = G_OrderID
    txtOrderID.Locked = True
    txtProductID.Locked = True
    txtUnitPrice.Locked = True
    txtQuantity.Locked = True
    txtDiscount.Locked = True
    'locked in case the client opens an empty form
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    Dim y As Control
    For Each y In Me.Controls
        If TypeOf y Is TextBox Then
        y.BackColor = vbWhite
        End If
    Next y
    
    '------------------------------------
    Dim sql As String
    
    i = getDBnumber(G_OrderID)
    ' fetch data from external Access DBs
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)
    conn.Open
    
    'below is to set dropdown list of txtProductID
    
    sql = "SELECT ProductID from OrderDetails_" & i & " where Status is null AND OrderID=" & G_OrderID
        
    Set ProductSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    '---------------------------------------------------------
    ProductSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    ProductSet.Open sql, conn, adOpenStatic, adLockBatchOptimistic
    '----------------------------------------------------------
    If ProductSet.RecordCount > 0 Then
        Set Me.txtProductID.Recordset = ProductSet
    Else
         MsgBox "There are no Order Details for this OrderID yet. " _
            & "Please go to form Enter New Order Details if you wish to enter any information."
    End If
    If ProductSet.RecordCount > 0 Then
        ProductSet.MoveFirst
        populateProductID ProductSet
        
        MaxRecNo = ProductSet.RecordCount
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        
        newProductID = ProductSet.Fields(0)
        G_ProductID = newProductID
        
        sql = "SELECT * from OrderDetails_" & i & " where Status is null AND OrderID=" & G_OrderID & " AND ProductID=" & G_ProductID
        Set DetailsSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
        '---------------------------------------------------------
        DetailsSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
        DetailsSet.Open sql, conn, adOpenStatic, adLockBatchOptimistic
        '----------------------------------------------------------
        Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "There are no Order Details for this OrderID yet. " _
            & "Please go to form Enter New Order Details if you wish to enter any information."
        
    End If

    '-------------------------
    txtOrderID.SetFocus

    j = 0
    UpdateSQL = " "
    
    If Fix(MaxRecNo / 10) < 1 Then
        fastNumber = 1
    Else
        fastNumber = Fix(MaxRecNo / 10)
    End If
    btnDelete.Caption = "Delete"
    Flag = False 'txtProductID is checking 'limit to list' now
    txtProductID.LimitToList = True
End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub

Private Sub txtProductID_AfterUpdate()
    Dim sql As String
    If Flag = False Then
        'newProductID = txtProductID.Column(0)
        'the text.column(0) here =null, so we need to change to value property
        If IsNull(txtProductID) = True Then
            MsgBox "ProductID cannot be empty.", vbOKOnly
            
            ProductSet.MoveFirst
            
        ElseIf IsNumeric(txtProductID) = True Then
            
            newProductID = txtProductID
            If newProductID = txtProductID And newProductID > 0 Then
                'here cant use productset.fiels(0)=previous ProductID, not the value just chosen
                G_ProductID = newProductID
                ProductSet.Find "ProductID=" & G_ProductID
                If ProductSet.EOF = True Then
                    MsgBox "There is no such ProductID matching with this OrderID. Please check again."
                    Set Me.txtProductID.Recordset = ProductSet
                    ProductSet.MoveFirst
                End If

            Else
                MsgBox "ProductID must an positive interger. Please check again.", vbOKOnly
                Set Me.txtProductID.Recordset = ProductSet
                ProductSet.MoveFirst
            End If
                
          ElseIf IsNumeric(txtProductID) = False Then
                MsgBox "ProductID must an positive interger. Please check again.", vbOKOnly
                Set Me.txtProductID.Recordset = ProductSet
                ProductSet.MoveFirst
           End If
            populateProductID ProductSet
                            
            fetchDetailsRS ProductSet
            populateResult DetailsSet
            RecordNumber = txtProductID.ListIndex + 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
      
    End If
End Sub

Private Sub txtProductID_keydown(keycode As Integer, Shift As Integer)

    If txtProductID.ListWidth = txtProductID.ListWidth And keycode = vbKeyDown Then
        txtProductID.Dropdown
    End If
    
End Sub
Private Sub txtProductID_Change()
    txtProductID.Dropdown
End Sub
Private Sub txtProductID_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub txtProductID_gotfocus()

    Me.txtProductID.Dropdown
    
End Sub

=========================================================================================
--frmDeleteOrders 
Option Compare Database
Option Explicit
Dim RecordNumber As Long
Dim MaxRecNo As Long
Dim fastNumber As Integer
Dim Threshold As Long
Dim howmanyThreshold As Long
Dim LastRows As Long 'to records how many records remain in the last fraction
Dim AbsoluteRowNo As Long
Dim RowsToFetch As Long
Dim RowsToJump As Long
Dim StartOrderID As Long
Dim SQLStmt As String
Dim DELSql As String
Dim INACTIVEsql As String
'----------------------------------------
Dim recset As adodb.Recordset
Dim recsetDetails As adodb.Recordset
Dim CustomerSet As adodb.Recordset
Dim EmployeeSet As adodb.Recordset
Dim ShipperSet As adodb.Recordset
Dim load As Boolean 'to tell FilterAsYouType to work or not
Dim DefaultSQL As String 'a parameter inthe filtercboasyoutype
'-----------------------------------------
Dim Flag As Boolean 'to switch between two navigation systems
Dim cboChange As Boolean
Dim DownArrowKey As Boolean 'to indicate when then downarrow key is pressed

Dim Deleteable As Boolean
Dim AccuString As String
Dim j As Byte ' to count how many criteria has the user not input
Dim logString As String
Dim DBNo As Integer 'to record which DB is in use
Private Sub btnClose_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmOrderManagement", , , , , acDialog
End Sub
Private Sub btnLast_Click()
    'MaxRecNo = getCount
    LastRows = MaxRecNo Mod Threshold
    If Flag = False Then
    
        If RecordNumber < MaxRecNo Then
            RecordNumber = MaxRecNo
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
    Else
        AbsoluteRowNo = recset.AbsolutePosition
        RowsToJump = recset.RecordCount - AbsoluteRowNo
        
        '--------------------------------------------------------------------------------------------------------------
        If RecordNumber = MaxRecNo Then ' now in the last part
            MsgBox "You've reached the end of the Records", vbOKOnly
        '--------------------------------------------------------------------------
        ElseIf RecordNumber + RowsToJump < MaxRecNo Then
        'the end of the current range is not the end of data
            StartOrderID = getNumber 'maxOrderID+1
            MaxRecNo = getCount
            LastRows = MaxRecNo Mod Threshold 'to make sure the last one is the latest
            fetchRS "Desc", StartOrderID, LastRows
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            RecordNumber = MaxRecNo
            '---------------------
        Else
        'in the lastRows, just move to the last record
            RecordNumber = MaxRecNo
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            RecordNumber = MaxRecNo
              
        End If
        '-----------------------------------------------------------------
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnFastNext_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    
    If Flag = False Then
    
        If RecordNumber < MaxRecNo Then
            If RecordNumber < MaxRecNo - fastNumber Then
                RecordNumber = RecordNumber + fastNumber
                recset.Move fastNumber
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            Else
                RecordNumber = MaxRecNo
                recset.MoveLast
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            End If
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
        
    Else
        '-------------------------------------------------
     
        AbsoluteRowNo = recset.AbsolutePosition
        ' to get the current row number
        RowsToJump = recset.RecordCount - AbsoluteRowNo
        'the distance towards the end of this current recordset
        
        
        If AbsoluteRowNo + fastNumber <= recset.RecordCount Then
        
            RecordNumber = RecordNumber + fastNumber
            recset.Move fastNumber
            
        Else 'fetch new
            If RecordNumber + fastNumber >= MaxRecNo Then
                btnLast_Click
            ElseIf RecordNumber + fastNumber < MaxRecNo Then
                If RecordNumber + RowsToJump + Threshold <= MaxRecNo Then
                    RowsToFetch = Threshold

                ElseIf RecordNumber + RowsToJump + Threshold > MaxRecNo Then
                    RowsToFetch = MaxRecNo - RecordNumber - RowsToJump

                End If
                RecordNumber = RecordNumber + fastNumber
                recset.MoveLast
                StartOrderID = recset.Fields(0)
                fetchRS "Asc", StartOrderID, RowsToFetch
                recset.MoveFirst
                recset.Move fastNumber - RowsToJump - 1
            End If
            
            
        End If
    
        populateOrders recset
        
        G_OrderID = recset.Fields(0)
        fetchRSDetails G_OrderID
        populateOrderDetails recsetDetails
            '---------------------
       
        '------------------------------------------------------------------
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                
End Sub
Private Sub btnNext_Click()
    
    If Flag = False Then
        If RecordNumber < MaxRecNo Then
            RecordNumber = RecordNumber + 1
   
            recset.MoveNext
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
    Else
        '-----------------------------------------------------------
        AbsoluteRowNo = recset.AbsolutePosition
        ' to get the current row number
        RowsToJump = recset.RecordCount - AbsoluteRowNo
        'the distance towards the end of this current recordset
        
        If RecordNumber = MaxRecNo Then
            MsgBox "You've reached the end of the Records", vbOKOnly
            
        ElseIf RecordNumber < MaxRecNo Then
        RecordNumber = RecordNumber + 1
        
            If AbsoluteRowNo + 1 <= recset.RecordCount Then
                recset.MoveNext
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                
            Else
                ' need to fetch new data
                MaxRecNo = getCount
                LastRows = MaxRecNo Mod Threshold
                If RecordNumber + RowsToJump + Threshold <= MaxRecNo Then
                    RowsToFetch = Threshold

                Else
                    RowsToFetch = LastRows
                End If
                '---------------------
                StartOrderID = recset.Fields(0)
                fetchRS "Asc", StartOrderID, Threshold
                recset.MoveFirst
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            
            End If
        End If
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnFirst_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    If Flag = False Then
    
        If RecordNumber > 1 Then
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
    Else

        '-------------------------------
        If RecordNumber = 1 Then ' the record is already the beginning of the records
            MsgBox "You've reached the beginning of the Records", vbOKOnly

        
        ElseIf RecordNumber > 1 And RecordNumber <= Threshold Then ' the record is in the first range
        
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            
        ElseIf RecordNumber > Threshold Then
        
            StartOrderID = getMinNumber - 1
            fetchRS "Asc", StartOrderID, Threshold
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
            RecordNumber = 1
            
        
        End If
        '-----------------------------------
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnFastPrevious_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    If Flag = False Then
        If RecordNumber > 1 Then
            If RecordNumber > fastNumber Then
                RecordNumber = RecordNumber - fastNumber
                recset.Move -fastNumber
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            ElseIf RecordNumber < fastNumber Then
                RecordNumber = 1
                recset.MoveFirst
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            End If
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
        
    Else
    
        '-------------------------------------------------------------------
        If RecordNumber = 1 Then
            'the current record is exactly the fist record
            MsgBox "You've reached the beginning of the Records", vbOKOnly
            
        ElseIf RecordNumber <> 1 And RecordNumber Mod Threshold <> 0 Then
            '---------------------
            If (RecordNumber - fastNumber) > 1 Then
            'the current record will never be the beginning after move
                If (RecordNumber Mod Threshold) <= fastNumber Then
                'need to fetch new data from previous range
                'need to fetch data as the record will fall in the previous threshold after move
                    If Not recset.BOF Then
                         recset.MoveFirst
                    End If
                    StartOrderID = recset.Fields(0).Value
                    fetchRS "Desc", StartOrderID, Threshold
    
                    recset.MoveLast
                    recset.Move -fastNumber + RecordNumber Mod Threshold
                    '6300-500=5800
                    populateOrders recset
                    G_OrderID = recset.Fields(0)
                    fetchRSDetails G_OrderID
                    populateOrderDetails recsetDetails
                     
                    RecordNumber = RecordNumber - fastNumber
                    
                    '---------------------
                 
                ElseIf (RecordNumber Mod Threshold) > fastNumber Then
                    'record will stay within the current threshold after move or the record now is right the threshold point
                    RecordNumber = RecordNumber - fastNumber
                    recset.Move -fastNumber
                    populateOrders recset
                    G_OrderID = recset.Fields(0)
                    fetchRSDetails G_OrderID
                    populateOrderDetails recsetDetails

                    '---------------------
                End If
            ElseIf (RecordNumber - fastNumber) <= 1 Then
            'the current record will be the beginning after move
                btnFirst_Click
            End If
        ElseIf RecordNumber <> 1 And RecordNumber Mod Threshold = 0 Then
            RecordNumber = RecordNumber - fastNumber
            recset.Move -fastNumber
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        End If
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnPrevious_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    If Flag = False Then
        If RecordNumber > 1 Then
            RecordNumber = RecordNumber - 1
            
            recset.MovePrevious
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
    Else
        
        '------------------------------------------------------------------------------------
        If RecordNumber = 1 Then
            MsgBox "You've reached the beginning of the Records", vbOKOnly
            
        ElseIf RecordNumber <> 1 Then
        
            If (RecordNumber - 1) Mod Threshold = 0 Then
                txtOrderID.Enabled = True
                txtOrderID.Locked = False
                txtOrderID.SetFocus
                StartOrderID = txtOrderID.Text
                
                fetchRS "Desc", StartOrderID, Threshold
                recset.MoveLast
                RecordNumber = RecordNumber - 1
                
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                
            ElseIf (RecordNumber - 1) Mod Threshold <> 0 Then
                recset.MovePrevious
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                '---------------------
                RecordNumber = RecordNumber - 1
                
            End If
            
        End If
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo

End Sub
Private Sub fetchRS(a As String, b As Long, C As Long)
    'a is indicating Order by Asc or Desc, b is the OrderID where the codes start to fetch data
    'the below is targeted when no parameter the client types in
    ' need to fetch new data
    'a is to determine ASC OR DESC
    'b is to determine the StartOrderID
    'c is to determine how many records to fetch
    Dim DB1 As Integer 'number of DBs for loop
    Dim DB2 As Integer
    Dim conn1 As adodb.Connection
    Dim conn2 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim rsPartial2 As adodb.Recordset
    Dim i As Byte 'to record one or two DBs are involved
    Dim n As Byte
    Dim m As Integer
    Dim sql As String
    Dim sql2 As String
   
    DB1 = getDBnumber(StartOrderID) ' to know which DB will be involved
    
    If a = "Asc" Then
       
        'first to select information for Table Orders part
        'Sql = "SELECT top " & c & " OrderID, CustomerID, EmployeeID, OrderDate, " _
                & "RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
                & "From " _
                & "Orders " _
                & "WHERE OrderID >" & StartOrderID & " and Status is null " _
                & "Order by OrderID "
                
        'sql = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
           & "From " _
           & "Orders " _
           & "WHERE OrderID in " _
           & "(Select Top " & c & " OrderID from Orders WHERE OrderID > " & StartOrderID & " and Status is null " _
           & "Order by OrderID) " _
           & "Order by OrderID"
           
         sql = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
           & "From " _
           & "Orders " _
           & "WHERE OrderID in " _
           & "(Select Top " & C & " OrderID from Orders WHERE OrderID > " & StartOrderID & " and Status is null " _
           & "Order by OrderID) "
    
        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)
           
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        rsPartial1.Open sql, conn1, adOpenStatic, adLockBatchOptimistic
        'actually cursortype adOpenStatic
        '----------------------------------------------------------
        Set recset = New adodb.Recordset
        Set recset = rsPartial1
        
        
        
        If rsPartial1.RecordCount < C Then
            Dim z As Long
            z = recset.RecordCount
            m = C - z
            If DB1 + 1 <= NumberofDBs Then
                DB2 = DB1 + 1
                sql = "SELECT OrderID, CustomerID, EmployeeID,  OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
                        & "From " _
                        & "Orders " _
                        & "WHERE OrderID in " _
                        & "(Select Top " & m & " OrderID from Orders WHERE OrderID > " & StartOrderID & " and Status is null " _
                        & "Order by OrderID) "
                        
                Set conn2 = New adodb.Connection
                conn2.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                        "Data Source=" & GetAddress("O", DB2)
                conn2.Open
            
                Set rsPartial2 = New adodb.Recordset
                '---------------------------------------------------------
                rsPartial2.CursorLocation = adUseClient
                rsPartial2.Open sql, conn2, adOpenDynamic, adLockBatchOptimistic
                rsPartial2.MoveFirst
                'below is to copy rsPartial2 to recset
                Do While Not rsPartial2.EOF
                recset.AddNew
                    For n = 0 To rsPartial2.Fields.Count - 1
                        recset.Fields(rsPartial2.Fields(n).Name).Value = rsPartial2.Fields(n).Value
                    Next n
                    rsPartial2.MoveNext
                Loop
                
            End If
         End If
          
    Else 'a = "Desc"
        'sql = "SELECT OrderID,  CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
            & "From " _
            & "Orders " _
            & "WHERE OrderID in " _
            & "(Select Top " & c & " OrderID from Orders WHERE OrderID <  " & StartOrderID & " and Status is null " _
            & " Order by OrderID Desc) " _
            & "Order by OrderID"
            
        sql = "SELECT OrderID,  CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
            & "From " _
            & "Orders " _
            & "WHERE OrderID in " _
            & "(Select Top " & C & " OrderID from Orders WHERE OrderID <  " & StartOrderID & " and Status is null " _
            & " Order by OrderID Desc) "
            
            Set conn1 = New adodb.Connection
            conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", DB1)
            conn1.Open
        
            Set rsPartial1 = New adodb.Recordset
            '---------------------------------------------------------
            rsPartial1.CursorLocation = adUseClient
            rsPartial1.Open sql, conn1, adOpenDynamic, adLockBatchOptimistic
            '---------------------------------------------------------
            
             Set recset = New adodb.Recordset
             Set recset = rsPartial1
             
         If rsPartial1.RecordCount < C Then
            m = C - recset.RecordCount
            
            If DB1 - 1 >= 1 Then
            
                DB2 = DB1 - 1
                sql2 = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
                    & "From " _
                    & "Orders " _
                    & "WHERE OrderID in " _
                    & "(Select Top " & m & " OrderID from Orders WHERE OrderID <  " & StartOrderID & " and Status is null " _
                    & " Order by OrderID Desc) "
               
                Set conn2 = New adodb.Connection
                conn2.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                        "Data Source=" & GetAddress("O", DB2)
                conn2.Open
            
                Set rsPartial2 = New adodb.Recordset
                '---------------------------------------------------------
                rsPartial2.CursorLocation = adUseClient
                rsPartial2.Open sql, conn2, adOpenDynamic, adLockBatchOptimistic
                Set recset = New adodb.Recordset
                Set recset = rsPartial2
                'below is to copy rsPartial1 to recset
                rsPartial1.MoveFirst
                
                Do While Not rsPartial1.EOF
                recset.AddNew
                    For n = 0 To rsPartial1.Fields.Count - 1
                        recset.Fields(rsPartial1.Fields(n).Name).Value = rsPartial1.Fields(n).Value
                    Next n
                    rsPartial1.MoveNext
                Loop
            End If
            
         End If
    End If
    recset.Sort = "OrderID ASC"
End Sub
Private Sub fetchRSDetails(b As Long)
    Dim DB1 As Integer 'number of DBs for loop
    Dim conn1 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim sql As String
   
    DB1 = getDBnumber(G_OrderID) ' to know which DB will be involved

        ' to select information for Table Order_Details part
        sql = "SELECT OrderID, Count(ProductID) " _
            & "as TotalProducts, ccur(sum(Amount)) as OrderAmount " _
            & "from (" _
            & "SELECT OrderID, ProductID, " _
            & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
            & "From " _
            & "OrderDetails_" & DB1 _
            & " WHERE OrderID = " & G_OrderID & " AND Status is null ) as t " _
            & "Group by OrderID  "

        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        rsPartial1.Open sql, conn1, adOpenKeyset, adLockOptimistic
        'rsPartial1.Open sql, conn1, adOpendynamic, adLockBatchOptimistic
        Set recsetDetails = New adodb.Recordset
        Set recsetDetails = rsPartial1
End Sub
Private Sub Form_Load()
    load = True 'Cbo_change and FilterAsYouType cant work now
    Deleteable = False
    txtCustomerID.LimitToList = False
    txtShippingCompanyName.LimitToList = False
    txtCustomerID.ForeColor = vbBlack
    cboChange = True
    
    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    lblDateTime.RightMargin = 0
    
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    
    btnSearchOrders.Caption = "Search Orders"
    doInit 'to initialize the screen for a new search
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    j = 0
    '------------------------------------
    Active = 2 'for forms about ORders, all customers' info is needed
    EquipCustomerID Active
    Set Me.txtCustomerID.Recordset = G_CustomerSet ' only one word can populate combobox with recordset
    With txtCustomerID
        .ListWidth = .ListWidth
    End With
    '------------------------------------
    Dim sql As String
    txtShippingCompanyName.RowSourceType = "Table/Query"
    Dim con As adodb.Connection
    Set con = New adodb.Connection
    ' fetch data from External Access DBs
    con.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
                    
    con.Open
    
    sql = "SELECT CompanyName, ShipperID " & _
              "FROM Shippers WHERE Status is null"
    Set ShipperSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    ShipperSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    ShipperSet.Open sql, con, adOpenDynamic, adLockPessimistic
    Set Me.txtShippingCompanyName.Recordset = ShipperSet ' only one word can populate combobox with recordset
    With txtShippingCompanyName
        .ListWidth = .ListWidth
    End With
    '----------------------------------------------------
    txtEmployeeID.RowSourceType = "Table/Query"
    
    Set con = New adodb.Connection
    ' fetch data from External Access DBs
    con.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    con.Open
    
    sql = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
              "FROM Employees WHERE Status is null Order by EmployeeID "
    'sql = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
              "FROM Employees WHERE Status is null and FirstName LIKE '*b*'"
    Set EmployeeSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    EmployeeSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    EmployeeSet.Open sql, con, adOpenDynamic, adLockPessimistic
    Set Me.txtEmployeeID.Recordset = EmployeeSet ' only one word can populate combobox with recordset
    With txtEmployeeID
        .ListWidth = .ListWidth
    End With
    '-----------------------------------------------------------
    
    'txtOrderID.SetFocus
    txtTotalProducts.Visible = False
    txtOrderAmount.Visible = False
    
    'DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
    load = False 'Cbo_change and FilterAsYouType can work now
    txtCustomerID.LimitToList = True
    txtShippingCompanyName.LimitToList = True
    
End Sub

Private Sub txtEmployeeID_AfterUpdate()
    'txtEmployeeID.SetFocus
    If Trim(txtEmployeeID & vbNullString) <> vbNullString Then
    
        Dim newEmployeeID As String
        newEmployeeID = Me.txtEmployeeID
        If IsNumeric(newEmployeeID) = True Then
            Dim rs As adodb.Recordset
            Dim conn As adodb.Connection
            Set conn = New adodb.Connection
            ' fetch data from External Access DBs
            conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", 0)
            conn.Open
            
            Set rs = New adodb.Recordset ' to link "conn.open" to "rs.open"
            rs.CursorLocation = adUseServer 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
            rs.Open "Employees", conn, adOpenKeyset, adLockOptimistic, adCmdTableDirect
            
            rs.MoveFirst
            rs.Index = "PrimaryKey"
            rs.Seek newEmployeeID
            If rs.EOF = True Then
                
                MsgBox "This EmployeeID is not valid. Please check again.", vbOKOnly
                'txtEmployeeID.SetFocus
                txtEmployeeID.Value = ""
            
            End If
        Else: MsgBox "The EmployeeID is an integer. Please check again.", vbOKOnly
            txtEmployeeID.Value = ""
        End If
    Else
        Exit Sub
    End If
        
End Sub
Private Sub txtEmployeeID_KeyDown(keycode As Integer, Shift As Integer)
    'If KeyCode = vbKeyDown And Shift <> acAltMask Then
    If keycode = vbKeyDown Or keycode = vbKeyUp Then
        DownArrowKey = True
        txtEmployeeID.Dropdown
    Else
        DownArrowKey = False
    
    End If
End Sub
Private Sub txtEMPLOYEEID_change()
'Dim ListIndex As Integer
If DownArrowKey = False Then
    If load = False And cboChange = True Then
            
        DefaultSQL = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
                  "FROM Employees WHERE "
        
        FilterCboAsYouType EmployeeSet, txtEmployeeID, DefaultSQL, "EmployeeID", "FirstName", "LastName", "Title"
        'FilterRecsetAsYouType EmployeeSet, txtEmployeeID, "EmployeeID", "Employee"
        Set Me.txtEmployeeID.Recordset = FilterSet
        'ListIndex = 0
'Else

            'DownArrowKey = False
                   
            'we dont need to tell the downarrowkey how to work.....
            'it can work itself...
            'If ListIndex < txtEmployeeID.ListCount - 1 Then
                'txtEmployeeID.Value = txtEmployeeID.ItemData(ListIndex + 1)
                'ListIndex = ListIndex + 1
                
            'Else
                'txtEmployeeID.Value = txtEmployeeID.ItemData(0)
                ' Flag = True
              
            'End If
            
         End If
        
        
    End If
    txtEmployeeID.Dropdown

End Sub

Private Sub txtEmployeeID_gotfocus()
    If load = False And cboChange = True Then
        DefaultSQL = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
                    "FROM Employees WHERE "
        FilterCboAsYouType EmployeeSet, txtEmployeeID, DefaultSQL, "EmployeeID", "FirstName", "LastName", "Title"
        Set Me.txtEmployeeID.Recordset = FilterSet
        Me.txtEmployeeID.Dropdown
    End If
End Sub
Private Sub txtEmployeeID_Click()
    cboChange = False
    SendKeys "{F4}"
    cboChange = True
    'close the dropdownlist in one move
End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub
Private Sub doInit()
    'preparing the textbox for later search
    doReset txtOrderID
    doReset1 txtCustomerID
    doReset1 txtEmployeeID
    doReset txtOrderDate
    doReset txtRequiredDate
    doReset txtShippedDate
    doReset1 txtShippingCompanyName
    doReset txtShipToName
    doReset txtTotalProducts
    doReset txtOrderAmount
       
    btnSearchOrders.SetFocus
    txtTotalProducts.Visible = False
    txtOrderAmount.Visible = False

    RecordNumber = 1
    lblRecNo.Caption = ""
    btnNext.Enabled = False
    btnFastNext.Enabled = False
    btnLast.Enabled = False
    btnPrevious.Enabled = False
    btnFastPrevious.Enabled = False
    btnFirst.Enabled = False

    'below is reset every form-level parameter
    SQLStmt = "" 'to clear the SQL clause for next new search
    logString = ""
    j = 0

 
End Sub
Private Sub doReset(tb As TextBox)
 
    tb.Visible = True
    tb.Enabled = True
    tb.Locked = False
    tb.Value = ""

End Sub
Private Sub doReset1(cbo As ComboBox)  ',Optional enabled As Boolean = True

    cbo.Visible = True
    cbo.Enabled = True
    cbo.Locked = False
    cbo.Value = ""

End Sub
Private Sub AdjustNavigationArea()
        If MaxRecNo = 1 Then
            doInit
            RecordNumber = 0
            MaxRecNo = 0
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            recset.Delete
            If RecordNumber = 1 Then
                MaxRecNo = MaxRecNo - 1
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                
                recset.MoveNext
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                Exit Sub
            End If
            
            If RecordNumber > 1 Then
            
                RecordNumber = RecordNumber - 1
                MaxRecNo = MaxRecNo - 1
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                
                recset.MovePrevious
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                Exit Sub
            End If
       
        End If
End Sub
Private Sub btnDeleteOrders_Click()
If Deleteable = True Then
    txtOrderID.Enabled = True
    txtOrderID.Locked = False
    txtOrderID.SetFocus
    If Trim(txtOrderID.Text) = "" Then
        MsgBox "Cannot delete: OrderID is invalid."
        Exit Sub
    End If
    
    G_OrderID = txtOrderID.Text
    btnSearchOrders.SetFocus
    txtOrderID.Enabled = False
    txtOrderID.Locked = True
    
    If MsgBox("Are you sure to delete the Order [ID=" & G_OrderID & "]?", _
        vbOKCancel, "Confirm Deletion [" & G_OrderID & "]") = vbOK Then
        Dim DelNo As String
        DelNo = InputBox("Please type in the number of the reason deleting the Order." & vbNewLine & _
            "1 Client Canceled the Order" & vbNewLine & _
            "2 Client Returned the Items" & vbNewLine & _
            "3 Items Out of Stock" & vbNewLine & _
            "4 Item Lost on Delivery" & vbNewLine & _
            "5 Other Reasons", "Deletion")
        If IsNumeric(DelNo) = True Then
            Dim a As Integer
            Dim b As Integer
            Dim Count As Byte
            Count = 0
            a = DelNo
            If a = DelNo Then
                For b = 1 To 5
                    If b = DelNo Then
                        Count = Count + 1
                    End If
                Next b
            End If
            If Count > 0 Then
                Dim i As Integer
                i = getDBnumber(G_OrderID)
                DBNo = i
                'DELsql = "DELETE FROM OrderDetails_" & i & " WHERE OrderID = " & G_OrderID
                'doDelete DELsql, DBNo
                '------------- ---------------------------------
                INACTIVEsql = "Update OrderDetails_" & i & " Set Status= " & DelNo & "  WHERE OrderID=" & G_OrderID
                AddStatus INACTIVEsql, DBNo
                '----------------------------------------------
                'DELsql = "DELETE FROM Orders WHERE OrderID = " & G_OrderID
                'doDelete DELsql, DBNo
                '----------------------------------------------
                INACTIVEsql = "Update Orders Set Status= " & DelNo & "  WHERE OrderID=" & G_OrderID
                AddStatus INACTIVEsql, DBNo
                '----------------------------------------------
                Write_log -2, INACTIVEsql
                
                AdjustNavigationArea
            
            Else
                MsgBox "A reason must be clarified before an Order can be deleted. " _
                    & "Please make sure you type in the right number. ", vbOKOnly
            End If
        Else
            MsgBox "A reason must be clarified before an Order can be deleted. " _
                & "Please make sure you type in the right number. ", vbOKOnly
        End If
    End If
Else
    MsgBox "Cant Delete: Please search before Delete. Or the Order you searched does not exist."
End If
End Sub
Private Sub AddStatus(sql As String, i As Integer)

    Dim conn As adodb.Connection
    
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)
    conn.Open
    conn.Execute sql
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub

Private Sub doDelete(sql As String, i As Byte) 'not for this case

    Dim conn As adodb.Connection
    
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)
    conn.Open
    conn.Execute sql
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub

Private Sub btnSearchOrders_Click()


    If btnSearchOrders.Caption = "Search Orders" Then
        Dim n As Long
        n = getCount
        
        If MsgBox("Searching within a total of " & n & "Orders. Please wait or you can cancel and enter more information for search.", vbOKCancel) = vbOK Then
            btnSearchOrders.SetFocus
            btnSearchOrders.Caption = "Searching"
            btnDeleteOrders.SetFocus
            btnSearchOrders.Enabled = False
            
            txtTotalProducts.Visible = True
            txtOrderAmount.Visible = True
            load = True 'txtEmployeeID_change cant check the content put in the combo box
            txtCustomerID.LimitToList = False
            txtShippingCompanyName.LimitToList = False
            doSearch
            
            btnSearchOrders.Enabled = True
            btnSearchOrders.SetFocus
            btnSearchOrders.Caption = "Click to Reset and Reenter"
            
            btnNext.Enabled = True
            btnFastNext.Enabled = True
            btnLast.Enabled = True
            btnPrevious.Enabled = True
            btnFastPrevious.Enabled = True
            btnFirst.Enabled = True
        Else
            Exit Sub
        End If
 
    Else ' it is "Click to Reset and Reenter" switching btw search and clear
        doInit
        load = False 'txtEmployeeID_change can check the content put in the combo box again
        txtCustomerID.LimitToList = True
        txtShippingCompanyName.LimitToList = True
        btnSearchOrders.Caption = "Search Orders"
        Deleteable = False
    End If

End Sub
Private Function SetCount() As Byte
    Dim x As Control
    For Each x In Me.Controls
        With x
            Select Case .ControlType
                Case acTextBox
                    If x.Tag = "editable" Then
                        x.SetFocus
                            If Trim(x.Text) = "" Then
                                j = j + 1
                            End If
                    End If
                Case acComboBox
                    If x.Tag = "editable" Then
                        x.SetFocus
                            If Trim(x.Text) = "" Then
                                j = j + 1
                            End If
                    End If
            End Select
        End With
    Next x
    SetCount = j
End Function
Private Sub doSearch()
    '~~~~~~~~~~
    'Count how many parameters the client not typed in
    j = SetCount

    If j = 8 Then 'no criteria is typed in
        Deleteable = True
        Flag = True 'large data navigation
        Threshold = 1000
        fastNumber = Threshold / 2
        MaxRecNo = getCount
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        'threshold is to be defined in Form_load Event
        howmanyThreshold = -Int(-MaxRecNo / Threshold) 'record how many times data can be divided by threshold
        LastRows = MaxRecNo Mod Threshold
        
        StartOrderID = getMinNumber - 1
        
        fetchRS "Asc", StartOrderID, Threshold ' to get recset from Table Orders
        'in the fetchRS, i need to seperately connecet the tables of Orders
        'adding Status into the DB makes it impossible to join the tables of Orders and OrderDetails as usually did
        'even I use filter like "Where Status is null"
        'NEXT  to fetch information from OrderDetails
        G_OrderID = recset.Fields(0).Value
        fetchRSDetails G_OrderID ' to get recset from Table Order_Details

        btnNext.Enabled = True
        btnFastNext.Enabled = True
        btnLast.Enabled = True
        btnPrevious.Enabled = True
        btnFastPrevious.Enabled = True
        btnFirst.Enabled = True
    
        Set Me.Recordset = recset
        recset.MoveFirst
        populateOrders recset
        
        txtTotalProducts.Visible = True
        txtOrderAmount.Visible = True
        'Set Me.Recordset = recsetDetails
        'recsetDetails.MoveFirst
        populateOrderDetails recsetDetails
        
    Else
        Flag = False 'small data navigation
        
        Dim sql As String
        Dim i As Integer  'number of DBs for loop
        Dim Count As Long 'to record how many records have been found
        Dim rsPartial As adodb.Recordset
        Dim conn As adodb.Connection
        Dim n As Long 'to record how many records each partial recordset has
        
        Set recset = New adodb.Recordset
        Dim m As Byte 'to record the first time, rsPartial.recordcount <>0
        m = 0
        Count = 0
        
        For i = 1 To NumberofDBs
            'due to separate connections to table Orders and table OrderDetails
            'its quite easy to set sql below
            '1st to set Select Clause from Orders with ShipperID from combobox of ShippingCompanyName
            sql = setSQLSelect  'to assign static portion of the query
            sql = setSQLWhere(sql) 'to add WHERE clause collecting entered values
            'SQLStmt = sql
            'sql = setSQLAggregation(SQLStmt)
            'Select * from Orders where OrderID = ... AND CustomerID = ...
  
             Set conn = New adodb.Connection
             conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                     "Data Source=" & GetAddress("O", i)
             conn.Open
         
             Set rsPartial = New adodb.Recordset
             '---------------------------------------------------------
             rsPartial.CursorLocation = adUseClient
             rsPartial.Open sql, conn, adOpenDynamic, adLockBatchOptimistic
             
             '---------------------------------------------------------
             Count = Count + rsPartial.RecordCount
             
             If rsPartial.RecordCount <> 0 Then
                 m = m + 1
                 If m = 1 Then
                     Set recset = rsPartial
                 Else
                 
                     rsPartial.MoveFirst
                     
                     Do While Not rsPartial.EOF
                     recset.AddNew
                         For n = 0 To recset.Fields.Count - 1
                             recset.Fields(rsPartial.Fields(n).Name) = rsPartial.Fields(n).Value
                             'better use the above way to addnew a recordset, otherwise would cause a multi-step error
                         Next n
                         rsPartial.MoveNext
                     Loop
                     
                 End If
                 
             End If
             
             'CAN'T CLOSE THESE AS RECSET WILL BE CLOSED EITHER
             'rsPartial.Close
             'Set rsPartial = Nothing
             'conn.Close
             'Set conn = Nothing
             
         Next i
         
         If Count = 0 Then
             MsgBox "No Orders found. Please try enter some more information. "
             Deleteable = False
         Else
            Deleteable = True
            If Not recset.BOF Then
                recset.MoveFirst
            End If
            
            btnNext.Enabled = True
            btnFastNext.Enabled = True
            btnLast.Enabled = True
            btnPrevious.Enabled = True
            btnFastPrevious.Enabled = True
            btnFirst.Enabled = True
            
            Set Me.Recordset = recset 'only one word to populate form with recordset
            populateOrders recset
            'txtTotalProducts.Visible = True
            'txtOrderAmount.Visible = True
            
            G_OrderID = recset.Fields(0).Value
            fetchRSDetails G_OrderID ' to get recset from Table Order_Details
            
            'a form cant be set with an empty set!!!
            'we must let the form to allow additions here or using default value
            'If recsetDetails.RecordCount = 0 Then
                'txtTotalProducts.DefaultValue = 0
                'txtOrderAmount.DefaultValue = """$0.00"""
            'Else
                txtTotalProducts.Visible = True
                txtOrderAmount.Visible = True
                'Set Me.Recordset = recsetDetails
                
                If recsetDetails.RecordCount > 0 Then
                    recsetDetails.MoveFirst
                End If
                populateOrderDetails recsetDetails
            'End If
                          
             MaxRecNo = recset.RecordCount
             RecordNumber = 1
             If MaxRecNo / 10 > 1 Then
                fastNumber = MaxRecNo / 10
             Else
                fastNumber = 1
             End If
             
             lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
             
         End If

         '-----------------------------------
     End If
        If j = 8 Then
            Write_log 2, "Searching all Orders/OrderDetails information "
        Else

            Write_log 2, "Searching Orders/OrderDetails information on " _
                        & Right(sql, Len(sql) - InStr(1, sql, "WHERE") + 1)
        End If
   
End Sub
Private Function setSQLSelect() As String

    setSQLSelect = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, " _
                & "Shipvia , ShipName as ShipToName " _
                & " From " _
                & " Orders " _
                & " WHERE status is null "
                
                  
End Function
Private Function setSQLWhere(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt
    sql = addEnteredValue(sql, txtOrderID, "N")
    sql = addEnteredValue1(sql, txtCustomerID)
    sql = addEnteredValue1(sql, txtEmployeeID, "N")
    sql = addEnteredValue(sql, txtOrderDate, "D")
    sql = addEnteredValue(sql, txtRequiredDate, "D")
    sql = addEnteredValue(sql, txtShippedDate, "D")
    sql = addEnteredValue2(sql, txtShippingCompanyName)
    sql = addEnteredValue(sql, txtShipToName)
    
    setSQLWhere = sql

End Function
Private Function addEnteredValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    tb.SetFocus
    tmpSQL = sql
    
    If Trim(tb.Text) <> "" Then ' if anything is entered on this textbox
        tmpSQL = tmpSQL & " AND "
        
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & CStr(tb.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & tb.Text
        
        End Select
        logString = logString & tb.Name & "=" & Replace(CStr(tb.Text), "'", "''") & ","
 
    End If

    addEnteredValue = tmpSQL

End Function
Private Function addEnteredValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql
    
    If Trim(cbo.Text) <> "" Then ' if anything is entered on this textbox
        'WHERE
        'If InStr(1, tmpSQL, " WHERE ") <> 0 Then
            tmpSQL = tmpSQL & " AND "
        'Else
            'tmpSQL = tmpSQL & " WHERE "
        'End If
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & CStr(cbo.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & cbo.Text
        logString = logString & cbo.Name & "=" & Replace(CStr(cbo.Text), "'", "''") & ","
        End Select
  
        
    End If

    addEnteredValue1 = tmpSQL

End Function
Private Function addEnteredValue2(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql
    
    'find the shipperID and put it in the search query
    Dim ShipVia As Integer
    If Trim(cbo.Text) <> "" Then
        tmpSQL = tmpSQL & " AND "

        'COLUMN NAME=
        tmpSQL = tmpSQL & "ShipVia = "
        'Value
        tmpSQL = tmpSQL & cbo.Column(1)

        logString = logString & "ShippingCompanyName=" & Replace(cbo.Column(0), "'", "''") & ","
    End If

    addEnteredValue2 = tmpSQL

End Function
Private Sub populateOrders(rs As adodb.Recordset)

    setSearchedValue txtOrderID, rs, 0
    setSearchedValue1 txtCustomerID, rs, 1
    setSearchedValue1 txtEmployeeID, rs, 2
    setSearchedValue txtOrderDate, rs, 3
    setSearchedValue txtRequiredDate, rs, 4
    setSearchedValue txtShippedDate, rs, 5
    
    setSearchedValue2 txtShippingCompanyName, rs, 6
    
    setSearchedValue txtShipToName, rs, 7
    btnDeleteOrders.SetFocus
    
End Sub
Private Sub populateOrderDetails(rs As adodb.Recordset)
    'rs.fields(0) is OrderID
    setSearchedValueDetails txtTotalProducts, rs, 1
    setSearchedValueDetails txtOrderAmount, rs, 2
    btnDeleteOrders.SetFocus
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    tb.Locked = False
    tb.Enabled = True
    'tb.SetFocus
    tb.Value = val
    tb.Locked = True

End Sub
Private Sub setSearchedValue1(cbo As ComboBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    cbo.Locked = False
    cbo.Enabled = True
    cbo.Value = val
    
    If cbo.Name = "txtCustomerID" Then
        CheckInactiveCustomerIDs (val)
        If CheckInactiveCustomerID = True Then ' the customerID IS INACTIVE
            cbo.ForeColor = RGB(191, 191, 191)
        Else: cbo.ForeColor = vbBlack
        End If
    End If
    
    cbo.Locked = True

End Sub
Private Sub setSearchedValue2(cbo As ComboBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
        cbo.Locked = False
        cbo.Enabled = True
        cbo.SetFocus
        cbo.Text = val
        cbo.Locked = True
    Else
       val = rs(fn).Value
    
        Dim sql As String
        sql = "Select CompanyName from Shippers where ShipperID= " & val
        Dim rs1 As adodb.Recordset
        Dim conn As adodb.Connection
        Set conn = New adodb.Connection
        conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", 0)
        conn.Open
        Set rs1 = New adodb.Recordset
        rs1.Open sql, conn
        
        cbo.Locked = False
        cbo.Enabled = True
        cbo.SetFocus
        cbo.Text = rs1.Fields(0)
        cbo.Locked = True
    End If
    
End Sub
Private Sub setSearchedValueDetails(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    If recsetDetails.RecordCount = 0 Then
        Me.Form.AllowAdditions = False
        Me.Form.AllowAdditions = True
        With txtTotalProducts
            .Visible = True
            .Locked = False
            .Enabled = False
            .Enabled = True
        
            '.SetFocus
            .Value = "0"
            .Locked = True
        End With
        With txtOrderAmount
            .Visible = True
            .Enabled = True
            .Locked = False
            '.SetFocus
            .Value = "$0.00"
            .Locked = True
        End With
    Else
    
        'to decide for null value
        Dim val As String
        If IsNull(rs(fn).Value) Then
           val = " "
        Else
           val = rs(fn).Value
        End If
        
        tb.Visible = True
        tb.Enabled = True
        tb.Locked = False
        tb.SetFocus
        tb.Text = val
        tb.Locked = True
    End If

End Sub
Private Sub txtShippingCompanyName_DblClick(Cancel As Integer)

    G_ShipCoName = ""
    DoCmd.OpenForm "FrmGetShipCoName", , , , , acDialog
    
    If G_ShipCoName <> "" Then
        setClickedValue txtShippingCompanyName, G_ShipCoName
    End If

End Sub
Private Sub setClickedValue(tb As TextBox, val As String)

    tb.Locked = False
    tb.Enabled = True
    tb.SetFocus
    tb.Text = val
    
End Sub
Private Sub setClickedValue1(cbo As ComboBox, val As String)

    cbo.Locked = False
    cbo.Enabled = True
    cbo.SetFocus
    cbo.Text = val
    
End Sub
Private Sub txtCustomerID_Change()
    txtCustomerID.Dropdown
End Sub
Private Sub txtCustomerID_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub txtCustomerID_gotfocus()

    Me.txtCustomerID.Dropdown
    
End Sub

Private Sub txtShippingCompanyName_Change()
    txtShippingCompanyName.Dropdown
End Sub
Private Sub txtShippingCompanyName_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub txtShippingCompanyName_gotfocus()

    Me.txtShippingCompanyName.Dropdown
    
End Sub
Private Sub txtCustomerID_KeyDown(keycode As Integer, Shift As Integer)

    If txtCustomerID.ListWidth = txtCustomerID.ListWidth And keycode = vbKeyDown Then
        txtCustomerID.Dropdown
    End If
    
End Sub
Private Sub btnDeleteDetailsOnly_Click()
    txtOrderID.Enabled = True
    txtOrderID.Locked = False
    txtOrderID.SetFocus
    
    If Trim(txtOrderID) <> "" Then
        G_OrderID = txtOrderID.Text
        txtOrderID.Locked = True
        If recsetDetails.RecordCount = 0 Then
            MsgBox "There are no Order Details for this OrderID yet. " _
                & "Please go to form Enter New Order Details if you wish to enter any information."
            Exit Sub
        Else
            DoCmd.OpenForm "frmDeleteOrderDetails", , , , , acDialog
        End If
    Else
        MsgBox "You have not chosen any Order yet.", vbOKOnly
    End If
   
End Sub

===============================================================================
--frmDeleteOrders--SQL DB
Option Compare Database
Option Explicit
Dim RecordNumber As Long
Dim MaxRecNo As Long
Dim fastNumber As Integer
Dim Threshold As Long
Dim howmanyThreshold As Long
Dim LastRows As Long 'to records how many records remain in the last fraction
Dim StartOrderID As Long
Dim SQLStmt As String
Dim DELSql As String
Dim INACTIVEsql As String
'----------------------------------------
Dim recset As adodb.Recordset
Dim recsetDetails As adodb.Recordset
Dim CustomerSet As adodb.Recordset
Dim EmployeeSet As adodb.Recordset
Dim ShipperSet As adodb.Recordset
Dim load As Boolean 'to tell FilterAsYouType to work or not
Dim DefaultSQL As String 'a parameter inthe filtercboasyoutype
'-----------------------------------------
Dim Flag As Boolean 'to switch between two navigation systems
Dim cboChange As Boolean
Dim DownArrowKey As Boolean 'to indicate when then downarrow key is pressed

Dim Deleteable As Boolean
Dim AccuString As String
Dim j As Byte ' to count how many criteria has the user not input
Dim logString As String
Dim DBNo As Integer 'to record which DB is in use
Private Sub btnClose_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmOrderManagement", , , , , acDialog
End Sub
Private Sub btnLast_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    If Flag = False Then
    
        If RecordNumber < MaxRecNo Then
            RecordNumber = MaxRecNo
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
    Else
        '--------------------------------------------------------------------------------------------------------------
        If RecordNumber = MaxRecNo Then ' now in the last part
            MsgBox "You've reached the end of the Records", vbOKOnly
        '--------------------------------------------------------------------------
        ElseIf RecordNumber > MaxRecNo - LastRows And RecordNumber < MaxRecNo Then
        'in the lastRows, just move to the last record
            RecordNumber = MaxRecNo
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        '--------------------------------------------------------------------------
        ElseIf RecordNumber <= MaxRecNo - LastRows Then
            StartOrderID = getNumber 'maxOrderID+1
            MaxRecNo = getCount
            LastRows = MaxRecNo Mod Threshold 'to make sure the last one is the latest
            fetchRS "Desc", StartOrderID, LastRows
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------

            RecordNumber = MaxRecNo
            
        End If
        '-----------------------------------------------------------------
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnFastNext_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    
    If Flag = False Then
    
        If RecordNumber < MaxRecNo Then
            If RecordNumber < MaxRecNo - fastNumber Then
                RecordNumber = RecordNumber + fastNumber
                recset.Move fastNumber
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            Else
                RecordNumber = MaxRecNo
                recset.MoveLast
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            End If
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
        
    Else
        '-------------------------------------------------
        If RecordNumber = MaxRecNo Then
            MsgBox "You've reached the end of the Records", vbOKOnly
            
        ElseIf RecordNumber < MaxRecNo And RecordNumber Mod Threshold <> 0 Then
            If RecordNumber + fastNumber >= MaxRecNo Then
                btnLast_Click
                
            ElseIf RecordNumber + fastNumber < MaxRecNo Then
                If (RecordNumber Mod Threshold) + fastNumber > Threshold Then
                    'need to fetch data of next threshold
                    recset.MoveLast
                    StartOrderID = recset.Fields(0).Value
                    
                    fetchRS "Asc", StartOrderID, Threshold
                    MaxRecNo = getCount 'make sure the last one is the latest data
                    recset.MoveFirst '5800+500=6300
                    recset.Move fastNumber - (Threshold - RecordNumber Mod Threshold) - 1
                    populateOrders recset
                    G_OrderID = recset.Fields(0)
                    fetchRSDetails G_OrderID
                    populateOrderDetails recsetDetails
                    '---------------------
                    'RecordNumber = Threshold * (Fix(RecordNumber / Threshold) + 1) + fastNumber - (Threshold - RecordNumber Mod Threshold)
                    RecordNumber = RecordNumber + fastNumber

                ElseIf (RecordNumber Mod Threshold) + fastNumber <= Threshold Then
                    'record will not reach the next threshold after move
                
                    RecordNumber = RecordNumber + fastNumber
                    recset.Move fastNumber
                    populateOrders recset
                    G_OrderID = recset.Fields(0)
                    fetchRSDetails G_OrderID
                    recset.MoveLast
                    
                    populateOrderDetails recsetDetails
                    '---------------------
                
                End If
            ElseIf RecordNumber Mod Threshold = 0 Then
                
            End If
        ElseIf RecordNumber < MaxRecNo And RecordNumber Mod Threshold = 0 Then   'the record is the threshold itself
            StartOrderID = recset.Fields(0).Value
                    
            fetchRS "Asc", StartOrderID, Threshold
            MaxRecNo = getCount 'make sure the last one is the latest data
            recset.MoveFirst '5800+500=6300
            recset.Move fastNumber - 1
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            RecordNumber = RecordNumber + fastNumber
        End If
        '------------------------------------------------------------------
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                
End Sub
Private Sub btnNext_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    If Flag = False Then
        If RecordNumber < MaxRecNo Then
            RecordNumber = RecordNumber + 1
   
            recset.MoveNext
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
    Else
        '-----------------------------------------------------------
        
        If RecordNumber = MaxRecNo Then
            MsgBox "You've reached the end of the Records", vbOKOnly
            
        ElseIf RecordNumber < MaxRecNo Then
        
            If (RecordNumber + 1) Mod Threshold = 1 Then
                ' need to fetch new data
                txtOrderID.Enabled = True
                txtOrderID.Locked = False
                txtOrderID.SetFocus
                StartOrderID = txtOrderID.Text
                
                fetchRS "Asc", StartOrderID, Threshold
                MaxRecNo = getCount 'make sure the last one is the latest data
                recset.MoveFirst
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                '---------------------
                RecordNumber = RecordNumber + 1
                
            ElseIf (RecordNumber + 1) Mod Threshold <> 1 Then
                RecordNumber = RecordNumber + 1
                '---------------------
                recset.MoveNext
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                '---------------------
            End If
        End If
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnFirst_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    If Flag = False Then
    
        If RecordNumber > 1 Then
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
    Else

        '-------------------------------
        If RecordNumber = 1 Then ' the record is already the beginning of the records
            MsgBox "You've reached the beginning of the Records", vbOKOnly

        
        ElseIf RecordNumber > 1 And RecordNumber <= Threshold Then ' the record is in the first range
        
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            
        ElseIf RecordNumber > Threshold Then
        
            StartOrderID = getMinNumber - 1
            fetchRS "Asc", StartOrderID, Threshold
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
            RecordNumber = 1
            
        
        End If
        '-----------------------------------
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnFastPrevious_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    If Flag = False Then
        If RecordNumber > 1 Then
            If RecordNumber > fastNumber Then
                RecordNumber = RecordNumber - fastNumber
                recset.Move -fastNumber
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            ElseIf RecordNumber < fastNumber Then
                RecordNumber = 1
                recset.MoveFirst
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            End If
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
        
    Else
    
        '-------------------------------------------------------------------
        If RecordNumber = 1 Then
            'the current record is exactly the fist record
            MsgBox "You've reached the beginning of the Records", vbOKOnly
            
        ElseIf RecordNumber <> 1 And RecordNumber Mod Threshold <> 0 Then
            '---------------------
            If (RecordNumber - fastNumber) > 1 Then
            'the current record will never be the beginning after move
                If (RecordNumber Mod Threshold) <= fastNumber Then
                'need to fetch new data from previous range
                'need to fetch data as the record will fall in the previous threshold after move
                    If Not recset.BOF Then
                         recset.MoveFirst
                    End If
                    StartOrderID = recset.Fields(0).Value
                    fetchRS "Desc", StartOrderID, Threshold
    
                    recset.MoveLast
                    recset.Move -fastNumber + RecordNumber Mod Threshold
                    '6300-500=5800
                    populateOrders recset
                    G_OrderID = recset.Fields(0)
                    fetchRSDetails G_OrderID
                    populateOrderDetails recsetDetails
                     
                    RecordNumber = RecordNumber - fastNumber
                    
                    '---------------------
                 
                ElseIf (RecordNumber Mod Threshold) > fastNumber Then
                    'record will stay within the current threshold after move or the record now is right the threshold point
                    RecordNumber = RecordNumber - fastNumber
                    recset.Move -fastNumber
                    populateOrders recset
                    G_OrderID = recset.Fields(0)
                    fetchRSDetails G_OrderID
                    populateOrderDetails recsetDetails

                    '---------------------
                End If
            ElseIf (RecordNumber - fastNumber) <= 1 Then
            'the current record will be the beginning after move
                btnFirst_Click
            End If
        ElseIf RecordNumber <> 1 And RecordNumber Mod Threshold = 0 Then
            RecordNumber = RecordNumber - fastNumber
            recset.Move -fastNumber
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        End If
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnPrevious_Click()
    'MaxRecNo = getCount
    'LastRows = MaxRecNo Mod Threshold
    If Flag = False Then
        If RecordNumber > 1 Then
            RecordNumber = RecordNumber - 1
            
            recset.MovePrevious
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
    Else
        
        '------------------------------------------------------------------------------------
        If RecordNumber = 1 Then
            MsgBox "You've reached the beginning of the Records", vbOKOnly
            
        ElseIf RecordNumber <> 1 Then
        
            If (RecordNumber - 1) Mod Threshold = 0 Then
                txtOrderID.Enabled = True
                txtOrderID.Locked = False
                txtOrderID.SetFocus
                StartOrderID = txtOrderID.Text
                
                fetchRS "Desc", StartOrderID, Threshold
                recset.MoveLast
                RecordNumber = RecordNumber - 1
                
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                
            ElseIf (RecordNumber - 1) Mod Threshold <> 0 Then
                recset.MovePrevious
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                '---------------------
                RecordNumber = RecordNumber - 1
                
            End If
            
        End If
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo

End Sub
Private Sub fetchRS(a As String, b As Long, C As Long)
    'a is indicating Order by Asc or Desc, b is the OrderID where the codes start to fetch data
    'the below is targeted when no parameter the client types in
    ' need to fetch new data
    'a is to determine ASC OR DESC
    'b is to determine the StartOrderID
    'c is to determine how many records to fetch
    Dim DB1 As Integer 'number of DBs for loop
    Dim DB2 As Integer
    Dim conn1 As adodb.Connection
    Dim conn2 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim rsPartial2 As adodb.Recordset
    Dim i As Byte 'to record one or two DBs are involved
    Dim n As Byte
    Dim m As Integer
    Dim sql As String
    Dim sql2 As String
   
    DB1 = getDBnumber(StartOrderID) ' to know which DB will be involved
    
    If a = "Asc" Then
       
        'first to select information for Table Orders part
        'Sql = "SELECT top " & c & " OrderID, CustomerID, EmployeeID, OrderDate, " _
                & "RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
                & "From " _
                & "Orders " _
                & "WHERE OrderID >" & StartOrderID & " and Status is null " _
                & "Order by OrderID "
                
        'sql = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
           & "From " _
           & "Orders " _
           & "WHERE OrderID in " _
           & "(Select Top " & c & " OrderID from Orders WHERE OrderID > " & StartOrderID & " and Status is null " _
           & "Order by OrderID) " _
           & "Order by OrderID"
           
         sql = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
           & "From " _
           & "Orders " _
           & "WHERE OrderID in " _
           & "(Select Top " & C & " OrderID from Orders WHERE OrderID > " & StartOrderID & " and Status is null " _
           & "Order by OrderID) "
    
        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)
           
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        rsPartial1.Open sql, conn1, adOpenStatic, adLockBatchOptimistic
        'actually cursortype adOpenStatic
        '----------------------------------------------------------
        Set recset = New adodb.Recordset
        Set recset = rsPartial1
        
        
        
        If rsPartial1.RecordCount < C Then
            Dim z As Long
            z = recset.RecordCount
            m = C - z
            If DB1 + 1 <= NumberofDBs Then
                DB2 = DB1 + 1
                sql = "SELECT OrderID, CustomerID, EmployeeID,  OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
                        & "From " _
                        & "Orders " _
                        & "WHERE OrderID in " _
                        & "(Select Top " & m & " OrderID from Orders WHERE OrderID > " & StartOrderID & " and Status is null " _
                        & "Order by OrderID) "
                        
                Set conn2 = New adodb.Connection
                conn2.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                        "Data Source=" & GetAddress("O", DB2)
                conn2.Open
            
                Set rsPartial2 = New adodb.Recordset
                '---------------------------------------------------------
                rsPartial2.CursorLocation = adUseClient
                rsPartial2.Open sql, conn2, adOpenDynamic, adLockBatchOptimistic
                rsPartial2.MoveFirst
                'below is to copy rsPartial2 to recset
                Do While Not rsPartial2.EOF
                recset.AddNew
                    For n = 0 To rsPartial2.Fields.Count - 1
                        recset.Fields(rsPartial2.Fields(n).Name).Value = rsPartial2.Fields(n).Value
                    Next n
                    rsPartial2.MoveNext
                Loop
                
            End If
         End If
          
    Else 'a = "Desc"
        'sql = "SELECT OrderID,  CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
            & "From " _
            & "Orders " _
            & "WHERE OrderID in " _
            & "(Select Top " & c & " OrderID from Orders WHERE OrderID <  " & StartOrderID & " and Status is null " _
            & " Order by OrderID Desc) " _
            & "Order by OrderID"
            
        sql = "SELECT OrderID,  CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
            & "From " _
            & "Orders " _
            & "WHERE OrderID in " _
            & "(Select Top " & C & " OrderID from Orders WHERE OrderID <  " & StartOrderID & " and Status is null " _
            & " Order by OrderID Desc) "
            
            Set conn1 = New adodb.Connection
            conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", DB1)
            conn1.Open
        
            Set rsPartial1 = New adodb.Recordset
            '---------------------------------------------------------
            rsPartial1.CursorLocation = adUseClient
            rsPartial1.Open sql, conn1, adOpenDynamic, adLockBatchOptimistic
            '---------------------------------------------------------
            
             Set recset = New adodb.Recordset
             Set recset = rsPartial1
             
         If rsPartial1.RecordCount < C Then
            m = C - recset.RecordCount
            
            If DB1 - 1 >= 1 Then
            
                DB2 = DB1 - 1
                sql2 = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia as ShipperID, ShipName as ShipToName " _
                    & "From " _
                    & "Orders " _
                    & "WHERE OrderID in " _
                    & "(Select Top " & m & " OrderID from Orders WHERE OrderID <  " & StartOrderID & " and Status is null " _
                    & " Order by OrderID Desc) "
               
                Set conn2 = New adodb.Connection
                conn2.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                        "Data Source=" & GetAddress("O", DB2)
                conn2.Open
            
                Set rsPartial2 = New adodb.Recordset
                '---------------------------------------------------------
                rsPartial2.CursorLocation = adUseClient
                rsPartial2.Open sql, conn2, adOpenDynamic, adLockBatchOptimistic
                Set recset = New adodb.Recordset
                Set recset = rsPartial2
                'below is to copy rsPartial1 to recset
                rsPartial1.MoveFirst
                
                Do While Not rsPartial1.EOF
                recset.AddNew
                    For n = 0 To rsPartial1.Fields.Count - 1
                        recset.Fields(rsPartial1.Fields(n).Name).Value = rsPartial1.Fields(n).Value
                    Next n
                    rsPartial1.MoveNext
                Loop
            End If
            
         End If
    End If
    recset.Sort = "OrderID ASC"
End Sub
Private Sub fetchRSDetails(b As Long)
    Dim DB1 As Integer 'number of DBs for loop
    Dim conn1 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim sql As String
   
    DB1 = getDBnumber(G_OrderID) ' to know which DB will be involved

        ' to select information for Table Order_Details part
        sql = "SELECT OrderID, Count(ProductID) " _
            & "as TotalProducts, ccur(sum(Amount)) as OrderAmount " _
            & "from (" _
            & "SELECT OrderID, ProductID, " _
            & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
            & "From " _
            & "OrderDetails_" & DB1 _
            & " WHERE OrderID = " & G_OrderID & " AND Status is null ) as t " _
            & "Group by OrderID  "

        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        rsPartial1.Open sql, conn1, adOpenKeyset, adLockOptimistic
        'rsPartial1.Open sql, conn1, adOpendynamic, adLockBatchOptimistic
        Set recsetDetails = New adodb.Recordset
        Set recsetDetails = rsPartial1
End Sub
Private Sub Form_Load()
    load = True 'Cbo_change and FilterAsYouType cant work now
    Deleteable = False
    txtCustomerID.LimitToList = False
    txtShippingCompanyName.LimitToList = False
    txtCustomerID.ForeColor = vbBlack
    cboChange = True
    
    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    lblDateTime.RightMargin = 0
    
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    
    btnSearchOrders.Caption = "Search Orders"
    doInit 'to initialize the screen for a new search
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    j = 0
    '------------------------------------
    Active = 2 'for forms about ORders, all customers' info is needed
    EquipCustomerID Active
    Set Me.txtCustomerID.Recordset = G_CustomerSet ' only one word can populate combobox with recordset
    With txtCustomerID
        .ListWidth = .ListWidth
    End With
    '------------------------------------
    Dim sql As String
    txtShippingCompanyName.RowSourceType = "Table/Query"
    Dim con As adodb.Connection
    Set con = New adodb.Connection
    ' fetch data from External Access DBs
    con.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
                    
    con.Open
    
    sql = "SELECT CompanyName, ShipperID " & _
              "FROM Shippers WHERE Status is null"
    Set ShipperSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    ShipperSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    ShipperSet.Open sql, con, adOpenStatic, adLockPessimistic
    Set Me.txtShippingCompanyName.Recordset = ShipperSet ' only one word can populate combobox with recordset
    With txtShippingCompanyName
        .ListWidth = .ListWidth
    End With
    '----------------------------------------------------
    txtEmployeeID.RowSourceType = "Table/Query"
    
    Set con = New adodb.Connection
    ' fetch data from External Access DBs
    con.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    con.Open
    
    sql = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
              "FROM Employees WHERE Status is null Order by EmployeeID "
    'sql = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
              "FROM Employees WHERE Status is null and FirstName LIKE '*b*'"
    Set EmployeeSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    EmployeeSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    EmployeeSet.Open sql, con, adOpenStatic, adLockPessimistic
    Set Me.txtEmployeeID.Recordset = EmployeeSet ' only one word can populate combobox with recordset
    With txtEmployeeID
        .ListWidth = .ListWidth
    End With
    '-----------------------------------------------------------
    
    'txtOrderID.SetFocus
    txtTotalProducts.Visible = False
    txtOrderAmount.Visible = False
    
    'DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
    load = False 'Cbo_change and FilterAsYouType can work now
    txtCustomerID.LimitToList = True
    txtShippingCompanyName.LimitToList = True
    
    'below is to test the speed of data migration AccessToSql
    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=SQLOLEDB;SERVER=(local);Database=JuliaDatabase;Trusted_Connection=Yes"
    conn.ConnectionTimeout = 0
    conn.CommandTimeout = 0
    conn.Open
    
    Dim ExecSql As String
    Dim C As Byte
    'For c = 1 To NumberofDBs
    
        'ExecSql = " Insert into OrdersFrAcc " _
                & " Select * From OpenDataSource ('Microsoft.ACE.OLEDB.12.0', " _
                & " 'Data Source=""C:\Users\...\" _
                & "order data\OrderDetails_" & c & ".accdb""')...Orders;"
        
        'conn.Execute ExecSql

    'Next c
    
    'For c = 1 To NumberofDBs
    
        'ExecSql = " insert into OrderDetailsFrAcc " _
                & " select * From OpenDataSource ('Microsoft.ACE.OLEDB.12.0', " _
                & " 'Data Source=""C:\Users\...\" _
                & "order data\OrderDetails_" & c & ".accdb""')...OrderDetails_" & c & ";"
        'conn.Execute " Set Lock_timeout 0 "
        'conn.Execute ExecSql

    'Next c
    conn.ConnectionTimeout = 20
    conn.CommandTimeout = 60
    conn.Execute "set lock_time -1"
    conn.Close
    Set conn = Nothing
End Sub

Private Sub txtEmployeeID_AfterUpdate()
    'txtEmployeeID.SetFocus
    If Trim(txtEmployeeID) <> "" Then
    
        Dim newEmployeeID As String
        newEmployeeID = Me.txtEmployeeID
        If IsNumeric(newEmployeeID) = True Then
            Dim rs As adodb.Recordset
            Dim conn As adodb.Connection
            Set conn = New adodb.Connection
            ' fetch data from External Access DBs
            conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", 0)
            conn.Open
            
            Set rs = New adodb.Recordset ' to link "conn.open" to "rs.open"
            rs.CursorLocation = adUseServer 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
            rs.Open "Employees", conn, adOpenKeyset, adLockOptimistic, adCmdTableDirect
            'rs.ActiveConnection = Nothing
            'conn.Close
            rs.MoveFirst
            rs.Index = "PrimaryKey"
            rs.Seek newEmployeeID
            If rs.EOF = True Then
                
                MsgBox "This EmployeeID is not valid. Please check again.", vbOKOnly
                'txtEmployeeID.SetFocus
                txtEmployeeID.Value = ""
            
            End If
        Else: MsgBox "The EmployeeID is an integer. Please check again.", vbOKOnly
            txtEmployeeID.Value = ""
        End If
    Else
        Exit Sub
    End If
        
End Sub
Private Sub txtEmployeeID_KeyDown(keycode As Integer, Shift As Integer)
    'If KeyCode = vbKeyDown And Shift <> acAltMask Then
    If keycode = vbKeyDown Or keycode = vbKeyUp Then
        DownArrowKey = True
        txtEmployeeID.Dropdown
    Else
        DownArrowKey = False
    
    End If
End Sub
Private Sub txtEMPLOYEEID_change()
'Dim ListIndex As Integer
If DownArrowKey = False Then
    If load = False And cboChange = True Then
            
        DefaultSQL = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
                  "FROM Employees WHERE "
        
        FilterCboAsYouType EmployeeSet, txtEmployeeID, DefaultSQL, "EmployeeID", "FirstName", "LastName", "Title"
        'FilterRecsetAsYouType EmployeeSet, txtEmployeeID, "EmployeeID", "Employee"
        Set Me.txtEmployeeID.Recordset = FilterSet
        'ListIndex = 0
'Else

            'DownArrowKey = False
                   
            'we dont need to tell the downarrowkey how to work.....
            'it can work itself...
            'If ListIndex < txtEmployeeID.ListCount - 1 Then
                'txtEmployeeID.Value = txtEmployeeID.ItemData(ListIndex + 1)
                'ListIndex = ListIndex + 1
                
            'Else
                'txtEmployeeID.Value = txtEmployeeID.ItemData(0)
                ' Flag = True
              
            'End If
            
         End If
        
        
    End If
    txtEmployeeID.Dropdown

End Sub

Private Sub txtEmployeeID_gotfocus()
    If load = False And cboChange = True Then
        DefaultSQL = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
                    "FROM Employees WHERE "
        FilterCboAsYouType EmployeeSet, txtEmployeeID, DefaultSQL, "EmployeeID", "FirstName", "LastName", "Title"
        Set Me.txtEmployeeID.Recordset = FilterSet
        Me.txtEmployeeID.Dropdown
    End If
End Sub
Private Sub txtEmployeeID_Click()
    cboChange = False
    SendKeys "{F4}"
    cboChange = True
    'close the dropdownlist in one move
End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub
Private Sub doInit()
    'preparing the textbox for later search
    doReset txtOrderID
    doReset1 txtCustomerID
    doReset1 txtEmployeeID
    doReset txtOrderDate
    doReset txtRequiredDate
    doReset txtShippedDate
    doReset1 txtShippingCompanyName
    doReset txtShipToName
    doReset txtTotalProducts
    doReset txtOrderAmount
       
    btnSearchOrders.SetFocus
    txtTotalProducts.Visible = False
    txtOrderAmount.Visible = False

    RecordNumber = 1
    lblRecNo.Caption = ""
    btnNext.Enabled = False
    btnFastNext.Enabled = False
    btnLast.Enabled = False
    btnPrevious.Enabled = False
    btnFastPrevious.Enabled = False
    btnFirst.Enabled = False

    'below is reset every form-level parameter
    SQLStmt = "" 'to clear the SQL clause for next new search
    logString = ""
    j = 0

 
End Sub
Private Sub doReset(tb As TextBox)
 
    tb.Visible = True
    tb.Enabled = True
    tb.Locked = False
    tb.Value = ""

End Sub
Private Sub doReset1(cbo As ComboBox)  ',Optional enabled As Boolean = True

    cbo.Visible = True
    cbo.Enabled = True
    cbo.Locked = False
    cbo.Value = ""

End Sub
Private Sub AdjustNavigationArea()
        If MaxRecNo = 1 Then
            doInit
            RecordNumber = 0
            MaxRecNo = 0
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            recset.Delete
            If RecordNumber = 1 Then
                MaxRecNo = MaxRecNo - 1
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                
                recset.MoveNext
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                Exit Sub
            End If
            
            If RecordNumber > 1 Then
            
                RecordNumber = RecordNumber - 1
                MaxRecNo = MaxRecNo - 1
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                
                recset.MovePrevious
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                Exit Sub
            End If
       
        End If
End Sub
Private Sub btnDeleteOrders_Click()
If Deleteable = True Then
    txtOrderID.Enabled = True
    txtOrderID.Locked = False
    txtOrderID.SetFocus
    If Trim(txtOrderID.Text) = "" Then
        MsgBox "Cannot delete: OrderID is invalid."
        Exit Sub
    End If
    
    G_OrderID = txtOrderID.Text
    btnSearchOrders.SetFocus
    txtOrderID.Enabled = False
    txtOrderID.Locked = True
    
    If MsgBox("Are you sure to delete the Order [ID=" & G_OrderID & "]?", _
        vbOKCancel, "Confirm Deletion [" & G_OrderID & "]") = vbOK Then
        Dim DelNo As String
        DelNo = InputBox("Please type in the number of the reason deleting the Order." & vbNewLine & _
            "1 Client Canceled the Order" & vbNewLine & _
            "2 Client Returned the Items" & vbNewLine & _
            "3 Items Out of Stock" & vbNewLine & _
            "4 Item Lost on Delivery" & vbNewLine & _
            "5 Other Reasons", "Deletion")
        If IsNumeric(DelNo) = True Then
            Dim a As Integer
            Dim b As Integer
            Dim Count As Byte
            Count = 0
            a = DelNo
            If a = DelNo Then
                For b = 1 To 5
                    If b = DelNo Then
                        Count = Count + 1
                    End If
                Next b
            End If
            If Count > 0 Then
                Dim i As Integer
                i = getDBnumber(G_OrderID)
                DBNo = i
                'DELsql = "DELETE FROM OrderDetails_" & i & " WHERE OrderID = " & G_OrderID
                'doDelete DELsql, DBNo
                '------------- ---------------------------------
                INACTIVEsql = "Update OrderDetails_" & i & " Set Status= " & DelNo & "  WHERE OrderID=" & G_OrderID
                AddStatus INACTIVEsql, DBNo
                '----------------------------------------------
                'DELsql = "DELETE FROM Orders WHERE OrderID = " & G_OrderID
                'doDelete DELsql, DBNo
                '----------------------------------------------
                INACTIVEsql = "Update Orders Set Status= " & DelNo & "  WHERE OrderID=" & G_OrderID
                AddStatus INACTIVEsql, DBNo
                '----------------------------------------------
                Write_log -2, INACTIVEsql
                
                AdjustNavigationArea
            
            Else
                MsgBox "A reason must be clarified before an Order can be deleted. " _
                    & "Please make sure you type in the right number. ", vbOKOnly
            End If
        Else
            MsgBox "A reason must be clarified before an Order can be deleted. " _
                & "Please make sure you type in the right number. ", vbOKOnly
        End If
    End If
Else
    MsgBox "Cant Delete: Please search before Delete. Or the Order you searched does not exist."
End If
End Sub
Private Sub AddStatus(sql As String, i As Integer)

    Dim conn As adodb.Connection
    
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)
    conn.Open
    conn.Execute sql
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub

Private Sub doDelete(sql As String, i As Byte) 'not for this case

    Dim conn As adodb.Connection
    
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)
    conn.Open
    conn.Execute sql
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub

Private Sub btnSearchOrders_Click()


    If btnSearchOrders.Caption = "Search Orders" Then
        Dim n As Long
        n = getCount
        
        If MsgBox("Searching within a total of " & n & "Orders. Please wait or you can cancel and enter more information for search.", vbOKCancel) = vbOK Then
            btnSearchOrders.SetFocus
            btnSearchOrders.Caption = "Searching"
            btnDeleteOrders.SetFocus
            btnSearchOrders.Enabled = False
            
            txtTotalProducts.Visible = True
            txtOrderAmount.Visible = True
            load = True 'txtEmployeeID_change cant check the content put in the combo box
            txtCustomerID.LimitToList = False
            txtShippingCompanyName.LimitToList = False
            doSearch
            
            btnSearchOrders.Enabled = True
            btnSearchOrders.SetFocus
            btnSearchOrders.Caption = "Click to Reset and Reenter"
            
            btnNext.Enabled = True
            btnFastNext.Enabled = True
            btnLast.Enabled = True
            btnPrevious.Enabled = True
            btnFastPrevious.Enabled = True
            btnFirst.Enabled = True
        Else
            Exit Sub
        End If
 
    Else ' it is "Click to Reset and Reenter" switching btw search and clear
        doInit
        load = False 'txtEmployeeID_change can check the content put in the combo box again
        txtCustomerID.LimitToList = True
        txtShippingCompanyName.LimitToList = True
        btnSearchOrders.Caption = "Search Orders"
        Deleteable = False
    End If

End Sub
Private Function SetCount() As Byte
    Dim x As Control
    For Each x In Me.Controls
        With x
            Select Case .ControlType
                Case acTextBox
                    If x.Tag = "editable" Then
                        x.SetFocus
                            If Trim(x.Text) = "" Then
                                j = j + 1
                            End If
                    End If
                Case acComboBox
                    If x.Tag = "editable" Then
                        x.SetFocus
                            If Trim(x.Text) = "" Then
                                j = j + 1
                            End If
                    End If
            End Select
        End With
    Next x
    SetCount = j
End Function
Private Sub doSearch()
    '~~~~~~~~~~
    'Count how many parameters the client not typed in
    j = SetCount

    If j = 8 Then 'no criteria is typed in
        Deleteable = True
        Flag = True 'large data navigation
        Threshold = 1000
        fastNumber = Threshold / 2
        MaxRecNo = getCount
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        'threshold is to be defined in Form_load Event
        howmanyThreshold = -Int(-MaxRecNo / Threshold) 'record how many times data can be divided by threshold
        LastRows = MaxRecNo Mod Threshold
        
        StartOrderID = getMinNumber - 1
        
        fetchRS "Asc", StartOrderID, Threshold ' to get recset from Table Orders
        'in the fetchRS, i need to seperately connecet the tables of Orders
        'adding Status into the DB makes it impossible to join the tables of Orders and OrderDetails as usually did
        'even I use filter like "Where Status is null"
        'NEXT it to fetch information from OrderDetails
        G_OrderID = recset.Fields(0).Value
        fetchRSDetails G_OrderID ' to get recset from Table Order_Details

        btnNext.Enabled = True
        btnFastNext.Enabled = True
        btnLast.Enabled = True
        btnPrevious.Enabled = True
        btnFastPrevious.Enabled = True
        btnFirst.Enabled = True
    
        Set Me.Recordset = recset
        recset.MoveFirst
        populateOrders recset
        
        txtTotalProducts.Visible = True
        txtOrderAmount.Visible = True
        'Set Me.Recordset = recsetDetails
        'recsetDetails.MoveFirst
        populateOrderDetails recsetDetails
        
    Else
        Flag = False 'small data navigation
        
        Dim sql As String
        Dim i As Integer  'number of DBs for loop
        Dim Count As Long 'to record how many records have been found
        Dim rsPartial As adodb.Recordset
        Dim conn As adodb.Connection
        Dim n As Long 'to record how many records each partial recordset has
        
        Set recset = New adodb.Recordset
        Dim m As Byte 'to record the first time, rsPartial.recordcount <>0
        m = 0
        Count = 0
        
        For i = 1 To NumberofDBs
            'due to separate connections to table Orders and table OrderDetails
            'its quite easy to set sql below
            '1st to set Select Clause from Orders with ShipperID from combobox of ShippingCompanyName
            sql = setSQLSelect  'to assign static portion of the query
            sql = setSQLWhere(sql) 'to add WHERE clause collecting entered values
            'SQLStmt = sql
            'sql = setSQLAggregation(SQLStmt)
            'Select * from Orders where OrderID = ... AND CustomerID = ...
  
             Set conn = New adodb.Connection
             conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                     "Data Source=" & GetAddress("O", i)
             conn.Open
         
             Set rsPartial = New adodb.Recordset
             '---------------------------------------------------------
             rsPartial.CursorLocation = adUseClient
             rsPartial.Open sql, conn, adOpenDynamic, adLockBatchOptimistic
             
             '---------------------------------------------------------
             Count = Count + rsPartial.RecordCount
             
             If rsPartial.RecordCount <> 0 Then
                 m = m + 1
                 If m = 1 Then
                     Set recset = rsPartial
                 Else
                 
                     rsPartial.MoveFirst
                     
                     Do While Not rsPartial.EOF
                     recset.AddNew
                         For n = 0 To recset.Fields.Count - 1
                             recset.Fields(rsPartial.Fields(n).Name) = rsPartial.Fields(n).Value
                             'better use the above way to addnew a recordset, otherwise would cause a multi-step error
                         Next n
                         rsPartial.MoveNext
                     Loop
                     
                 End If
                 
             End If
             
             'CAN'T CLOSE THESE AS RECSET WILL BE CLOSED EITHER
             'rsPartial.Close
             'Set rsPartial = Nothing
             'conn.Close
             'Set conn = Nothing
             
         Next i
         
         If Count = 0 Then
             MsgBox "No Orders found. Please try enter some more information. "
             Deleteable = False
         Else
            Deleteable = True
            If Not recset.BOF Then
                recset.MoveFirst
            End If
            
            btnNext.Enabled = True
            btnFastNext.Enabled = True
            btnLast.Enabled = True
            btnPrevious.Enabled = True
            btnFastPrevious.Enabled = True
            btnFirst.Enabled = True
            
            Set Me.Recordset = recset 'only one word to populate form with recordset
            populateOrders recset
            'txtTotalProducts.Visible = True
            'txtOrderAmount.Visible = True
            
            G_OrderID = recset.Fields(0).Value
            fetchRSDetails G_OrderID ' to get recset from Table Order_Details
            
            'a form cant be set with an empty set!!!
            'we must let the form to allow additions here or using default value
            'If recsetDetails.RecordCount = 0 Then
                'txtTotalProducts.DefaultValue = 0
                'txtOrderAmount.DefaultValue = """$0.00"""
            'Else
                txtTotalProducts.Visible = True
                txtOrderAmount.Visible = True
                'Set Me.Recordset = recsetDetails
                
                If recsetDetails.RecordCount > 0 Then
                    recsetDetails.MoveFirst
                End If
                populateOrderDetails recsetDetails
            'End If
                          
             MaxRecNo = recset.RecordCount
             RecordNumber = 1
             If MaxRecNo / 10 > 1 Then
                fastNumber = MaxRecNo / 10
             Else
                fastNumber = 1
             End If
             
             lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
             
         End If

         '-----------------------------------
     End If
        If j = 8 Then
            Write_log 2, "Searching all Orders/OrderDetails information "
        Else

            Write_log 2, "Searching Orders/OrderDetails information on " _
                        & Right(sql, Len(sql) - InStr(1, sql, "WHERE") + 1)
        End If
   
End Sub
Private Function setSQLSelect() As String

    setSQLSelect = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, " _
                & "Shipvia , ShipName as ShipToName " _
                & " From " _
                & " Orders " _
                & " WHERE status is null "
                
                  
End Function
Private Function setSQLWhere(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt
    sql = addEnteredValue(sql, txtOrderID, "N")
    sql = addEnteredValue1(sql, txtCustomerID)
    sql = addEnteredValue1(sql, txtEmployeeID, "N")
    sql = addEnteredValue(sql, txtOrderDate, "D")
    sql = addEnteredValue(sql, txtRequiredDate, "D")
    sql = addEnteredValue(sql, txtShippedDate, "D")
    sql = addEnteredValue2(sql, txtShippingCompanyName)
    sql = addEnteredValue(sql, txtShipToName)
    
    setSQLWhere = sql

End Function
Private Function addEnteredValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    tb.SetFocus
    tmpSQL = sql
    
    If Trim(tb.Text) <> "" Then ' if anything is entered on this textbox
        tmpSQL = tmpSQL & " AND "
        
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & CStr(tb.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & tb.Text
        
        End Select
        logString = logString & tb.Name & "=" & Replace(CStr(tb.Text), "'", "''") & ","
 
    End If

    addEnteredValue = tmpSQL

End Function
Private Function addEnteredValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql
    
    If Trim(cbo.Text) <> "" Then ' if anything is entered on this textbox
        'WHERE
        'If InStr(1, tmpSQL, " WHERE ") <> 0 Then
            tmpSQL = tmpSQL & " AND "
        'Else
            'tmpSQL = tmpSQL & " WHERE "
        'End If
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & CStr(cbo.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & cbo.Text
        logString = logString & cbo.Name & "=" & Replace(CStr(cbo.Text), "'", "''") & ","
        End Select
  
        
    End If

    addEnteredValue1 = tmpSQL

End Function
Private Function addEnteredValue2(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql
    
    'find the shipperID and put it in the search query
    Dim ShipVia As Integer
    If Trim(cbo.Text) <> "" Then
        tmpSQL = tmpSQL & " AND "

        'COLUMN NAME=
        tmpSQL = tmpSQL & "ShipVia = "
        'Value
        tmpSQL = tmpSQL & cbo.Column(1)

        logString = logString & "ShippingCompanyName=" & Replace(cbo.Column(0), "'", "''") & ","
    End If

    addEnteredValue2 = tmpSQL

End Function
Private Sub populateOrders(rs As adodb.Recordset)

    setSearchedValue txtOrderID, rs, 0
    setSearchedValue1 txtCustomerID, rs, 1
    setSearchedValue1 txtEmployeeID, rs, 2
    setSearchedValue txtOrderDate, rs, 3
    setSearchedValue txtRequiredDate, rs, 4
    setSearchedValue txtShippedDate, rs, 5
    
    setSearchedValue2 txtShippingCompanyName, rs, 6
    
    setSearchedValue txtShipToName, rs, 7
    btnDeleteOrders.SetFocus
    
End Sub
Private Sub populateOrderDetails(rs As adodb.Recordset)
    'rs.fields(0) is OrderID
    setSearchedValueDetails txtTotalProducts, rs, 1
    setSearchedValueDetails txtOrderAmount, rs, 2
    btnDeleteOrders.SetFocus
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    tb.Locked = False
    tb.Enabled = True
    'tb.SetFocus
    tb.Value = val
    tb.Locked = True

End Sub
Private Sub setSearchedValue1(cbo As ComboBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    cbo.Locked = False
    cbo.Enabled = True
    cbo.Value = val
    
    If cbo.Name = "txtCustomerID" Then
        CheckInactiveCustomerIDs (val)
        If CheckInactiveCustomerID = True Then ' the customerID IS INACTIVE
            cbo.ForeColor = RGB(191, 191, 191)
        Else: cbo.ForeColor = vbBlack
        End If
    End If
    
    cbo.Locked = True

End Sub
Private Sub setSearchedValue2(cbo As ComboBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
        cbo.Locked = False
        cbo.Enabled = True
        cbo.SetFocus
        cbo.Text = val
        cbo.Locked = True
    Else
       val = rs(fn).Value
    
        Dim sql As String
        sql = "Select CompanyName from Shippers where ShipperID= " & val
        Dim rs1 As adodb.Recordset
        Dim conn As adodb.Connection
        Set conn = New adodb.Connection
        conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", 0)
        conn.Open
        Set rs1 = New adodb.Recordset
        rs1.Open sql, conn
        
        cbo.Locked = False
        cbo.Enabled = True
        cbo.SetFocus
        cbo.Text = rs1.Fields(0)
        cbo.Locked = True
    End If
    
End Sub
Private Sub setSearchedValueDetails(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    If recsetDetails.RecordCount = 0 Then
        Me.Form.AllowAdditions = False
        Me.Form.AllowAdditions = True
        With txtTotalProducts
            .Visible = True
            .Locked = False
            .Enabled = False
            .Enabled = True
        
            '.SetFocus
            .Value = "0"
            .Locked = True
        End With
        With txtOrderAmount
            .Visible = True
            .Enabled = True
            .Locked = False
            '.SetFocus
            .Value = "$0.00"
            .Locked = True
        End With
    Else
    
        'to decide for null value
        Dim val As String
        If IsNull(rs(fn).Value) Then
           val = " "
        Else
           val = rs(fn).Value
        End If
        
        tb.Visible = True
        tb.Enabled = True
        tb.Locked = False
        tb.SetFocus
        tb.Text = val
        tb.Locked = True
    End If

End Sub
Private Sub txtShippingCompanyName_DblClick(Cancel As Integer)

    G_ShipCoName = ""
    DoCmd.OpenForm "FrmGetShipCoName", , , , , acDialog
    
    If G_ShipCoName <> "" Then
        setClickedValue txtShippingCompanyName, G_ShipCoName
    End If

End Sub
Private Sub setClickedValue(tb As TextBox, val As String)

    tb.Locked = False
    tb.Enabled = True
    tb.SetFocus
    tb.Text = val
    
End Sub
Private Sub setClickedValue1(cbo As ComboBox, val As String)

    cbo.Locked = False
    cbo.Enabled = True
    cbo.SetFocus
    cbo.Text = val
    
End Sub
Private Sub txtCustomerID_Change()
    txtCustomerID.Dropdown
End Sub
Private Sub txtCustomerID_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub txtCustomerID_gotfocus()

    Me.txtCustomerID.Dropdown
    
End Sub

Private Sub txtShippingCompanyName_Change()
    txtShippingCompanyName.Dropdown
End Sub
Private Sub txtShippingCompanyName_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub txtShippingCompanyName_gotfocus()

    Me.txtShippingCompanyName.Dropdown
    
End Sub
Private Sub txtCustomerID_KeyDown(keycode As Integer, Shift As Integer)

    If txtCustomerID.ListWidth = txtCustomerID.ListWidth And keycode = vbKeyDown Then
        txtCustomerID.Dropdown
    End If
    
End Sub
Private Sub btnDeleteDetailsOnly_Click()
    txtOrderID.Enabled = True
    txtOrderID.Locked = False
    txtOrderID.SetFocus
    
    If Trim(txtOrderID) <> "" Then
        G_OrderID = txtOrderID.Text
        txtOrderID.Locked = True
        If recsetDetails.RecordCount = 0 Then
            MsgBox "There are no Order Details for this OrderID yet. " _
                & "Please go to form Enter New Order Details if you wish to enter any information."
            Exit Sub
        Else
            DoCmd.OpenForm "frmDeleteOrderDetails", , , , , acDialog
        End If
    Else
        MsgBox "You have not chosen any Order yet.", vbOKOnly
    End If
   
End Sub

========================================================================================
--frmEnterNewCustomers
Option Compare Database
Option Explicit
Dim Flag As Boolean
Dim recset As adodb.Recordset
Dim RandomCompanyName As String
Dim RandomCustomerID As String
Dim Integrity As Integer
Dim CountDuplicate As Long
Dim InsertSQL As String
Dim DefaultSQL As String

Private Sub btnClose_Click()
    DoCmd.Close
    If AddNewWhenInsert = False Then
        DoCmd.OpenForm "frmCustomerManagement", , , , , acDialog
    End If
End Sub
Private Sub CheckIntegrity()

    Integrity = 1
    Dim x As Control
    For Each x In Me.Controls
        If x.Tag = "preserve" Then
            x.Enabled = True
            x.Locked = False
            If Trim(x.Value & vbNullString) = vbNullString Then
                Integrity = 0
                Exit For
            End If
        End If
    Next x
    If Integrity = 0 Then
        MsgBox "Cannot Update: Data not complete.", vbOKOnly
    Else
        Integrity = 1
    End If
   
End Sub
Private Sub btnSave_Click()

'On Error GoTo dingdong
    'check if all filled

    CheckIntegrity
    If Integrity = 1 Then
        'quote G_CustomerID
        G_CustomerID = txtCustomerID.Value
        If MsgBox("Are you sure to save the Customer? ID=" & G_CustomerID, _
                 vbOKCancel, "Insert Confirmation") = vbOK Then
            '-----------------------------------------------------------------------------------
            'to check if the txtContactTitle is a new value not belonging to the dropdown list
            If Trim(txtContactTitle.Value) <> "" Then
                GetBoundColumnValue "ContactTitle", "Customers", "ContactTitle", _
                                    txtContactTitle, G_ContactTitle
                If G_ContactTitle = "" Then 'means no matching title, this is a new one
                    If MsgBox("The ContactTitle is not an item from the list. Are you sure to save it?", vbYesNo) = vbYes Then
                        Write_log 911, "Insert new category in ContactTitle: " _
                                    & txtContactTitle & " ,CustomerID=" & G_CustomerID, 0
                                    'silently log
                    Else: Exit Sub
                    End If
                End If
            End If
            '-------------------------------------------------------------------------------------
            DoInsert
            MsgBox "One Customer Inserted."
            Write_log 1, InsertSQL
         
            txtCustomerID.Enabled = True
            txtCustomerID.Locked = False
            txtCustomerID.SetFocus
            EquipContactTitle
            Set txtContactTitle.Recordset = G_ContactTitleSet
        End If
    End If


Exit Sub
dingdong:
    MsgBox "There seems to be an error. Please try again." & vbCrLf & Err.Source & Err.Description
    Write_log 0, Err.Source & Err.Description
    
End Sub
Private Sub DoInsert()

    Dim sql As String
    sql = "INSERT INTO Customers ([CustomerID],[CompanyName], [ContactName], [ContactTitle], [Address], " _
        & "[City], [Region], [PostalCode], [Country], [Phone], [Fax], Status) " _
        & "Values("
    sql = setSQLValues(sql)
    InsertSQL = sql
    
    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    conn.Execute sql
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Sub cboCountry_afterupdate()
'ENTER FORMs use afterdate only for cascading
'all invalid input will go to NotInList event and addnew there
'UPDATE FORMs use afterupdate to check/cascading/addnew
    If Trim(cboCountry.Text) <> "" Then
        'the cboShipcountry.RowSource must be'Table/Query'
        'to use.text
        Dim newCountry As String
        newCountry = Me.cboCountry
        G_CountryName = newCountry
        EquipRegion
        Set cboRegion.Recordset = G_RegionSet
        cboRegion = cboRegion.ItemData(8)
        'default value ontario
        
    End If
    If cboCountry = "Canada" Then
        
        txtPostalCode.InputMask = "L0L 0L0"
    Else
        txtPostalCode.InputMask = ""
    End If

End Sub
Private Sub Cbocountry_NotInList(newData As String, Response As Integer)
         
    If IsNumeric(newData) Then
        GetBoundColumnValue "Country", "CountryList", "CountryID", newData, G_CountryName
        If G_CountryName = "" Then 'means there is no such value matching this Country number
            MsgBox "No Country Matches this ID number. Please check again."
            cboCountry = ""
            G_CountryName = ""
            EquipCountry
            Set cboCountry.Recordset = G_CountrySet
            Response = acDataErrContinue
        Else 'there is a country matching this number
            Me.cboCountry = G_CountryName
            Response = acDataErrContinue
            'make the cbo populate G_countryname
        End If
    Else 'there is string input
        Dim intAnswer As Integer
        
        intAnswer = MsgBox(" """ & newData & """  is not an approved category. " & vbCrLf _
        & "Do you want to add it now?", vbYesNo + vbQuestion, "Invalid Category")
        Select Case intAnswer
        
            Case vbYes
                DoInsert1 newData
                EquipCountry
                Set cboCountry.Recordset = G_CountrySet
                Write_log 111, "Insert new category in CountryList: " _
                    & newData & " ,CustomerID=" & G_CustomerID, 0
                Response = acDataErrContinue
                'Response=acDataErrAdded Is ok too
                
            Case vbNo
        
                cboCountry = ""
                G_CountryName = ""
                EquipCountry
                Set cboCountry.Recordset = G_CountrySet
                cboCountry.Dropdown
                Response = acDataErrContinue
        End Select
    
    End If
    
    
    EquipRegion G_CountryName
    Set Me.cboRegion.Recordset = G_RegionSet
    Me.cboRegion = cboRegion.ItemData(8)
    'default is Ontario
   
   
    'Dim intAnswer As Integer
    'intAnswer = MsgBox(" """ & newData & """  is not an approved category. " & vbCrLf _
        & "Do you want to add it now?", vbYesNo + vbQuestion, "Invalid Category")

    'Select Case intAnswer
        'Case vbYes
            'SendEmailsUsingSendObject "frmEnterNewCustomers", G_CustomerID, "CboCountry", newData
            'MsgBox "An notice of Asking for Permission has been sent." _
                    & "The Reference Number is " & TimeStamp & "."
            'Write_log 111, "Insert new category in CountryList: " _
                        & newData & " ,CustomerID=" & G_CustomerID, 0
            'DoCmd.OutputTo acOutputForm, "frmEnterNewCustomers", acFormatPDF, _
                            , , True

            'cboCountry = ""
            'Response = acDataErrAdded
            
        'Case vbNo
        
            'MsgBox "Please select an item from the list.", _
                vbExclamation + vbOKOnly, "Invalid Entry"
            
            'cboCountry.Undo
            'Response = acDataErrContinue
    'End Select
        
        'G_CountryName = "" 'so that the region return to nothing
        'otherwise,region will still follow the previous G_Countryname
        'EquipCountry
        'Set Me.cboCountry.Recordset = G_CountrySet
        
        'EquipRegion
        'Set cboRegion.Recordset = G_RegionSet
        'cboRegion = cboRegion.ItemData(8)
        'default value ontario
End Sub
Private Sub DoInsert1(newData As String)
    Dim conn As New adodb.Connection
    Dim sql As String
    sql = "INSERT INTO Countrylist( Country ) VALUES ('" & newData & "')"

    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    conn.Execute sql

    conn.Close
    Set conn = Nothing
    
End Sub
Private Sub cboCountry_gotfocus()

        'DefaultSQL = "select Country, CountryID from CountryList WHERE "
        'FilterCboAsYouType G_CountrySet, cboCountry, DefaultSQL, "CountryID", "Country"
        'Set Me.cboCountry.Recordset = FilterSet
        cboCountry.Dropdown
 
End Sub
Private Sub cboCountry_Change()
 
        'DefaultSQL = "select Country, CountryID from CountryList WHERE "
        'FilterCboAsYouType G_CountrySet, cboCountry, DefaultSQL, "CountryID", "Country"
        'Set Me.cboCountry.Recordset = FilterSet
        cboCountry.Dropdown

End Sub
Private Sub cboCountry_KeyDown(keycode As Integer, Shift As Integer)

    cboCountry.Dropdown

End Sub

Private Sub cboRegion_BeforeUpdate(Cancel As Integer)

End Sub

Private Sub imgStringGenerator_Click()
    Dim x As Byte
    x = 0
    Do While x < 1
        GetString 13
        RandomCompanyName = RandomString
        RandomCustomerID = UCase(Left(RandomString, 5))
        CheckDuplicate "CustomerID", "Customers", RandomCustomerID
        If CountDuplicate = 0 Then 'no duplicate, can continue
            x = x + 1
        End If
    Loop
    txtCustomerID.Value = RandomCustomerID
    txtCompanyName.Value = RandomCompanyName
End Sub
Private Sub doClear()
    Dim x As Control
    For Each x In Me.Controls
         If TypeOf x Is TextBox Then
         x.Locked = False
         x.Enabled = True
         x.SetFocus
         x = " "
        
         End If
    Next x
    txtCustomerID.SetFocus
End Sub
Private Function setSQLValues(sql_Values As String) As String
    Dim sql As String
    sql = sql_Values
    'sql = AddValue(sql, ControlName, "datatype")
    
    sql = AddValue(sql, txtCustomerID) & ", "
    sql = AddValue(sql, txtCompanyName) & ", "
    sql = AddValue(sql, txtContactName) & ", "
    sql = AddCboValue(sql, txtContactTitle) & ", "
    sql = AddValue(sql, txtAddress) & ", "
    sql = AddValue(sql, txtCity) & ", "
    sql = AddCboValue(sql, cboRegion) & ", "
    sql = AddValue(sql, txtPostalCode) & ", "
    sql = AddCboValue(sql, cboCountry) & ", "
    sql = AddValue(sql, txtPhone) & ", "
    sql = AddValue(sql, txtFax) & ", "
    sql = AddValueForNull(sql)
    sql = sql & ")"

    setSQLValues = sql
    
End Function
Private Function AddValueForNull(sql As String) As String
    Dim tmpSQL As String
    
    tmpSQL = sql
    tmpSQL = tmpSQL & "NULL"
    AddValueForNull = tmpSQL
    
End Function
Private Function AddValue(sql As String, txtbox As TextBox, Optional ft As String = "S") As String
    Dim tmpSQL As String
    txtbox.SetFocus
    
    tmpSQL = sql

        If ft = "S" Then
            tmpSQL = tmpSQL & "'" & Replace(CStr(txtbox.Text), "'", "''") & "'"
            ' the above is to solve the problem of single quote
        Else
            tmpSQL = tmpSQL & "'" & txtbox.Text & "'"
        End If
     
    AddValue = tmpSQL
    
End Function
Private Function AddCboValue(sql As String, cbo As ComboBox, Optional ft As String = "S") As String
    Dim tmpcboSQL As String
    cbo.SetFocus
    
    tmpcboSQL = sql

        If ft = "S" Then
            tmpcboSQL = tmpcboSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
        Else
            tmpcboSQL = tmpcboSQL & "'" & cbo.Text & "'"
        End If
     
    AddCboValue = tmpcboSQL
    
End Function
Private Sub Form_Timer()

    lblDateTime.Caption = Get_DT
    
End Sub
Private Sub Form_Load()

    CountDuplicate = 0
    'populate the current date_time
    lblDateTime.Caption = Get_DT
    'turn on the timer on the form
    Me.TimerInterval = 1000 'set the interval of timer to 1 second =1000ms
    lblDateTime.RightMargin = 0
    
    Me.Caption = "Enter New Customers"
    'No display navi. Buttons (on the bottom)
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    
    Me.cboCountry.RowSourceType = "Table/Query"
    EquipCountry
    Set Me.cboCountry.Recordset = G_CountrySet
    Flag = False
    cboCountry.Value = "Canada"
    txtPostalCode.InputMask = "L0L 0L0"
    Flag = True
    
    Me.cboRegion.RowSourceType = "Table/query"
    EquipRegion "Canada"
    Set Me.cboRegion.Recordset = G_RegionSet
    G_RegionSet.Find "Regions='Ontario'"
    cboRegion.Value = G_RegionSet.Fields(0)
    
    'the same as CboCountry
    'to equip 'txtContactTitle'
    EquipContactTitle
    Set Me.txtContactTitle.Recordset = G_ContactTitleSet
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    txtCustomerID.SetFocus
    'DoCmd.OpenForm "frmCustomerManagement", , , , , acHidden
    ' the above is moved to its parent form "frmCustomerManagement"
End Sub
Private Sub CheckDuplicate(TargetColumnName As String, TargetTableName As String, TargetValue As String)
    Dim sql As String
    sql = "select " & TargetColumnName & " from " & TargetTableName & " WHERE " & _
         TargetColumnName & " = '" & Replace(TargetValue, "'", "''") & "'"
    Dim conn As New adodb.Connection
    Dim rs As New adodb.Recordset
    ' fetch data from External Access DBs
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    '---------------------------------------------------
    rs.CursorLocation = adUseClient
    rs.Open sql, conn, adOpenKeyset, adLockOptimistic 'static or keyset
    '---------------------------------------------------
    
    If rs.RecordCount = 0 Then ' no duplicate found
        CountDuplicate = 0
    Else
        CountDuplicate = 1
        'MsgBox "Duplicate of " & TargetColumnName & " has been found. Please check again.", _
                vbOKOnly, "Duplicate Reminder"
    End If
    
End Sub
Private Sub txtCustomerID_AfterUpdate() 'to check length + duplicate
    If Trim(txtCustomerID.Value & vbNullString) = vbNullString Then
        Exit Sub
    Else
        Dim newCustomerID As String
        If Len(Trim(txtCustomerID)) <> 5 Then
            MsgBox "The CustomerID must be 5 characters."
            txtCustomerID = "" 'the data wont be saved if the txtbox is empty anyway
            'CountDuplicate = 1 'means cant save
            
        Else
            newCustomerID = Me.txtCustomerID
            CheckDuplicate "CustomerID", "Customers", newCustomerID
            'After check,
            If CountDuplicate = 1 Then
                MsgBox "This CustomerID exists. Please check again", vbOKOnly, "Duplicate Reminder"
                txtCustomerID = ""
                txtCompanyName = ""
            End If
        End If
    End If
End Sub

Private Sub txtPhone1_AFTERupdate() 'to check format + duplicate
    If Trim(txtPhone.Value & vbNullString) = vbNullString Then
        Exit Sub
    Else

        Dim newPhone As String
        Dim i As Byte
        Dim Extract As String
        For i = 1 To Len(txtPhone.Value)
            If Mid(txtPhone.Value, i, 1) <> "(" And _
                Mid(txtPhone.Value, i, 1) <> ")" And _
                Mid(txtPhone.Value, i, 1) <> "-" And _
                Mid(txtPhone.Value, i, 1) <> " " Then
                Extract = Extract & Mid(txtPhone.Value, i, 1)
            End If
        Next i
            If IsNumeric(Extract) = False Or Len(Extract) < 8 Or InStr(1, Extract, ".") Then
                MsgBox "Phone must be at least a 8-digit number and should not " _
                    & "include punctuation marks other than ""()"" and ""-"". Please check again.", vbOKOnly
                txtPhone.SetFocus
                txtPhone = ""
            Else
                newPhone = txtPhone.Value
                CheckDuplicate "Phone", "Customers", newPhone
                'After check,
                If CountDuplicate = 1 Then
                    MsgBox "This Phone number exists. Please check again", vbOKOnly, "Duplicate Reminder"
                    txtPhone = ""
                End If
            End If
    End If

End Sub
Private Sub txtFax1_AFTERupdate()
    If Trim(txtFax.Value & vbNullString) = vbNullString Then
        Exit Sub
    Else
        Dim newFax As String
        Dim i As Byte
        Dim Extract As String
        For i = 1 To Len(txtFax.Value)
            If Mid(txtFax.Value, i, 1) <> "(" And _
                Mid(txtFax.Value, i, 1) <> ")" And _
                Mid(txtFax.Value, i, 1) <> "-" And _
                Mid(txtFax.Value, i, 1) <> " " Then
                Extract = Extract & Mid(txtFax.Value, i, 1)
            End If
        Next i
            If IsNumeric(Extract) = False Or Len(Extract) < 8 Or InStr(1, Extract, ".") Then
                MsgBox "Fax must be at least a 8-digit number and should not " _
                    & "include punctuation marks other than ""()"" and ""-"". Please check again.", vbOKOnly
                txtFax.SetFocus
                txtFax = ""
                'fax can duplicate
            End If
    End If
End Sub
Private Sub txtCompanyName_AfterUpdate()
    If Len(Trim(txtCompanyName)) <> 40 Then
        MsgBox "The CompanyName must be 40 characters."
        txtCompanyName = ""
    Else: Exit Sub
    End If
End Sub
Private Sub txtContactTitle_gotfocus()

        'DefaultSQL = "select distinct ContactTitle from Customers WHERE "
        'FilterCboAsYouType G_ContactTitleSet, txtContactTitle, DefaultSQL, , "ContactTitle"
        'Set Me.txtContactTitle.Recordset = FilterSet
        txtContactTitle.Dropdown

End Sub
Private Sub txtContactTitle_Change()

        'DefaultSQL = "select DISTINCT ContactTitle from Customers WHERE "
        'FilterCboAsYouType G_ContactTitleSet, txtContactTitle, DefaultSQL, , "ContactTitle"
        'Set Me.txtContactTitle.Recordset = FilterSet
        txtContactTitle.Dropdown

End Sub

===============================================================================================
--frmEnterNewOrders
Option Compare Database
Option Explicit
Dim Flag As Boolean 'for cascading lists
Dim DownArrowKey As Boolean
 'to switch between change event and down arrow key
Dim CloseUpdate As Boolean 'to decide when the NotInList works
Dim recset As adodb.Recordset
'---------------------------------
Dim cboChange As Boolean
Dim CustomerSet As adodb.Recordset
Dim ShipperSet As adodb.Recordset
Dim EmployeeSet As adodb.Recordset
Dim load As Boolean  'for EmployeeID, shipperID to check
Dim DefaultSQL As String 'for EmployeeID,ShipperID FilterAsYouType
Dim UpdateSQL As String
'Dim FilterSet As ADODB.Recordset 'for EmployeeID,ShipperID's dropdown list changing with the client's typing
'---------------------------------
Dim Integrity As Integer 'to check integrity
Dim CountDuplicate As Long 'to check how many duplicate records have been found
Dim neworderdate As Date 'help check duplicate
Dim newCustomerID As String
Dim InsertSQL As String
Private Sub CheckIntegrity()
    
    Integrity = IsNull(txtCustomerID) + IsNull(txtOrderDate) + _
        IsNull(txtShipPostalCode) + IsNull(txtShipAddress) + IsNull(cboCountry) + IsNull(txtCreditCard)
        
    Select Case Integrity 'returns -1 as true, 0 as false
    
        Case Is < 0
            MsgBox "Cannot Update: Data not complete.", vbOKOnly
            
        Case Else
            Integrity = 1
    End Select
        
    If Trim(text99 & vbNullString) <> vbNullString Then
        If IsNumeric(text99) Then
        
            Integrity = 2
        End If
    End If
    'if user input OrderID themselves. can save but orderid needs codes to generate.
End Sub
Private Sub CheckDuplicate()

    neworderdate = Me.txtOrderDate
    newCustomerID = Me.txtCustomerID
    Dim rsPartial As adodb.Recordset
    Dim DuplicateSql As String
    DuplicateSql = "Select OrderID from Orders " _
                    & " where status is null and CustomerID='" & Replace(newCustomerID, "'", "''") & "' AND OrderDate=#" & neworderdate & "#"
                        
    '----------------------------------------------------------------------
    'below is to find the duplicate combination of CustomerID and OrderDate
    Dim O As Integer 'to record how many DBs for loop
    Dim conn As adodb.Connection
    CountDuplicate = 0
    For O = NumberofDBs To 1 Step -1
        
        Set conn = New adodb.Connection
        conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", O)
          
        conn.Open
    
        Set rsPartial = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial.CursorLocation = adUseClient
        rsPartial.Open DuplicateSql, conn, adOpenDynamic, adLockBatchOptimistic
        '---------------------------------------------------------
        If rsPartial.RecordCount > 0 Then
           CountDuplicate = 1
           Exit For
        End If
     Next O
     
End Sub
Private Sub btnSave_Click()

'On Error GoTo dingdong
    
    'if mandatory fields are not filled
    CheckIntegrity
    If Integrity > 0 Then 'means data are complete and ready for continuing
            
        CheckDuplicate
        '--------------------------------------------------------------------
        If CountDuplicate <> 0 Then 'duplicate customerID and OrderDate

            MsgBox "Duplicate of CustomerID and OrderDate Combination", vbOKOnly
             If MsgBox("Are you sure to Save?", vbYesNo, "Duplicate Record") = vbYes Then
                If Integrity = 2 Then 'users input the orderid themselves
                    If MsgBox("OrderID is not allowed manual input. A new OrderID will be assigned. If you wish to save this Order," _
                        & " please click OK.", vbOKCancel) = vbYes Then
                        DoInsert
                        MsgBox "One Order Inserted."
                        Write_log 2, "OrderID:" & G_OrderID & ", " & "Same Client of " & newCustomerID & " has more than one orders on the same date of " & neworderdate
                    Else: Exit Sub
                    End If
                End If
             Else: Exit Sub 'do nothing,the client can continue edit fields
             End If
             
        Else
            If MsgBox("Are you sure to save the Order?", vbOKCancel, "Confirm Insert") = vbOK Then
                If Integrity = 2 Then 'users input the orderid themselves
                    If MsgBox("OrderID is not allowed manual input. A new OrderID will be assigned. If you wish to save this Order," _
                        & " please click OK.", vbOKCancel) = vbOK Then
                        DoInsert
                        MsgBox "One Order Inserted."
                        Write_log 1, Replace(InsertSQL, "getNumber()", CStr(G_OrderID))
                    Else: Exit Sub
                    End If
                 End If
            Else: Exit Sub 'client canceled update
            End If
        End If
        
        text99.Enabled = True
        text99.Locked = False
        text99.Value = G_OrderID
        text99.Locked = True
        
        txtCustomerID.SetFocus
        CheckInactiveCustomerIDs (txtCustomerID.Value)
        If CheckInactiveCustomerID = True Then ' the customerID IS INACTIVE
        'do not show in gery, all dropdown list will be grey
            'txtCustomerID.ForeColor = RGB(191, 191, 191)
            'silent log
            Write_log 111, "Customer becomes alive.", 0
        End If
        AddtoExistingOrder = False
        DoCmd.OpenForm "frmEnterOrderDetails", , , , , acDialog
    End If

    
Exit Sub
dingdong:
    MsgBox "There seems to be an error. Please try again." & vbCrLf & Err.Source & Err.Description
    Write_log 0, Err.Source & Err.Description
    
End Sub
Private Sub DoInsert()
                 
    Dim sql As String
    sql = "INSERT INTO Orders([OrderID],[CustomerID], [EmployeeID], [OrderDate], [RequiredDate], " _
        & " [ShippedDate], [ShipVia], [Freight], [ShipName], [ShipAddress], [ShipCity], [ShipRegion], " _
        & " [ShipPostalCode], [ShipCountry], [CreditCard], [Status]) " _
        & " Values (" & getNumber() & " , "
          '!use a module level getnumber()function to generate a uniqueID for each order
          'BECAUSE it requires sharing DB on the network with MULTIPLE USERS accessing the DB simultaneously
    sql = setSQLValues(sql)
    InsertSQL = sql
 
    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", NumberofDBs)
                            
    conn.Open
    conn.Execute sql

    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Function setSQLValues(sql_Values As String) As String
    Dim sql As String
    sql = sql_Values
    'sql = AddValue(sql, ControlName, "datatype")
    sql = AddCboValue(sql, txtCustomerID) & ", "
    sql = AddCboValue(sql, txtEmployeeID, "N") & ", "
    sql = AddValue(sql, txtOrderDate, "D") & ", "
    sql = AddValue(sql, txtRequiredDate, "D") & ", "
    sql = AddValue(sql, txtShippedDate, "D") & ", "
    sql = AddCboValue(sql, txtShipperID, "N") & ", "
    sql = AddValue(sql, txtFreight, "N") & ", "
    sql = AddValue(sql, txtShipName) & ", "
    sql = AddValue(sql, txtShipAddress) & ", "
    sql = AddValue(sql, txtShipCity) & ", "
    sql = AddCboValue(sql, cboShipRegion) & ", "
    sql = AddValue(sql, txtShipPostalCode) & ", "
    sql = AddCboValue(sql, cboCountry) & ", "
    sql = AddValueNoSpace(sql, txtCreditCard) & ", "
    sql = AddValueNull(sql)
    
    sql = sql & " )"

    setSQLValues = sql
    
End Function
Private Function AddValue(sql As String, txtbox As TextBox, Optional ft As String = "S") As String
    Dim tmpSQL As String
    txtbox.SetFocus
    
    tmpSQL = sql
    
    If Trim(txtbox.Text) = "" Then
        tmpSQL = tmpSQL & "NULL"
    Else
    
        Select Case ft
            Case "S"
            tmpSQL = tmpSQL & "'" & Replace(CStr(txtbox.Text), "'", "''") & "'"
            ' the above is to solve the problem of single quote
            Case "N"
            tmpSQL = tmpSQL & txtbox.Text
            Case "D"
            tmpSQL = tmpSQL & "'" & txtbox.Text & "'"
        End Select
     End If
    AddValue = tmpSQL
    
End Function
Private Function AddValueNoSpace(sql As String, txtbox As TextBox, Optional ft As String = "S") As String
    Dim tmpSQL As String
    txtbox.SetFocus
    
    tmpSQL = sql
    
    If Trim(txtbox.Text) = "" Then
        tmpSQL = tmpSQL & "NULL"
    Else
    
        Select Case ft
            Case "S"
            tmpSQL = tmpSQL & "'" & Replace(txtbox.Text, " ", "") & "'"
            ' the above is to trim all the spaces of CreditCard
            Case "N"
            tmpSQL = tmpSQL & txtbox.Text
            Case "D"
            tmpSQL = tmpSQL & "'" & txtbox.Text & "'"
        End Select
     End If
    AddValueNoSpace = tmpSQL
    
End Function
Private Function AddValueNull(sql As String) As String
    Dim tmpSQL As String
    
    tmpSQL = sql
    tmpSQL = tmpSQL & "NULL"
    AddValueNull = tmpSQL
    
End Function
Private Function AddCboValue(sql As String, cbo As ComboBox, Optional ft As String = "S") As String
    Dim tmpcboSQL As String
    cbo.SetFocus
    
    tmpcboSQL = sql
    If Trim(cbo.Text) = "" Then
        tmpcboSQL = tmpcboSQL & "NULL"
    Else
    
        Select Case ft
            Case "S"
                tmpcboSQL = tmpcboSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "N"
                tmpcboSQL = tmpcboSQL & cbo.Text
            Case "D"
                tmpcboSQL = tmpcboSQL & "'" & cbo.Text & "'"
         End Select
     End If
    AddCboValue = tmpcboSQL
    
End Function
Private Sub btnClose_Click()

    DoCmd.Close
    DoCmd.OpenForm "frmOrderManagement", , , , , acDialog
End Sub
Private Sub btnEnterOrderDetails_Click()
    
    text99.Enabled = True
    text99.Locked = False
    text99.SetFocus
    
    If Trim(text99) <> "" Then
        If IsNumeric(text99) = False Then
            MsgBox "The OrderID should be a number."
            text99 = ""
        Else
            G_OrderID = text99.Text
            text99.Locked = True
           
            'to check OrderID EXISTS or not and if yes, active or not
            Dim conn As New adodb.Connection
            Dim rs As New adodb.Recordset
            Dim DB1 As Integer
            DB1 = getDBnumber(G_OrderID)
            conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("OD", DB1)
            conn.Open
            
            Dim sql As String
            
            sql = "Select OrderID, Status from Orders " & _
                " WHERE OrderID=" & G_OrderID
            '---------------------------------
            rs.CursorLocation = adUseClient
            rs.Open sql, conn, adOpenStatic, adLockBatchOptimistic
            '---------------------------------
            If rs.RecordCount = 0 Then
            'means no such OrderID at all
                If MsgBox("This OrderID does not exist. If you wish to add details for an existing Order," _
                    & " please click OK." & vbNewLine & " If you wish to insert a new Order," _
                    & " please click Cancel and click btnSave.", vbOKCancel) = vbOK Then
                    AddtoExistingOrder = True
                    DoCmd.OpenForm "frmEnterOrderDetails", , , , , acDialog
                Else
                    Exit Sub
                End If
            Else 'THIS orderID EXISTS
                If IsNull(rs.Fields(1)) = False Then 'the status is not null, inactive OrderID
                    MsgBox "This OrderID was deleted before. If you wish to save this Order, " _
                        & "please click button Save."
                    Exit Sub
                
                'below is to update order whichwas deleted before, not good
                    '-------------------------------------------------------------------------------------
                    'If MsgBox("This OrderID was deleted before. If you wish to update this Order, " _
                        & "please click OK.", vbOKCancel) = vbOK Then
                        '--------------------------------------------------------------------
                        'CheckIntegrity ' if ALL mandatory fields are filled
                        'If Integrity = 1 Then 'means data are complete and ready for continuing
                        
                            'CheckDuplicate
                            'If CountDuplicate <> 0 Then 'duplicate customerID and OrderDate
                    
                                'MsgBox "Duplicate of CustomerID and OrderDate Combination", vbOKOnly
                                'If MsgBox("Are you sure to Update?", vbYesNo, "Duplicate Record") = vbYes Then
                                    'DoUpdate G_OrderID
                                    'Write_log 3, "OrderID:" & G_OrderID & ", " & "Same Client of " & newCustomerID & " has more than one orders on the same date of " & neworderdate
                                'Else
                                    'Exit Sub
                                'End If
                            'Else
                                'If MsgBox("Are you sure to update the Order [ID=" & G_OrderID & "]?", _
                                    vbOKCancel, "Confirm Update [" & G_OrderID & "]") = vbOK Then
                                    'DoUpdate G_OrderID
                                    'Write_log 3, UpdateSQL
                                
                                'Else: Exit Sub 'client canceled update
                                'End If
                            'End If
                        'Else: MsgBox "Data not complete."
                            'Exit Sub
                        'End If
                        '--------------------------------------------------------------------
                    'Else: Exit Sub
                    'End If
                    '-----------------------------------------------------------------------------------
                Else 'the status is null, active orderid, to continue with details
                    AddtoExistingOrder = True
                    DoCmd.OpenForm "frmEnterOrderDetails", , , , , acDialog
                    End If
                End If
    
        End If
    Else 'txtOrderID is empty
        If MsgBox("You have not inserted any new Order yet. If you wish to add details for an existing order." _
            & "Please click OK.", vbOKCancel) = vbOK Then
            AddtoExistingOrder = True
            DoCmd.OpenForm "frmEnterOrderDetails", , , , , acDialog
        Else
            MsgBox "You have not inserted any new Order yet. Please add new Order first.", vbOKOnly
        End If
           
    End If
                      
    
End Sub
Private Sub DoUpdate(i As Long)


    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    Dim DB1 As Integer
    DB1 = getDBnumber(G_OrderID)
    
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("OD", DB1)

    conn.Open
    Dim sql As String
    sql = setSQLUpdate
    sql = setSQLSet(sql)
    UpdateSQL = sql
    conn.Execute UpdateSQL
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Function setSQLUpdate() As String

    setSQLUpdate = "Update Orders "
    
End Function
Private Function setSQLSet(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt
    'sql = addUpdatedValue(sql, txtOrderID, "N")
    sql = addUpdatedValue1(sql, txtCustomerID)
    sql = addUpdatedValue1(sql, txtEmployeeID, "N")
    sql = addUpdatedValue(sql, txtOrderDate, "D")
    sql = addUpdatedValue(sql, txtRequiredDate, "D")
    sql = addUpdatedValue(sql, txtShippedDate, "D")
    sql = addUpdatedValue1(sql, txtShipperID, "N")
    sql = addUpdatedValue(sql, txtFreight, "N")
    sql = addUpdatedValue(sql, txtShipName)
    sql = addUpdatedValue1(sql, cboCountry)
    sql = addUpdatedValue(sql, txtShipPostalCode)
    sql = addUpdatedValue1(sql, cboShipRegion)
    sql = addUpdatedValue(sql, txtShipCity)
    sql = addUpdatedValue(sql, txtShipAddress)
    sql = AddUpdatedValueNoSpace(sql, txtCreditCard)
    sql = sql & ", Status=null "
    sql = sql & " where OrderID=" & G_OrderID

    setSQLSet = sql
    'logstring = sql 'tying to accumulate the user input texts for logs, but its long a SELECT clause
End Function
Private Function AddUpdatedValueNoSpace(sql As String, tb As TextBox, Optional ft As String = "S") As String
    Dim tmpSQL As String

    tb.SetFocus
    tmpSQL = sql
        
        'SET
    If InStr(1, tmpSQL, " SET ") <> 0 Then
        tmpSQL = tmpSQL & " , "
    Else
        tmpSQL = tmpSQL & " SET "
    End If
        'COLUMN NAME =
    tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
         
        'VALUE
    If Trim(tb.Text) <> "" Then
        Select Case ft
            Case "S"
            tmpSQL = tmpSQL & "'" & Replace(tb.Text, " ", "") & "'"
            ' the above is to trim all the spaces of CreditCard
            Case "N"
            tmpSQL = tmpSQL & tb.Text
            Case "D"
            tmpSQL = tmpSQL & "'" & tb.Text & "'"
        End Select
     End If
    AddUpdatedValueNoSpace = tmpSQL
    
End Function
Private Function addUpdatedValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    If tb.Tag <> "Preserve" Then ' to exclude the txtOrderID
        tb.SetFocus
        tmpSQL = sql
        
        'SET
        If InStr(1, tmpSQL, " SET ") <> 0 Then
            tmpSQL = tmpSQL & " , "
        Else
            tmpSQL = tmpSQL & " SET "
        End If
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        
    
        'VALUE
        If Trim(tb.Text) <> "" Then

            Select Case ft
                Case "S"
                    tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
                Case "D"
                    tmpSQL = tmpSQL & "'" & CStr(tb.Text) & "'"
                Case "N"
                    tmpSQL = tmpSQL & "'" & tb.Text & "'"
            
            End Select
        Else
            tmpSQL = tmpSQL & "Null"
        End If
    
        addUpdatedValue = tmpSQL
    End If
End Function
Private Function addUpdatedValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql

    'SET
    If InStr(1, tmpSQL, " SET ") <> 0 Then
        tmpSQL = tmpSQL & " , "
    Else
        tmpSQL = tmpSQL & " SET "
    End If
    'COLUMN NAME =
    If Right(cbo.Name, Len(cbo.Name) - 3) = "ShipperID" Then
        tmpSQL = tmpSQL & " ShipVia = "
    Else
        tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
    End If
    'VALUE
    If Trim(cbo.Text) <> "" Then
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "'" & CStr(cbo.Text) & "'"
            Case "N"
                tmpSQL = tmpSQL & "'" & cbo.Text & "'"
        
        End Select
    Else
            tmpSQL = tmpSQL & "Null"
    End If
    addUpdatedValue1 = tmpSQL

End Function
Private Sub cboCountry_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub cboCountry_gotfocus()
    If cboChange = True Then
        'DefaultSQL = "select Country, CountryID from CountryList WHERE "
        'FilterCboAsYouType G_CountrySet, cboCountry, DefaultSQL, "CountryID", "Country"
        'Set Me.cboCountry.Recordset = FilterSet
        cboCountry.Dropdown
    End If
End Sub
Private Sub cboCountry_Change()
    If cboChange = True Then
        'DefaultSQL = "select Country, CountryID from CountryList WHERE "
        'FilterCboAsYouType G_CountrySet, cboCountry, DefaultSQL, "CountryID", "Country"
        'Set Me.cboCountry.Recordset = FilterSet
        cboCountry.Dropdown
    End If
End Sub
Private Sub cboCountry_KeyDown(keycode As Integer, Shift As Integer)

    Me.cboCountry.Dropdown
    
End Sub
Private Sub cboShipRegion_gotfocus()

    Me.cboShipRegion.Dropdown
    
End Sub
Private Sub cboShipRegion_KeyDown(keycode As Integer, Shift As Integer)

    Me.cboShipRegion.Dropdown
    
End Sub
Private Sub txtCustomerID_Change()
    Me.txtCustomerID.Dropdown
End Sub
Private Sub txtCustomerID_gotfocus()
    Me.txtCustomerID.Dropdown
End Sub
Private Sub txtCustomerID_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub txtCustomerID_KeyDown(keycode As Integer, Shift As Integer)

    If txtCustomerID.ListWidth = txtCustomerID.ListWidth And keycode = vbKeyDown Then
        txtCustomerID.Dropdown
    End If
    
End Sub
Private Sub txtOrderDate_KeyDown(keycode As Integer, Shift As Integer)

    Select Case keycode
        Case vbKeyUp
        txtOrderDate = DateAdd("d", -1, txtOrderDate)
            
        Case vbKeyDown
        txtOrderDate = DateAdd("d", 1, txtOrderDate)
    End Select
    
End Sub
Private Sub txtRequiredDate_KeyDown(keycode As Integer, Shift As Integer)

    Select Case keycode
    Case vbKeyUp
    txtRequiredDate = DateAdd("d", -1, txtRequiredDate)
    
    Case vbKeyDown
    txtRequiredDate = DateAdd("d", 1, txtRequiredDate)
    End Select
    
End Sub
Private Sub txtShippedDate_KeyDown(keycode As Integer, Shift As Integer)

    Select Case keycode
    Case vbKeyUp
    txtShippedDate = DateAdd("d", -1, txtShippedDate)
    
    Case vbKeyDown
    txtShippedDate = DateAdd("d", 1, txtOrderDate)
    End Select
    
End Sub
Private Sub txtShippedDate_afterupdate()
    If IsNull(txtShippedDate) = False Then
        If CDate(txtShippedDate) < CDate(txtOrderDate) Then
            MsgBox "ShippedDate should be no earlier than OrderDate. Please check again."
            txtShippedDate = ""
            text99.SetFocus
            txtShippedDate.SetFocus
        End If
    End If
End Sub
Private Sub txtRequiredDate_afterupdate()
    If IsNull(txtRequiredDate) = False Then
        If CDate(txtRequiredDate) < CDate(txtOrderDate) Then
            MsgBox "RequiredDate should be no earlier than OrderDate. Please check again."
            txtRequiredDate = ""
            text99.SetFocus
            txtRequiredDate.SetFocus
        End If
    End If
End Sub
Private Sub Form_Timer()

    lblDateTime.Caption = Get_DT
    
End Sub
Private Sub Form_Load()
    load = True
    cboChange = True
    
    'populate the current date_time
    lblDateTime.Caption = Get_DT
    'turn on the timer on the form
    Me.TimerInterval = 1000 'set the interval of timer to 1 second =1000ms
    lblDateTime.RightMargin = 0
    
    Me.Caption = "Enter New Orders"
    'No display navi. Buttons (on the bottom)
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    text99.Locked = True
    
    Me.cboCountry.RowSourceType = "Table/Query"
    EquipCountry
    Set Me.cboCountry.Recordset = G_CountrySet
    Flag = False
    cboCountry.Value = "Canada"
    
    Flag = True
    
    Me.cboShipRegion.RowSourceType = "Table/query"
    EquipRegion "Canada"
    Set Me.cboShipRegion.Recordset = G_RegionSet
    G_RegionSet.Find "Regions='Ontario'"
    cboShipRegion.Value = G_RegionSet.Fields(0)
    
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    'txtCustomerID.SetFocus
    With txtCustomerID
        .ListWidth = .ListWidth
    End With
    
    '------------------------------------
    Active = 2 'for forms about ORders, all customers' info is needed
    EquipCustomerID Active
    Set Me.txtCustomerID.Recordset = G_CustomerSet ' only one word can populate combobox with recordset
    With txtCustomerID
        .ListWidth = .ListWidth
    End With

    '------------------------------------
    
    txtShipperID.RowSourceType = "Table/Query"
    getG_ComboSet 2, ShipperSet, "Shippers", "ShipperID", "CompanyName"
    Set Me.txtShipperID.Recordset = ShipperSet ' only one word can populate combobox with recordset
    With txtShipperID
        .ListWidth = .ListWidth
    End With
    '----------------------------------------------------
    txtEmployeeID.RowSourceType = "Table/Query"
    
    Dim con As adodb.Connection
    Set con = New adodb.Connection
    ' fetch data from External Access DBs
    con.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    con.Open
    Dim sql As String
    sql = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
              "FROM Employees Where Status is null Order by EmployeeID"
    Set EmployeeSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    EmployeeSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    EmployeeSet.Open sql, con, adOpenDynamic, adLockPessimistic
    Set Me.txtEmployeeID.Recordset = EmployeeSet ' only one word can populate combobox with recordset
    With txtEmployeeID
        .ListWidth = .ListWidth
    End With
    '-----------------------------------------------------------
    'DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
    load = False
    text99.SetFocus
    text99.Locked = True
    G_OrderID = 0
    CloseUpdate = False
End Sub

Private Sub cboCountry_afterupdate()
'ENTER FORMs use afterdate only for cascading
'all invalid input will go to NotInList event and addnew there
'UPDATE FORMs use afterupdate to check/cascading/addnew

   If Trim(cboCountry.Text) <> "" Then
    'the cboShipcountry.RowSource must be'Table/Query'
    'to use.text
        G_CountryName = Me.cboCountry
        
    End If
    EquipRegion G_CountryName
    Set Me.cboShipRegion.Recordset = G_RegionSet
    Me.cboShipRegion = cboShipRegion.ItemData(8)
    
End Sub
Private Sub Cbocountry_NotInList(newData As String, Response As Integer)

    newData = Me.cboCountry.Text
    '!!!!!!!here .text means what you type, .value means the previously selected item for cbo box
    If IsNumeric(newData) Then
        GetBoundColumnValue "Country", "CountryList", "CountryID", newData, G_CountryName
        If G_CountryName <> "" Then
            Me.cboCountry = G_CountryName
            Response = acDataErrContinue
        Else
            Me.cboCountry = ""
            G_CountryName = "" 'so that the region return to nothing
            'otherwise,region will still follow the previous G_Countryname
            EquipCountry
            Set Me.cboCountry.Recordset = G_CountrySet
            cboCountry.Dropdown
            Response = acDataErrContinue
        End If
        
    Else
        
        Dim intAnswer As Integer
        intAnswer = MsgBox(" """ & newData & """  is not an approved category. " & vbCrLf _
                & "Do you want to add it now?", vbYesNo + vbQuestion, "Invalid Category")
        
        Select Case intAnswer
            Case vbYes
                getReferenceNumber
                'SendEmails "frmEnterNewOrders", CStr(G_OrderID), "cboCountry", newData
                SendEmailsUsingSendObject "frmEnterNewOrders", CStr(G_OrderID), "cboCountry", newData
                'below is not working
                'DoCmd.OpenForm "frmEnterNewOrders", , , , , acHidden
                'SendEmailsUsingOutPutTo "frmEnterNewOrders"
                'DoCmd.OpenForm "frmEnterNewOrders", , , , , acDialog
                MsgBox "An notice of Asking for Permission has been sent." _
                        & "The Reference Number is " & TimeStamp & "."
                        
                Write_log 111, "Insert new category in CountryList: " _
                            & newData & " ,CustomerID=" & G_CustomerID, 0
                
                cboCountry = ""
    
                'Response = acDataErrAdded
                Response = acDataErrContinue
            Case vbNo
            
                MsgBox "Please select an item from the list.", _
                    vbExclamation + vbOKOnly, "Invalid Entry"
                
                cboCountry.Undo
                Response = acDataErrContinue
        End Select
        G_CountryName = "" 'so that the region return to nothing
        'otherwise,region will still follow the previous G_Countryname
        EquipCountry
        Set Me.cboCountry.Recordset = G_CountrySet
    End If
        
        EquipRegion G_CountryName
        Set cboShipRegion.Recordset = G_RegionSet
        cboShipRegion = cboShipRegion.ItemData(8)
        'default value ontario

End Sub
Private Sub DoInsert1(newData As String)
    Dim conn As New adodb.Connection
    Dim sql As String
    sql = "INSERT INTO Countrylist( Country ) VALUES ('" & newData & "')"

    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    conn.Execute sql

    conn.Close
    Set conn = Nothing
    
End Sub
Private Sub txtCustomerID_DblClick(Cancel As Integer)

    'G_CustomerID = " "
    'DoCmd.OpenForm "FrmGetCustomers", , , , , acDialog

    'If G_CustomerID <> "" Then
        'setClickedValue txtCustomerID, G_CustomerID
       
    'End If
End Sub

Private Sub setClickedValue(cbo As ComboBox, val As String)

    cbo.Locked = False
    cbo.Enabled = True
    cbo.SetFocus
    cbo.Text = val
    
End Sub
Private Sub txtShipperID_DblClick(Cancel As Integer)

    'G_ShipCoName = ""
    'DoCmd.OpenForm "FrmGetShipCoName", , , , , acDialog
    
    'If G_ShipCoName <> "" Then
        'setClickedValue1 txtShipperID, G_ShipCoName
    'End If

End Sub
Private Sub setClickedValue1(txt As TextBox, val As String)

    cbo.Locked = False
    cbo.Enabled = True
    cbo.SetFocus
    cbo.Text = val
    
End Sub
Private Sub txtEmployeeID_AfterUpdate()
    'txtEmployeeID.SetFocus
    If Trim(txtEmployeeID) <> "" Then
    
        Dim newEmployeeID As String
        newEmployeeID = Me.txtEmployeeID
        If IsNumeric(newEmployeeID) = True Then
            CheckInputWithPK "Employees", newEmployeeID, "EmployeeID", txtEmployeeID
            If Found = False Then
                txtEmployeeID.Value = ""
                If MsgBox("This EmployeeID is not valid. Please check again." _
                    & "If you wish to add a new Customer, please click Yes. ", vbYesNo) = vbYes Then
                    'DoCmd.OpenForm "frmEnterNewEmployees", , , , , acDialog
                    AddNewWhenInsert = True
                    'to close the openedform, the EnterOrdersform will be acDialog
                    DoCmd.OpenForm "frmEnterNewCustomers", , , , , acDialog 'just for testing here
                    getG_ComboSet Active, EmployeeSet, "Employees", "EmployeeID", "FirstName & ' ' & LastName & ' ,' & Title as Employee "
                    Set txtEmployeeID.Recordset = EmployeeSet
                    'requery the table of Employees to get the lastest recordset
                    AddNewWhenInsert = False
                    text99.SetFocus
                    txtEmployeeID.SetFocus
                    
                Else
                    text99.SetFocus
                    txtEmployeeID.SetFocus
                    Exit Sub
                End If
            
            End If
        Else: MsgBox "The EmployeeID is an integer. Please check again.", vbOKOnly
            txtEmployeeID.Value = ""
            text99.SetFocus
            txtEmployeeID.SetFocus
        End If
    End If
        
End Sub
Private Sub txtEmployeeID_KeyDown(keycode As Integer, Shift As Integer)

    If keycode = vbKeyDown Or keycode = vbKeyUp Then
        DownArrowKey = True
        txtEmployeeID.Dropdown
    Else
        DownArrowKey = False
    
    End If
    
End Sub
Private Sub txtEMPLOYEEID_change()
If DownArrowKey = False Then

    If load = False And cboChange = True Then
        
        DefaultSQL = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
                  "FROM Employees WHERE "
        
        FilterCboAsYouType EmployeeSet, txtEmployeeID, DefaultSQL, "EmployeeID", "FirstName", "LastName", "Title"
    
        Set Me.txtEmployeeID.Recordset = FilterSet
        txtEmployeeID.Dropdown

    End If
End If
End Sub

Private Sub txtEmployeeID_gotfocus()
    If load = False And cboChange = True Then
        DefaultSQL = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
                    "FROM Employees WHERE "
        FilterCboAsYouType EmployeeSet, txtEmployeeID, DefaultSQL, "EmployeeID", "FirstName", "LastName", "Title"
        Set Me.txtEmployeeID.Recordset = FilterSet
        
    End If
    Me.txtEmployeeID.Dropdown
End Sub
Private Sub txtEmployeeID_Click()
    cboChange = False
    SendKeys "{F4}"
    cboChange = True
    'close the dropdownlist in one move
End Sub
Private Sub txtShipperID_AfterUpdate()
    'txtEmployeeID.SetFocus
    If Trim(txtShipperID) <> "" Then
    
        Dim newShipperID As String
        newShipperID = Me.txtShipperID
        If IsNumeric(newShipperID) = True Then
            Dim rs As adodb.Recordset
            Dim conn As adodb.Connection
            Set conn = New adodb.Connection
            ' fetch data from External Access DBs
            conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", 0)
                                   
            conn.Open
            
            Set rs = New adodb.Recordset ' to link "conn.open" to "rs.open"
            rs.CursorLocation = adUseServer 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
            rs.Open "Shippers", conn, adOpenKeyset, adLockOptimistic, adCmdTableDirect
            rs.MoveFirst
            rs.Index = "PrimaryKey"
            rs.Seek newShipperID
            If rs.EOF = True Then
                
                MsgBox "This ShipperID is not valid. Please check again.", vbOKOnly
                'txtEmployeeID.SetFocus
                txtShipperID.Value = ""
            
            End If
        Else: MsgBox "The ShipperID is an integer. Please check again.", vbOKOnly
            txtShipperID.Value = ""
        End If
    Else
        Exit Sub
    End If
        
End Sub
Private Sub txtShipperID_KeyDown(keycode As Integer, Shift As Integer)

    If keycode = vbKeyDown Or keycode = vbKeyUp Then
        DownArrowKey = True
        txtShipperID.Dropdown
    Else
        DownArrowKey = False
    
    End If
    
End Sub
Private Sub txtShipperID_change()
If DownArrowKey = False Then
    If load = False Then
        
        DefaultSQL = "select ShipperID, CompanyName " & _
                  "FROM Shippers WHERE "
        
        FilterCboAsYouType ShipperSet, txtShipperID, DefaultSQL, "ShipperID", "CompanyName"
    
        Set Me.txtShipperID.Recordset = FilterSet
        txtShipperID.Dropdown

    End If
End If
End Sub
Private Sub txtShipperID_gotfocus()
    If load = False Then
        DefaultSQL = "select ShipperID, CompanyName " & _
                  "FROM Shippers WHERE "
        
        FilterCboAsYouType ShipperSet, txtShipperID, DefaultSQL, "ShipperID", "CompanyName"
    
        Set Me.txtShipperID.Recordset = FilterSet
        
    End If
    txtShipperID.Dropdown
End Sub
Private Sub txtFreight_AFTERupdate()
    
    If IsNull(Trim(txtFreight)) = True Then
        Exit Sub
    Else
    
        If IsNumeric(txtFreight.Value) = True Then
            Dim x As Currency
            x = txtFreight.Value
            If x >= 0 Then
                x = 0
            Else
                MsgBox "Freight must be Positive. Please check again.", vbOKOnly
                txtFreight.SetFocus
                txtFreight = " "
            End If
        Else
            MsgBox "Freight must be Positive. Please check again.", vbOKOnly
            txtFreight.SetFocus
            txtFreight = " "
        End If
    End If
        'txtEmployeeID.SetFocus 'not working
End Sub

================================================================================================
--frmEnterOrderDetails
Option Compare Database
Dim ProductSet As adodb.Recordset
Dim recset As adodb.Recordset
Dim FilterSet As adodb.Recordset
Dim DefaultSQL As String
Dim UpdateSQL As String
Dim DeleteSQL As String
'----------------------------
Dim Integrity As Integer
Dim CountDuplicate As Long 'to check how many duplicate records have been found
Dim InsertSQL As String

Dim DownArrowKey As Boolean

Dim DelNo As Byte

Private Sub btnClosePage_Click()

    Text22.Enabled = True
    Text22.Locked = False
    'Text22.SetFocus
    Text22.Value = ""
    
    DoCmd.Close

End Sub

Private Sub btnDelete_Click()
    Dim h As Byte
    Dim DeleteProductID As Long
    Dim ProductIDString As String
    Dim countSelect As Byte
    countSelect = 0
    If lstOrderDetails.ListIndex = -1 Then
        MsgBox "You have not chosen any details yet."
        Exit Sub
    Else
        If MsgBox("Are you sure to delete the OrderDetail(s) you entered?", vbYesNo) = vbYes Then
            DelNo = InputBox("Please type in the number of the reason deleting the OrderDetails." & vbNewLine & _
                        "1 Client Canceled partial Order" & vbNewLine & _
                        "2 Client Returned partial of the whole Items" & vbNewLine & _
                        "3 Items Out of Stock" & vbNewLine & _
                        "4 Item Lost on Delivery" & vbNewLine & _
                        "5 Other Reasons", "Deletion")
            'to check if the client has typed the right number
            If IsNumeric(DelNo) = True Then
                Dim a As Integer
                Dim b As Integer
                Dim Count As Byte
                Count = 0
                a = DelNo
                If a = DelNo Then
                    For b = 1 To 5
                        If b = DelNo Then
                            Count = Count + 1
                        End If
                    Next b
                End If
                'if the number typed in is right
                If Count > 0 Then
                    For h = 0 To lstOrderDetails.ListCount - 1
                        If lstOrderDetails.Selected(h) = True Then
                            countSelect = countSelect + 1
                            DeleteProductID = lstOrderDetails.ItemData(h)
                            ProductIDString = ProductIDString & DeleteProductID & ","
                            'itemdata shows the boundcolumn value
                            'lstOrderDetails.RemoveItem (h)
                            G_ProductID = DeleteProductID
                            DeleteDBRecords G_ProductID
                            Write_log -2, DeleteSQL
                           
                        End If
                    Next h
                Else: MsgBox "Please choose the number from below."
                    Exit Sub
                End If
            Else: MsgBox "Please choose the number from below."
                Exit Sub
            End If
        Else: Exit Sub
        End If
    End If
    
    Dim position As Byte
    Dim start As Byte
    start = 1
    Dim countCom As Byte
    For countCom = 1 To Len(ProductIDString)
        If InStr(countCom, ProductIDString, ",") > 0 Then
            position = InStr(countCom, ProductIDString, ",")
            countCom = position + 1
            DeleteProductID = CLng(Mid(ProductIDString, start, position - start))
            For h = 0 To lstOrderDetails.ListCount - 1
                If lstOrderDetails.ItemData(h) = DeleteProductID Then
                    lstOrderDetails.RemoveItem (h)
                End If
            Next h
            start = position + 1
        End If
    Next countCom
    
                    
End Sub
Private Sub DeleteDBRecords(id As Long)
    Dim DB1 As Integer
    DB1 = getDBnumber(G_OrderID)
    
    
    DeleteSQL = "Update  OrderDetails_" & DB1 & " Set Status = " & DelNo & " where OrderID= " & G_OrderID _
          & " and ProductID=" & id
          '!use a module level getnumber()function to generate a uniqueID for each order
          'BECAUSE it requires sharing DB on the network with MULTIPLE USERS accessing the DB simultaneously
 
    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("OD", DB1)
                            
    conn.Open
    conn.Execute DeleteSQL

    conn.Close
    'release memory
    Set conn = Nothing
End Sub
Private Sub Form_Load()
    'populate the current date_time
    lblDateTime.Caption = Get_DT
    'turn on the timer on the form
    Me.TimerInterval = 1000 'set the interval of timer to 1 second =1000ms
    lblDateTime.RightMargin = 0
   
    Me.Caption = "Enter Order Details"
    
    ' No display navi. Buttons (on the bottom)
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    'lstOrderDetails.RowSourceType = "value list"
    'Dim i As Byte
    'For i = 0 To lstOrderDetails.ListCount - 1
        'lstOrderDetails.RemoveItem (i)
    'Next i
    
    Me.Filter = "Text22 =" & G_OrderID
    Me.FilterOn = True
    Text22.Enabled = True
    Text22.Locked = False
    'Text22.SetFocus
    Text22.Value = G_OrderID
    
     If AddtoExistingOrder = False Then
        Text22.Locked = True
    Else
        Text22.Locked = False
    End If
    
    CheckInactiveOrderIDs G_OrderID
    
    If CheckInactiveOrderID = False Then
        'the orderid is active
        'to load existing details to the listbox
        AddListBox "recset"
       
    End If
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    '------------------------------------
    txtProductID.RowSourceType = "Table/Query"
    
    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    ' fetch data from External Access DBs
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    
    Dim sql As String
    sql = "SELECT ProductID, ProductName " & _
              "FROM Products WHERE Status is null"
    Set ProductSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    ProductSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    ProductSet.Open sql, conn, adOpenDynamic, adLockPessimistic
    Set Me.txtProductID.Recordset = ProductSet ' only one word can populate combobox with recordset
    With txtProductID
        .ListWidth = .ListWidth
    End With
    'txtCustomerID.SetFocus
    '------------------------------------
    Text22.SetFocus
    'lstOrderDetails.MultiSelect 1
    'Multiple items are selected or deselected by choosing them with the mouse or by pressing the Spacebar.
    'lstOrderDetails.BoundColumn = 2
End Sub
Private Sub text22_AfterUpdate()
'text22 is txtOrderID
    Dim DB1 As Integer
    Dim sql As String
    
    Dim conn As adodb.Connection
    Dim MaxRecNo As Long
    MaxRecNo = getNumber - 1
   
    If AddtoExistingOrder = True Then
        If Trim(Text22 & vbNullString) = vbNullString Then
            MsgBox "An OrderID needs to be inserted."
        Else
            If IsNumeric(Text22) = False Then
                
                MsgBox "OrderID needs to be a number between 1 and " & MaxRecNo
                Text22 = ""
                Text00.SetFocus
                Text22.SetFocus
            Else
                G_OrderID = Text22
                If G_OrderID = 0 Then
                    MsgBox "OrderID needs to be a number between 1 and " & MaxRecNo
                    Text22 = ""
                    Text00.SetFocus
                    Text22.SetFocus
                Else
                    CheckInactiveOrderIDs G_OrderID
                    If CheckInactiveOrderID = True Then
                        MsgBox "This OrderID was either deleted or does not exist. Please check."
                        Exit Sub
                    Else 'active order
                        AddListBox "recset"
                    End If
                    
                End If
            End If

        End If
    End If
End Sub
Private Sub txtProductID_AfterUpdate()
    'txtEmployeeID.SetFocus
    If Trim(txtProductID) <> "" Then
    
        Dim newProductID As String
        newProductID = Me.txtProductID
        If IsNumeric(newProductID) = True Then
            'Dim rs As ADODB.Recordset
            'Dim conn As ADODB.Connection
            'set conn = New ADODB.Connection
            ' fetch data from External Access DBs
            'conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", 0)
            'conn.Open
            
            'Set rs = New ADODB.Recordset ' to link "conn.open" to "rs.open"
            'rs.CursorLocation = adUseServer 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
            'rs.Open "Products", conn, adOpenKeyset, adLockOptimistic, adCmdTableDirect
            'rs.MoveFirst
            'rs.Index = "PrimaryKey"
            'rs.Seek newProductID
            CheckInputWithPK "Products", newProductID, "ProductID", txtProductID
            If Found = False Then
                
                MsgBox "This ProductID is not valid. If you wish to add new products, please go to Product Management System.", vbOKOnly
                'txtEmployeeID.SetFocus
                txtProductID.Value = ""
                Text22.SetFocus
                txtProductID.SetFocus
            Else 'automatic assignment
                G_ProductID = txtProductID
                GetBoundColumnValue "UnitPrice", "Products", "ProductID", CStr(G_ProductID), , G_UnitPrice
                txtUnitPrice = G_UnitPrice
                txtUnitPrice.SetFocus
            End If
        Else: MsgBox "The ProductID is an integer. If you wish to add new products, please go to Product Management System.", vbOKOnly
            txtProductID.Value = ""
            Text22.SetFocus
            txtProductID.SetFocus
        End If
    Else
        Exit Sub
    End If
        
End Sub
Private Sub txtProductID_keydown(keycode As Integer, Shift As Integer)

    If keycode = vbKeyDown Or keycode = vbKeyUp Then
        DownArrowKey = True
        txtProductID.Dropdown
    Else
        DownArrowKey = False
    
    End If
    
End Sub
Private Sub txtProductID_Change()
If DownArrowKey = False Then
    DefaultSQL = "select ProductID, ProductName " & _
                "FROM Products WHERE "
    FilterCboAsYouType ProductSet, txtProductID, DefaultSQL, "ProductID", "ProductName"
    Set Me.txtProductID.Recordset = FilterSet
    Me.txtProductID.Dropdown
End If
End Sub
Private Sub txtProductID_gotfocus()
    
    DefaultSQL = "select ProductID, ProductName " & _
                "FROM Products WHERE "
    FilterCboAsYouType ProductSet, txtProductID, DefaultSQL, "ProductID", "ProductName"
    Set Me.txtProductID.Recordset = FilterSet
    Me.txtProductID.Dropdown
    
End Sub
Private Function FilterCboAsYouType(rs As adodb.Recordset, cbo As ComboBox, sql As String, Column1 As String, Column2 As String, Optional Column3 As String, Optional Column4 As String)
    'Column1 for number
    'column2~4 for text or date
    
    ' this is to AutoExpand when user is typing in the textpart
    Dim conn As adodb.Connection
    Dim strSQL As String
    strSQL = sql
    cbo.SetFocus
    If Len(cbo.Text) > 0 Then

        If IsNumeric(cbo.Text) Then 'if user typed a number
        
            strSQL = strSQL & Column1 & " LIKE '%" & cbo.Text & "%' AND Status is null"
            
        Else 'if users typed anything
            
            strSQL = strSQL & "( " & Column2 & " LIKE '%" & Replace(cbo.Text, "'", "''") & "%'"
            If Column3 <> "" Then
                strSQL = strSQL & " or " & Column3 & " LIKE '%" & Replace(cbo.Text, "'", "''") & "%'"
            End If
            If Column4 <> "" Then
                strSQL = strSQL & " or " & Column4 & " LIKE '%" & Replace(cbo.Text, "'", "''") & "%'"
            End If
            strSQL = strSQL & ") and status is null"
        End If
    Else
        Set FilterSet = rs 'This is the default recordset of combo box
        Exit Function
    End If
    
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                        "Data Source=" & GetAddress("O", 0)
                       
    conn.Open
    Set FilterSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    FilterSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    FilterSet.Open strSQL, conn, adOpenDynamic, adLockPessimistic
    
End Function
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub
Private Sub CheckIntegrity()
    'if mandatory fields are not filled
    Integrity = IsNull(txtProductID) + IsNull(txtUnitPrice) + IsNull(txtQuantity) + IsNull(txtDiscount)
    Select Case Integrity
    'returns -1 as true, 0 as false
    Case Is < 0
        MsgBox "Data not entered.", vbOKOnly
    Case Else
        Integrity = 1
    End Select
End Sub
Private Sub CheckDuplicate()
    
    G_ProductID = txtProductID
    Dim DB1 As Integer
    DB1 = getDBnumber(G_OrderID)
    Dim rsPartial As adodb.Recordset
    Dim rsPartial2 As adodb.Recordset
    Dim DuplicateSql As String
    DuplicateSql = "Select OrderID from OrderDetails_" & DB1 _
                    & " where status is null and OrderID=" & G_OrderID & " AND ProductID=" & G_ProductID
                        
    '----------------------------------------------------------------------
    'below is to find the duplicate combination of ProductID and OrderID
    Dim conn As adodb.Connection
    CountDuplicate = 0

    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("OD", DB1)
      
    conn.Open

    Set rsPartial = New adodb.Recordset
    '---------------------------------------------------------
    rsPartial.CursorLocation = adUseClient
    rsPartial.Open DuplicateSql, conn, adOpenStatic, adLockBatchOptimistic
    '---------------------------------------------------------
   
    If rsPartial.RecordCount > 0 Then
        CountDuplicate = 1
        Exit Sub
    Else 'no active key violation
        DuplicateSql = "Select OrderID from OrderDetails_" & DB1 _
                    & " where OrderID=" & G_OrderID & " AND ProductID=" & G_ProductID
        Set rsPartial2 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial2.CursorLocation = adUseClient
        rsPartial2.Open DuplicateSql, conn, adOpenStatic, adLockBatchOptimistic
        If rsPartial2.RecordCount > 0 Then
            'means an inactive record cause the keyviolation
            CountDuplicate = 2
        End If
    End If
End Sub
Private Sub btnSave_Click()
    
    If Text22.Value = "0" Or Trim(Text22 & vbNullString) = vbNullString Then
        MsgBox "Cannot Insert: the Order is null or the OrderID is invalid."
        Exit Sub
    End If
    'if mandatory fields are not filled
    CheckIntegrity
    If Integrity = 1 Then 'means data are complete and ready for continuing
            
        CheckDuplicate
        '--------------------------------------------------------------------
        If CountDuplicate = 1 Then 'duplicate of active PK--OrderID and ProductID

            MsgBox "Cannot save: Duplicate of OrderID and ProductID Combination", vbOKOnly, "Key Violation."
            Exit Sub 'do nothing,the client can continue edit fields
             
        ElseIf CountDuplicate = 2 Then
            If MsgBox("OrderDetails of OrderID= " & G_OrderID & " AND ProductID= " & G_ProductID & " was deleted once. " & _
                        " Please confirm to continue to insert.", vbOKCancel) = vbOK Then
                
                DoUpdate G_OrderID, G_ProductID
                AddListBox
                Write_log 3, UpdateSQL
                Write_log 111, "Update inactive OrderDetail where OrderID= " & G_OrderID & " AND ProductID= " & G_ProductID
            Else
                Exit Sub
            End If
            
        Else
            If MsgBox("Are you sure to save the OrderDetails?", vbOKCancel, "Confirm Insert") = vbOK Then
                DoInsert
                AddListBox
                MsgBox "OrderDetails Inserted."
                Write_log 1, InsertSQL
                Else: Exit Sub 'client canceled update
                End If
        End If

        Text22.SetFocus
    End If
    
End Sub
Private Sub CalculatelblTotal()
    Dim DB1 As Integer
    DB1 = getDBnumber(G_OrderID)
    Dim sql As String
    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("OD", DB1)

    conn.Open
    
    sql = "select sum(Quantity) as TotalProducts, " _
        & " format(sum(iif(unitprice*quantity*(1-Discount) is null,0,unitprice*quantity*(1-Discount))),'0,#.00') " _
        & " as TotalAmount from OrderDetails_" & DB1 _
        & " where OrderID=" & G_OrderID
        
    Dim rs As adodb.Recordset
    Set rs = New adodb.Recordset
    rs.CursorLocation = adUseClient
    rs.CursorType = adOpenStatic
    rs.LockType = adLockBatchOptimistic
    rs.Open sql, conn
    If rs.RecordCount > 0 Then
        lblTotal.Caption = "Total Products: " & rs.Fields(0) & vbNewLine _
                        & "Total Amount: $" & rs.Fields(1)
    Else
        lblTotal.Caption = "Total Products: 0" & vbNewLine _
                        & "Total Amount: $0.00 "
    End If
    
End Sub
Private Sub DoUpdate(a As Long, b As Long)

    Dim DB1 As Integer
    DB1 = getDBnumber(G_OrderID)
    Dim sql As String
    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("OD", DB1)

    conn.Open
    
    sql = "Update OrderDetails_" & DB1 & " "
    sql = setSQLSet(sql)
    UpdateSQL = sql
    
    conn.Execute UpdateSQL
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Function setSQLUpdate() As String

    'setSQLUpdate = "Update OrderDetails_"
    
End Function
Private Function setSQLSet(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt
    sql = addUpdatedValue(sql, txtUnitPrice, "N")
    sql = addUpdatedValue(sql, txtQuantity, "N")
    sql = addUpdatedValue(sql, txtDiscount, "N")
    sql = sql & " , Status=null "
    sql = sql & " where OrderID=" & G_OrderID & " and ProductID=" & G_ProductID

    setSQLSet = sql
    'logstring = sql 'tying to accumulate the user input texts for logs, but its long a SELECT clause
End Function

Private Function addUpdatedValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    tb.SetFocus
    tmpSQL = sql
        
    'SET
    If InStr(1, tmpSQL, " SET ") <> 0 Then
        tmpSQL = tmpSQL & " , "
    Else
        tmpSQL = tmpSQL & " SET "
    End If
    'COLUMN NAME =
    tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        

    'VALUE
    If Trim(tb.Text) <> "" Then

        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "'" & CStr(tb.Text) & "'"
            Case "N"
                tmpSQL = tmpSQL & "'" & tb.Text & "'"
            
        End Select
    Else
        tmpSQL = tmpSQL & "Null"
    End If

    addUpdatedValue = tmpSQL
   
End Function

Private Sub AddListBox(Optional a As String)
    Me.lstOrderDetails.ColumnCount = 6
    'lstOrderDetails.ColumnHeads = True
    lblColumnHead.BackColor = Get_Color2
    'recset.AddNew
    'recset!OrderID = Text22
    'recset!ProductID = txtProductID
    'recset!UnitPrice = txtUnitPrice
    'recset!Quantity = txtQuantity
    'recset!Discount = txtDiscount
    'Dim SalesPrice As Currency
    'Dim a As Single
    'Dim b As Integer
    'Dim c As Single
    'a = txtUnitPrice
    'b = txtQuantity
    'c = txtDiscount
    'SalesPrice = a * b * (1 - c)
    'recset!SalesPrice = CStr(SalesPrice)
    'recset.Update
    'cant update a combination column of salesPrice within the recordset
    'lstOrderDetails.RowSourceType = "table/query"
    
    '-------------------------------
    lstOrderDetails.RowSourceType = "Value List"
    
    If a = "recset" Then
        If lstOrderDetails.ListCount > 0 Then
        
            lstOrderDetails.RowSource = ""
  
        End If
            
        Dim DB1 As Integer
        DB1 = getDBnumber(G_OrderID)
        Dim sql As String
        sql = "Select OrderID, ProductID, UnitPrice, Quantity, Discount, SalesPrice  " _
            & " from (" _
            & " Select OrderID, ProductID, UnitPrice,Quantity,Discount, " _
            & " ccur(iif(Unitprice*quantity*(1-Discount) is null,0, Unitprice*quantity*(1-Discount))) " _
            & " as SalesPrice " _
            & " from OrderDetails_" & DB1 _
            & " where OrderID=" & G_OrderID _
            & " and Status is null ) as t"
        Dim conn As adodb.Connection
        Set conn = New adodb.Connection
        
        conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                        "Data Source=" & GetAddress("OD", DB1)
        conn.Open
        Set recset = New adodb.Recordset
        recset.CursorLocation = adUseClient
        recset.Open sql, conn, adOpenStatic, adLockBatchOptimistic
        If recset.RecordCount > 0 Then 'pop the results in the listbox, otherwise do nothing
            MsgBox "There are existing Details. Please check and enter new ones."
            recset.MoveFirst
            Do While Not recset.EOF
                lstOrderDetails.AddItem recset.Fields(0) & "," & _
                                        recset.Fields(1) & "," & _
                                        recset.Fields(2) & "," & _
                                        recset.Fields(3) & "," & _
                                        recset.Fields(4) & "," & _
                                        recset.Fields(5) & ";"
                recset.MoveNext
            Loop
        Else: Exit Sub
        End If
    ElseIf a = "" Then
        lstOrderDetails.AddItem Text22 & "," & _
                                txtProductID & "," & _
                                txtUnitPrice & "," & _
                                txtQuantity & "," & _
                                txtDiscount & "," & _
                                Text00 & ";"
        Dim x As Byte
        x = lstOrderDetails.ListCount - 1
        lstOrderDetails.Selected(x) = True
        'to select the latest detail
        
    End If
    'lstOrderDetails.Requery
    CalculatelblTotal
End Sub
Private Sub DoInsert()
    Dim DB1 As Integer
    DB1 = getDBnumber(G_OrderID)
    
    Dim sql As String
    sql = "INSERT INTO OrderDetails_" & DB1 & " ([OrderID],[ProductID], [UnitPrice], [Quantity], [Discount], Status) " & _
          "Values ('" & G_OrderID & "', "
          '!use a module level getnumber()function to generate a uniqueID for each order
          'BECAUSE it requires sharing DB on the network with MULTIPLE USERS accessing the DB simultaneously
    sql = setSQLValues(sql)
    InsertSQL = sql
 
    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", DB1)
                            
    conn.Open
    conn.Execute sql

    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Function setSQLValues(sql_Values As String) As String
    Dim sql As String
    sql = sql_Values
    'sql = AddValue(sql, textboxName, "datatype")
    
    sql = AddValue1(sql, txtProductID, "N") & ", "
    sql = AddValue(sql, txtUnitPrice, "N") & ", "
    sql = AddValue(sql, txtQuantity, "N") & ", "
    sql = AddValue(sql, txtDiscount, "N") & ", "
    sql = AddValueNull(sql)
    sql = sql & ")"

    setSQLValues = sql
    

End Function
Private Function AddValueNull(sql As String) As String
    Dim tmpSQL As String
    
    tmpSQL = sql
    tmpSQL = tmpSQL & "NULL"
    AddValueNull = tmpSQL
    
End Function
Private Function AddValue(sql As String, txtbox As TextBox, Optional ft As String = "S") As String
    Dim tmpSQL As String
    txtbox.SetFocus
    tmpSQL = sql

            If ft = "N" Then
                tmpSQL = tmpSQL & txtbox.Text
            End If
     
    AddValue = tmpSQL
    
End Function
Private Function AddValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String
    Dim tmpSQL As String
    cbo.SetFocus
    tmpSQL = sql

            If ft = "N" Then
                tmpSQL = tmpSQL & cbo.Text
            End If
     
    AddValue1 = tmpSQL
    
End Function
Private Sub txtUnitPrice_AFTERupdate()
        
    If IsNumeric(txtUnitPrice.Value) = True Then
        Dim x As Single
        x = txtUnitPrice.Value
        If x > 0 Then
            x = 0
        Else
            MsgBox "UnitPrice must be a Positive Single. Please check again.", vbOKOnly
            txtUnitPrice.SetFocus
            txtUnitPrice = " "
            Text22.SetFocus
            txtUnitPrice.SetFocus
        End If
    Else
        MsgBox "UnitPrice must be a Positive Single. Please check again.", vbOKOnly
        txtUnitPrice.SetFocus
        txtUnitPrice = " "
        Text22.SetFocus
        txtUnitPrice.SetFocus
    End If
        
End Sub
Private Sub txtQuantity_AFTERupdate()

    If IsNumeric(txtQuantity.Value) = True Then
        Dim x As Long
        x = txtQuantity.Value
        If x = txtQuantity And x > 0 Then
            x = 0
        Else
            MsgBox "Quantity must be a Positive Integer. Please check again.", vbOKOnly
            txtQuantity.SetFocus
            txtQuantity = " "
            Text22.SetFocus
            txtQuantity.SetFocus
        End If
    Else
        MsgBox "Quantity must be a Positive Integer. Please check again.", vbOKOnly
        txtQuantity.SetFocus
        txtQuantity = " "
        Text22.SetFocus
        txtQuantity.SetFocus
    End If
 
End Sub
Private Sub txtDiscount_AFTERupdate()

    If IsNumeric(txtDiscount.Value) = True Then
        Dim x As Single
        x = txtDiscount.Value
        If x >= 0 And x < 1 Then
            x = 0
        Else
            MsgBox "Discount must be a Decimal or Zero. Please check again.", vbOKOnly
            'txtDiscount.SetFocus
            txtDiscount = " "
            Text22.SetFocus
            txtDiscount.SetFocus
        End If
    Else
        MsgBox "Discount must be a a Decimal or Zero. Please check again.", vbOKOnly
        'txtDiscount.SetFocus
        txtDiscount = " "
        Text22.SetFocus
        txtDiscount.SetFocus
    End If
        
End Sub

=========================================================================================
--frmGetCustomers
Option Compare Database
Option Explicit
Dim recset As adodb.Recordset
Dim mark As Variant
Dim RecCount As Integer
Dim CurRecord As Integer

Private Sub btnNext_Click()
    'my idea is when btnNext is clicked,recordset.find will autodetect the current record
    'and let the next 1000 or 50 records show
    
    'no need to use recordset.find, as i gonna to pop 50 records per time
    'Dim criteria As String
    'criteria = "CustomerID='" & Trim(Left(lstCustomers.ItemData(lstCustomers.ListCount - 1), 8)) & "'"
    'recset.Find criteria, 1, adSearchForward, 1
    'recset.MoveNext
    'clear the listbox first....
    'ready for populate the listbox
    'Do While Not recset.EOF
        'doAddListItem recset
        'recset.MoveNext
    'Loop
    
    recset.Bookmark = mark ' move to the 50th record
    If CurRecord < RecCount Then
        CurRecord = CurRecord + 1
        'before populate the listbox, we need to clear the listbox
        Dim i As Long
        For i = 0 To lstCustomers.ListCount - 1
            lstCustomers.RemoveItem 0
        Next i
        
        Dim j As Long
        For j = 1 To 50
            recset.Move j, mark
            doAddListItem recset
        Next j
        
        mark = recset.Bookmark
        lblRecordset.Caption = CurRecord & "/" & RecCount
    Else
        MsgBox "Already the end of the records", vbOKOnly
    End If
    
End Sub
Private Sub btnPrevious_Click()
    recset.Bookmark = mark
    If CurRecord > 1 Then
        Dim i As Long
        'before populate the listbox, we need to clear the listbox
        For i = 0 To lstCustomers.ListCount - 1
            lstCustomers.RemoveItem 0
        Next i
        
        Dim j As Long
        For j = -50 To -1
            recset.Move j, mark
            doAddListItem recset
        Next j
        
        mark = recset.Bookmark
        CurRecord = CurRecord - 1
        lblRecordset.Caption = CurRecord & "/" & RecCount
    Else
        MsgBox "Already the beginning of the records", vbOKOnly
    End If
    
End Sub
Private Sub btnCancel_Click()
    
    DoCmd.Close
    
End Sub
Private Sub btnSelete_Click()
    lstCustomers_DblClick 0
    'btnCancel_Click
End Sub
Private Sub lstCustomers_DblClick(Cancel As Integer)

    G_CustomerID = Trim(Left(lstCustomers.ItemData(lstCustomers.ListIndex), 8))

    btnCancel_Click
    
End Sub
Private Sub Form_Load()
    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    
    lstCustomers.RowSourceType = "value list"
    
    Dim conn As adodb.Connection
    'Dim rs As ADODB.Recordset
    Dim SQLServer As String
    Dim SQLStmt As String
    
    'method 1 : fetch data from SQL SERVER
    SQLServer = "SQLSRVDB"
    SQLStmt = "SELECT CustomerID, CompanyName " & _
              "FROM Customers"

    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=SQLOLEDB; " & _
                            "Server=" & SQLServer & "; " & _
                            "Database=your_db; Trusted_Connection=yes;"
                            
    conn.Open
    'Set recset = conn.Execute(SQLStmt)
    
    'Dim command As ADODB.command
    'command.ActiveConnection = conn
    'command.CommandText = SQLStmt
    Set recset = New adodb.Recordset
    recset.Open SQLStmt, conn, adOpenKeyset, adLockOptimistic
    'below is to devide how many pages the recordset has in total
    RecCount = -Int(-recset.RecordCount / 50)
    'RecCount = Round(recset.RecordCount / 50, 0)
    '---------------------------------------------------
    'method 2: fetch data from outer Access DB,
    'which will be illustrated in frmGetShipCoName
    
    '----------------------------------------------------
    'method 3: fetch data from Excel
    'conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                             "Data Source=C:\Users\...\XXXX.xlsx;" & _
                             "Extended Properties=""Excel 12.0 Xml;HDR=YES"";"
                             
    '----------------------------------------------------
    
    'method 4: fetch data from currentproject's table
    'Set conn = CurrentProject.Connection
    'Set rs = New ADODB.Recordset
    'rs.Open SQLStmt, conn
    '--------------------------------
    
    'Me.lstCustomers.RowSourceType = "Table/List"
 
    'Set lstCustomers.Recordset = rs is not working
    
    'instead of populating first 1000 or so records, i decide to pop 50 per time
    'Do While Not recset.EOF
        'doAddListItem recset
        'recset.MoveNext
    'Loop
    Dim i As Long
    i = 0
    For i = 1 To 50
        recset.Move i
        doAddListItem recset
    Next i
    'mark the current 50th record
    'however, this recset
    mark = recset.Bookmark
    CurRecord = 1
    lblRecordset.Caption = CurRecord & "/" & RecCount

    'id better not close recset, cause i need it in a form level
    'rs.Close
    'Set rs = Nothing
    'conn.Close
    'Set conn = Nothing
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1

End Sub

Private Sub doAddListItem(rs As adodb.Recordset)

    Dim listValue As String
    
    listValue = rs(0).Value & space(8 - Len(CStr(rs(0).Value))) & rs(1)
    lstCustomers.AddItem listValue
    
    
End Sub
Private Sub Form_Timer()
lblDateTime.Caption = Get_DT
End Sub

===============================================================
--frmGetShipCoName
Option Compare Database
Option Explicit

Private Sub btnCancel_Click()
    
    DoCmd.Close
    
End Sub

Private Sub btnSelete_Click()
    lstShipCoName_DblClick 0
    'btnCancel_Click
End Sub

Private Sub lstShipCoName_DblClick(Cancel As Integer)

    G_ShipCoName = lstShipCoName.ItemData(lstShipCoName.ListIndex)

    btnCancel_Click
End Sub

Private Sub Form_Load()
    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    
    Dim conn As adodb.Connection
    Dim rs As adodb.Recordset

    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=C:\Users\...\Orders_DB.mdb;"
    conn.Open
    Set rs = New adodb.Recordset
    rs.Open "SELECT CompanyName FROM Shippers ORDER BY CompanyName", conn
    Do While Not rs.EOF
        lstShipCoName.AddItem rs(0).Value
        rs.MoveNext
    Loop
    rs.Close
    Set rs = Nothing
    conn.Close
    Set conn = Nothing
        
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1

End Sub

Private Sub Form_Timer()
lblDateTime.Caption = Get_DT
End Sub

====================================================================
--frmOrderManagement
Option Compare Database
Dim TimerSeconds As Long
Private Sub btnClosePage_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmWelcome", , , , , acDialog
End Sub


Private Sub Form_Load()

    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    TimerSeconds = TimerSeconds + 1
    lblDateTime.RightMargin = 0
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    
    Form.Section(0).BackColor = Get_Color1
    
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    
    Me.Caption = "Welcome to Julia.com - Select a feature to start work"
    Me.NavigationButtons = False
    Me.RecordSelectors = False
    DoCmd.OpenForm "frmWelcome", , , , , acHidden
End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub
Private Sub lblViewOrders_Click()
    DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
    DoCmd.OpenForm "frmViewOrders", , , , , acDialog
End Sub
Private Sub lblEnterNewOrders_Click()
    DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
    DoCmd.OpenForm "frmEnterNewOrders", , , , , acDialog
End Sub
Private Sub lblUpdateOrders_Click()
    DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
    DoCmd.OpenForm "frmUpdateOrders", , , , , acDialog
End Sub
Private Sub lblDeleteOrders_Click()
    DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
    DoCmd.OpenForm "frmDeleteOrders", , , , , acDialog
End Sub
Private Sub lblDeleteOrders_MouseMove(button As Integer, Shift As Integer, x As Single, y As Single)

    lblDeleteOrders.SpecialEffect = 1
    
End Sub
Private Sub lblViewOrders_MouseMove(button As Integer, Shift As Integer, x As Single, y As Single)

    lblViewOrders.SpecialEffect = 1
    
End Sub
Private Sub lblEnterNewOrders_MouseMove(button As Integer, Shift As Integer, x As Single, y As Single)

    lblEnterNewOrders.SpecialEffect = 1
    
End Sub
Private Sub lblEnterNewOrders_Mousedown(button As Integer, Shift As Integer, x As Single, y As Single)

    lblEnterNewOrders.SpecialEffect = 3
    
End Sub
Private Sub lblEnterNewOrders_Mouseup(button As Integer, Shift As Integer, x As Single, y As Single)

    lblEnterNewOrders.SpecialEffect = 2
    
End Sub
Private Sub lblUpdateOrders_MouseMove(button As Integer, Shift As Integer, x As Single, y As Single)

    lblUpdateOrders.SpecialEffect = 1
    
End Sub

'Private Sub Detail_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)

    'Dim a As Control
    'For Each a In Me.Controls
        'If TypeOf a Is Label Then
        'a.SpecialEffect = 1
        'End If
    'Next a
    
'End Sub

'Private Sub Detail_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)

    'Dim a As Control
    'For Each a In Me.Controls
        'If TypeOf a Is Label Then
        'a.SpecialEffect = 3
        'End If
    'Next a
'End Sub

============================================================================================
--frmStart 
Option Compare Database
Option Explicit

Private Sub Form_Load()

DoCmd.OpenForm "frmWelcome", , , , , acDialog

'give it 0.2s to open FrmStart and intriguing Form_timer

Me.TimerInterval = 200
End Sub

Private Sub Form_Timer()
DoCmd.Close
End Sub

===========================================================================================
--frmUpdateCustomers
Option Compare Database
Option Explicit
Dim recset As adodb.Recordset
Dim CustomerSet As adodb.Recordset

Dim Flag As Boolean 'for cbocountry
Dim load As Boolean 'for cbobox Checking
Dim checkPhone As Boolean 'for dropdown list to close properly
Dim cboChange As Boolean
Dim DefaultSQL As String 'help with filterAsYouType to generate filterSet
Dim Editable As Boolean 'determine if btnEdit can work
Dim Integrity As Integer
Dim CountDuplicate As Long 'to check how many duplicate records have been found

Dim MaxRecNo As Long
Dim RecordNumber As Long
Dim fastNumber As Integer

Dim UpdateSQL As String
Dim SQLStmt As String
Private Sub btnFirst_Click()
    If RecordNumber > 1 Then
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveFirst
        populateResult recset
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If

End Sub
Private Sub btnFastPrevious_Click()
    If RecordNumber > 1 Then
        If RecordNumber > fastNumber Then
            RecordNumber = RecordNumber - fastNumber
            recset.Move -fastNumber
            populateResult recset
        ElseIf RecordNumber < fastNumber Then
            RecordNumber = 1
            recset.MoveFirst
            populateResult recset
        End If
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnPrevious_Click()

    If RecordNumber > 1 Then
        RecordNumber = RecordNumber - 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MovePrevious
        populateResult recset
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If

End Sub
Private Sub btnLast_Click()
    If RecordNumber < MaxRecNo Then
        RecordNumber = MaxRecNo
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveLast
        populateResult recset
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
End Sub
Private Sub btnFastNext_Click()
    If RecordNumber < MaxRecNo Then
        If RecordNumber < MaxRecNo - fastNumber Then
            RecordNumber = RecordNumber + fastNumber
            recset.Move fastNumber
            populateResult recset
        Else
            RecordNumber = MaxRecNo
            recset.MoveLast
            populateResult recset
        End If
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
    
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnNext_Click()

    If RecordNumber < MaxRecNo Then
        RecordNumber = RecordNumber + 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveNext
        populateResult recset
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If

End Sub
Private Sub ChangeColorToWrite(Change As Boolean)
    If Change = True Then
        Dim x As Control
        For Each x In Me.Controls
            If TypeOf x Is TextBox And x.Tag <> "Preserve" Then
                x.BackColor = Get_Color3
                x.SetFocus
                x.Enabled = True
                x.Locked = False
            End If
        Next x
        
        Dim y As Control
        For Each y In Me.Controls
            If TypeOf y Is ComboBox And y.Tag <> "Preserve" Then
                y.BackColor = Get_Color3
                y.SetFocus
                y.Enabled = True
                y.Locked = False
            End If
        Next y
    Else
        Dim m As Control
        For Each m In Me.Controls
            If TypeOf m Is TextBox And m.Tag <> "Preserve" Then
                m.BackColor = vbWhite
                m.SetFocus
                
                m.Locked = True
            End If
        Next m
        
        Dim n As Control
        For Each n In Me.Controls
            If TypeOf n Is ComboBox And n.Tag <> "Preserve" Then
                n.BackColor = vbWhite
                n.SetFocus
                
                n.Locked = True
            End If
        Next n
    End If
End Sub
Private Sub CheckIntegrity()
    Integrity = IsNull(txtPhone) + IsNull(txtAddress) + IsNull(cboRegion) + IsNull(cboCountry)
        
        Select Case Integrity
            Case Is < 0
                MsgBox "Cannot Update: Data not complete.", vbOKOnly
                
            Case Else
                Integrity = 1
        End Select
End Sub
Private Sub CheckDuplicate()
    
    If Trim(txtPhone) <> "" Then
        Dim newPhone As String
        newPhone = Me.txtPhone
        CountDuplicate = 0
        G_CustomerID = txtCustomerID.Value
        Dim sql As String
        sql = "Select Phone from Customers where Phone='" & Replace(newPhone, "'", "''") & "' AND CustomerID <> '" & Replace(G_CustomerID, "'", "''") & "'"
        Dim rs As adodb.Recordset
        Dim conn As adodb.Connection
        Set conn = New adodb.Connection
        ' fetch data from External Access DBs
        conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", 0)
        conn.Open
        
        Set rs = New adodb.Recordset ' to link "conn.open" to "rs.open"
        rs.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
        rs.Open sql, conn, adOpenKeyset, adLockOptimistic
        If rs.RecordCount = 0 Then
            CountDuplicate = 0
        Else
            CountDuplicate = 1
            MsgBox "The same Phone number can apply for one CustomerID only. "
            Exit Sub
        End If
    Else
        CountDuplicate = 1
        MsgBox "Can't Update: Phone number can't be null."
    End If

End Sub
Private Sub btnEdit_Click()
  
    If btnEdit.Caption = "Edit" Then
    
        If Editable = True Then 'means btnEdit can work, there are records updateable

            btnEdit.SetFocus
            btnEdit.Caption = "Update"
            ChangeColorToWrite True
            OpenNavigationButtons False
            txtContactName.SetFocus
            load = False 'cbo can check
            
        Else 'btnEdit can't work
            MsgBox "Cannot Update: No records found in the DB. " _
                & "Please try click to reEnter more information for search."
            Exit Sub
        End If
        
    Else
        
        CheckDuplicate
        If CountDuplicate = 0 Then 'means no duplicate Phone number
        
            CheckIntegrity 'if mandatory fields are not filled
            If Integrity = 1 Then 'means data are complete and ready for continuing
                'quote the CustomerID
                G_CustomerID = txtCustomerID.Value
                If MsgBox("Are you sure to update the Customer [ID=" & G_CustomerID & "]?", _
                      vbOKCancel, "Confirm Update [" & G_CustomerID & "]") = vbOK Then
                    '-------------------------------------------------------
                    'to check if the txtContactTitle is a new value not belonging to the dropdown list
                    'txtContactTitle.SetFocus
                    If Trim(txtContactTitle.Value) <> "" Then
                        GetBoundColumnValue "ContactTitle", "Customers", "ContactTitle", txtContactTitle, G_ContactTitle
                        If G_ContactTitle = "" Then 'means no matching title, this is a new one
                            If MsgBox("The ContactTitle is not an item from the list. Are you sure to save it?", vbYesNo) = vbYes Then
                                Write_log 911, "Update new category in ContactTitle: " _
                                    & txtContactTitle & " ,CustomerID=" & G_CustomerID, 0
                                    'silently log
                            Else
                                MsgBox "Please select from the list."
                                txtContactTitle.SetFocus
                                Exit Sub
                            End If
                        End If
                    End If
                    '-------------------------------------------------------
                    UpdateFrontBack

                    Write_log 3, UpdateSQL
                    btnEdit.Caption = "Edit"
                    ChangeColorToWrite False
                    OpenNavigationButtons True
                    load = True 'update complete, cbo can't check
                    EquipContactTitle
                    Set txtContactTitle.Recordset = G_ContactTitleSet
                Else: Exit Sub 'client canceled update, do nothing
                End If
                
            End If
            
        End If

    End If

    txtContactName.SetFocus
End Sub
Private Sub UpdateFrontBack()
    Dim sql As String
    sql = setSQLUpdate
    sql = setSQLSet(sql)
    UpdateSQL = sql
    
    DoUpdate UpdateSQL

    recset!CompanyName = txtCompanyName
    recset!ContactName = txtContactName
    recset!ContactTitle = txtContactTitle
    recset!Address = txtAddress
    recset!City = txtCity
    recset!Region = cboRegion
    recset!PostalCode = txtPostalCode
    recset!Country = cboCountry
    recset!Phone = txtPhone
    recset!Fax = txtFax
               
    'the above works without any error
    'i guess,its because the datatype of the fields in the table of db
    'the table of customers are all text format
    'when the ADO Fetches records from customers
    'the null value will be ""
    'an empty string can be assigned to an text field
    'but in frmUpdateOrders
    'an empty string in the textbox can not be assigned to a number field
    'because the number field will be NULL if there is no record there
    ' so empty string assigned to a number/date field which is null already is not workable
    recset.Update
    populateResult recset
End Sub
Private Sub DoUpdate(sql As String)

    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open

    conn.Execute UpdateSQL
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Function setSQLUpdate() As String

    setSQLUpdate = "Update Customers "
    
End Function
Private Function setSQLSet(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt

    sql = addUpdatedValue(sql, txtCompanyName)
    sql = addUpdatedValue(sql, txtContactName)
    sql = addUpdatedValue1(sql, txtContactTitle)
    sql = addUpdatedValue(sql, txtAddress)
    sql = addUpdatedValue(sql, txtCity)
    sql = addUpdatedValue1(sql, cboRegion)
    sql = addUpdatedValue(sql, txtPostalCode)
    sql = addUpdatedValue1(sql, cboCountry)
    sql = addUpdatedValue(sql, txtPhone)
    sql = addUpdatedValue(sql, txtFax)

    sql = sql & " where CustomerID='" & Replace(G_CustomerID, "'", "''") & "'"

    setSQLSet = sql
End Function
Private Function addUpdatedValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    If tb.Tag <> "Preserve" Then ' to exclude the txtOrderID
        tb.SetFocus
        tmpSQL = sql
        
        'SET
        If InStr(1, tmpSQL, " SET ") <> 0 Then
            tmpSQL = tmpSQL & " , "
        Else
            tmpSQL = tmpSQL & " SET "
        End If
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        
    
        'VALUE
        If Trim(tb.Text) <> "" Then

            Select Case ft
                Case "S"
                    tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
                Case "D"
                    tmpSQL = tmpSQL & "'" & CStr(tb.Text) & "'"
                Case "N"
                    tmpSQL = tmpSQL & "'" & tb.Text & "'"
            
            End Select
        Else
            tmpSQL = tmpSQL & "Null"
        End If
    
        addUpdatedValue = tmpSQL
    End If
End Function
Private Function addUpdatedValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql

    'WHERE
    If InStr(1, tmpSQL, " SET ") <> 0 Then
        tmpSQL = tmpSQL & " , "
    Else
        tmpSQL = tmpSQL & " SET "
    End If
    'COLUMN NAME =
    tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
    'VALUE
    If Trim(cbo.Text) <> "" Then
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "'" & CStr(cbo.Text) & "'"
            Case "N"
                tmpSQL = tmpSQL & "'" & cbo.Text & "'"
        
        End Select
    Else
            tmpSQL = tmpSQL & "Null"
    End If
    addUpdatedValue1 = tmpSQL

End Function
Private Sub btnReset_Click()
    If Editable = True Then 'btnEdit can work,means there are data returned by search
    
        ChangeColorToWrite False
        
        OpenNavigationButtons True
        
        populateResult recset
        btnEdit.Caption = "Edit"
        txtCustomerID.SetFocus
    Else
        MsgBox "There is nothing to reset. Please click to reEnter and search.", vbOKOnly, "Reminder"
    End If
End Sub
Private Sub OpenNavigationButtons(button As Boolean)
    If button = True Then
        btnNext.Enabled = True
        btnFastNext.Enabled = True
        btnLast.Enabled = True
        btnPrevious.Enabled = True
        btnFastPrevious.Enabled = True
        btnFirst.Enabled = True
    Else
        btnNext.Enabled = False
        btnFastNext.Enabled = False
        btnLast.Enabled = False
        btnPrevious.Enabled = False
        btnFastPrevious.Enabled = False
        btnFirst.Enabled = False
    End If
End Sub
Private Sub btnSearchCustomers_Click()
    Dim TotalCustomers As Long
    If btnSearchCustomers.Caption = "Search Customers" Then
    
        CheckActive "frmUpdateCustomers" 'always check first to get the lastest Active
        TotalCustomers = getCustomersCount(Active)
        MsgBox "Searching within a total of " & TotalCustomers & " Customers. Please wait.", vbOKOnly
        
        btnSearchCustomers.SetFocus
        btnSearchCustomers.Caption = "Searching"
        btnEdit.SetFocus
        btnSearchCustomers.Enabled = False
        load = True 'combo can't check before the search
        doSearch
        'determine editable/openNavigationButtons within the sub of doSearch
        'because not sure reseach returns nothing or sth
        btnSearchCustomers.Enabled = True
        btnSearchCustomers.SetFocus
        btnSearchCustomers.Caption = "Click to Reset"
        
        'lblPrompt.Caption = ""
    Else ' it is "Click to Reset and Reenter" switching btw search and clear
        'btnReset_Click
        ChangeColorToWrite False
        doInit
        load = False
        Editable = False ' btnEdit can't work on blank form
        
        btnSearchCustomers.Caption = "Search Customers"
        btnEdit.Caption = "Edit"
    End If
End Sub
Private Sub doSearch()
    Dim sql As String

    Dim conn As adodb.Connection
    Set recset = New adodb.Recordset

    sql = setSQLSelect 'to assign static portion of the query
    sql = setSQLWhere(sql) 'to add WHERE clause collecting entered values
    SQLStmt = sql '!reserve the query in the form level

    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open

    recset.CursorLocation = adUseClient
    '---------------------------------------------------------

    recset.Open SQLStmt, conn, adOpenStatic, adLockBatchOptimistic
    '---------------------------------------------------------
    If recset.RecordCount = 0 Then
        MsgBox "No Customers found. Please try enter some more information. "
        Write_log 2, "Searching information on " & Right(sql, Len(sql) - InStr(1, sql, "WHERE") + 1)
        Editable = False
        ChangeColorToWrite False
        OpenNavigationButtons False
    Else
   
        Set Me.Recordset = recset 'only one word to populate form with recordset
        MaxRecNo = recset.RecordCount
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveFirst
        populateResult recset
        Editable = True
        OpenNavigationButtons True
        
        If Fix(MaxRecNo / 10) > 1 Then
            fastNumber = Fix(MaxRecNo / 10)
        Else
            fastNumber = 1
        End If
    '-----------------------------------
        If InStr(SQLStmt, "where") = 0 Then
            Write_log 2, "Searching all Customer information"
        Else
            Write_log 2, "Searching information on " & Right(sql, Len(sql) - InStr(1, sql, "WHERE") + 1)
        End If
    End If
End Sub
Private Function setSQLSelect() As String
    'already checkActive in the sub of btnSearchCustomers_click
    If Active = 1 Then 'only active customers
    
        setSQLSelect = "SELECT CustomerID, CompanyName, ContactName, ContactTitle, Address, " _
                    & "City, Region, PostalCode, Country, Phone, Fax FROM Customers WHERE Status is null "
    Else
        
        setSQLSelect = "SELECT CustomerID, CompanyName, ContactName, ContactTitle, Address, " _
                    & "City, Region, PostalCode, Country, Phone, Fax FROM Customers "
    End If
End Function
Private Function setSQLWhere(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt
    sql = addEnteredValue1(sql, txtCustomerID)
    sql = addEnteredValue(sql, txtCompanyName)
    sql = addEnteredValue(sql, txtContactName)
    sql = addEnteredValue1(sql, txtContactTitle)
    sql = addEnteredValue(sql, txtAddress)
    sql = addEnteredValue(sql, txtCity)
    sql = addEnteredValue1(sql, cboRegion)
    sql = addEnteredValue(sql, txtPostalCode)
    sql = addEnteredValue1(sql, cboCountry)
    sql = addEnteredValue(sql, txtPhone)
    sql = addEnteredValue(sql, txtFax)

    sql = sql & " Order by CustomerID"

    setSQLWhere = sql
    'logstring = sql 'tying to accumulate the user input texts for logs, but its long a SELECT clause
End Function
Private Function addEnteredValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    tb.SetFocus
    tmpSQL = sql
    
    If Trim(tb.Text) <> "" And Active = 1 Then ' if anything is entered on this textbox

            tmpSQL = tmpSQL & " AND "
  
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & CStr(tb.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & tb.Text
        
        End Select

    End If
    If Trim(tb.Text) <> "" And Active = 2 Then ' if anything is entered on this textbox
        'WHERE,
        If InStr(1, tmpSQL, " WHERE ") <> 0 Then
            tmpSQL = tmpSQL & " AND "
        Else
            tmpSQL = tmpSQL & " WHERE "
        End If
        
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & CStr(tb.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & tb.Text
        
        End Select

    End If
    

    addEnteredValue = tmpSQL
End Function
Private Function addEnteredValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql
    
   If Trim(cbo.Text) <> "" And Active = 1 Then ' if anything is entered on this textbox
            tmpSQL = tmpSQL & " AND "
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & CStr(cbo.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & cbo.Text
        
        End Select

    End If
        If Trim(cbo.Text) <> "" And Active = 2 Then ' if anything is entered on this textbox
        'WHERE
        If InStr(1, tmpSQL, " WHERE ") <> 0 Then
            tmpSQL = tmpSQL & " AND "
        Else
            tmpSQL = tmpSQL & " WHERE "
        End If
        
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & CStr(cbo.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & cbo.Text
        
        End Select

    End If

    addEnteredValue1 = tmpSQL

End Function
Private Sub Form_Load()
    load = True 'txtCustomerID can't checking
    Editable = False
    cboChange = True
    'populate the current date_time
    lblDateTime.Caption = Get_DT
    'turn on the timer on the form
    Me.TimerInterval = 1000 'set the interval of timer to 1 second =1000ms
    lblDateTime.RightMargin = 0
    
    Me.Caption = "Update Customers"
    'No display navi. Buttons (on the bottom)
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    
    
    Me.cboCountry.RowSourceType = "Table/Query"
    EquipCountry
    Set Me.cboCountry.Recordset = G_CountrySet
    
    'the same as CboCountry
    'to equip 'txtContactTitle'
    EquipContactTitle
    Set Me.txtContactTitle.Recordset = G_ContactTitleSet
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    Dim y As Control
    For Each y In Me.Controls
        If TypeOf y Is ComboBox Then
        y.BackColor = vbWhite
        End If
    Next y
    
    '------------------------------------
    CheckActive "frmUpdateCustomers" 'to check to load only active Customers or all customers
    EquipCustomerID Active
    Set txtCustomerID.Recordset = G_CustomerSet ' only one word can populate combobox with recordset
    With txtCustomerID
        .ListWidth = .ListWidth
    End With
    txtCustomerID.ForeColor = vbBlack
    '------------------------------------

    SQLStmt = " "
    
    If Fix(MaxRecNo / 10) < 1 Then
        fastNumber = 1
    Else
        fastNumber = Fix(MaxRecNo / 10)
    End If
    btnSearchCustomers.Caption = "Search Customers"
    btnEdit.Caption = "Edit"
    doInit
    load = False 'txtCustomerID can check now
    OptButton.SetFocus

End Sub
Private Sub doInit()
    'preparing the textbox for later search
    doReset1 txtCustomerID
    doReset txtCompanyName
    doReset txtContactName
    doReset1 txtContactTitle
    doReset txtAddress
    doReset txtCity
    doReset1 cboRegion
    doReset txtPostalCode
    doReset1 cboCountry
    doReset txtPhone
    doReset txtFax
       
    RecordNumber = 1
    lblRecNo.Caption = ""
    OpenNavigationButtons False
    'below is reset every form-level parameter
    SQLStmt = "" 'to clear the SQL clause for next new search

End Sub
Private Sub doReset(tb As TextBox)

    tb.Enabled = True
    tb.Locked = False
    tb.Value = ""
    
End Sub
Private Sub doReset1(cbo As ComboBox)  ',Optional enabled As Boolean = True

    cbo.Enabled = True
    cbo.Locked = False
    cbo.Value = ""
    
End Sub

Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub

Private Sub populateResult(rs As adodb.Recordset)
        
    setSearchedValue1 txtCustomerID, rs, 0
    setSearchedValue txtCompanyName, rs, 1
    setSearchedValue txtContactName, rs, 2
    setSearchedValue1 txtContactTitle, rs, 3
    setSearchedValue txtAddress, rs, 4
    setSearchedValue txtCity, rs, 5
    setSearchedValue1 cboRegion, rs, 6
    setSearchedValue txtPostalCode, rs, 7
    setSearchedValue1 cboCountry, rs, 8
    setSearchedValue txtPhone, rs, 9
    setSearchedValue txtFax, rs, 10
   
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'the first way to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    tb.Locked = False
    tb.Enabled = True
    tb.Value = val ' the second way is to use IIF(ISNULL (rs(fn).value,Null,rs(fn).value)) instead of dim val as string....
    tb.Locked = True

End Sub
Private Sub setSearchedValue1(cbo As ComboBox, rs As adodb.Recordset, fn As Integer)
    
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    cbo.Locked = False
    cbo.Enabled = True
    cbo.Value = val
    If cbo.Name = "txtCustomerID" Then
        CheckInactiveCustomerIDs (val)
        If CheckInactiveCustomerID = True Then ' the customerID IS INACTIVE
            cbo.ForeColor = RGB(191, 191, 191)
        Else: cbo.ForeColor = vbBlack
        End If
    End If
    cbo.Locked = True

End Sub
Private Sub btnClose_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmCustomerManagement", , , , , acDialog
End Sub
Private Sub txtContactTitle_gotfocus()
    If cboChange = True Then
        'DefaultSQL = "select distinct ContactTitle from Customers WHERE "
        'FilterCboAsYouType G_ContactTitleSet, txtContactTitle, DefaultSQL, , "ContactTitle"
        'Set Me.txtContactTitle.Recordset = FilterSet
        txtContactTitle.Dropdown
    End If
End Sub
Private Sub txtContactTitle_Change()
    If cboChange = True Then
        'DefaultSQL = "select DISTINCT ContactTitle from Customers WHERE "
        'FilterCboAsYouType G_ContactTitleSet, txtContactTitle, DefaultSQL, , "ContactTitle"
        'Set Me.txtContactTitle.Recordset = FilterSet
        txtContactTitle.Dropdown
    End If
End Sub
Private Sub txtCustomerID_AfterUpdate()

    If Trim(txtCustomerID) <> "" Then
    
        Dim newCustomerID As String
        newCustomerID = Me.txtCustomerID
        
        Dim rs As adodb.Recordset
        Dim conn As adodb.Connection
        Set conn = New adodb.Connection
        ' fetch data from External Access DBs
        conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", 0)
        conn.Open
        
        Set rs = New adodb.Recordset ' to link "conn.open" to "rs.open"
        rs.CursorLocation = adUseServer 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
        rs.Open "Customers", conn, adOpenKeyset, adLockOptimistic, adCmdTableDirect
        rs.MoveFirst
        rs.Index = "PrimaryKey"
        rs.Seek newCustomerID
        If rs.EOF = True Then
                
            MsgBox "This CustomerID is not valid. Please check again.", vbOKOnly
            'txtCustomerID.SetFocus
            txtCustomerID.Value = ""

        
        End If

    Else
        Exit Sub
    End If
        
End Sub
Private Sub txtCustomerID_Change()
    If load = False And cboChange = True Then
        CheckActive "frmUpdateCustomers" 'get the lastest optionbuttons selection
        DefaultSQL = "select CustomerID, CompanyName " & _
                  "FROM Customers WHERE "
        EquipCustomerID Active 'reEquip txtCustomerID
        FilterCboAsYouType G_CustomerSet, txtCustomerID, DefaultSQL, "CustomerID", "CompanyName", , , Active
    
        Set Me.txtCustomerID.Recordset = FilterSet
        txtCustomerID.Dropdown

    End If
       
End Sub
Private Sub txtCustomerID_gotfocus()
    If load = False And cboChange = True Then
        CheckActive "frmUpdateCustomers"
        DefaultSQL = "select CustomerID, CompanyName " & _
                  "FROM Customers WHERE "
        EquipCustomerID Active
        FilterCboAsYouType G_CustomerSet, txtCustomerID, DefaultSQL, "CustomerID", "CompanyName", , , Active
    
        Set Me.txtCustomerID.Recordset = FilterSet
        txtCustomerID.Dropdown

    End If
       
End Sub
Private Sub txtCustomerID_Click()
    cboChange = False
    SendKeys "{F4}"
    cboChange = True
    'close the dropdownlist in one move
End Sub
Private Sub txtCustomerID_KeyDown(keycode As Integer, Shift As Integer)

    If txtCustomerID.ListWidth = txtCustomerID.ListWidth And keycode = vbKeyDown Then
        txtCustomerID.Dropdown
    End If
    
End Sub

Private Sub cboRegion_gotfocus()

    Me.cboRegion.Dropdown
    
End Sub

Private Sub txtPhone_AFTERupdate()
    If load = False Then

        If IsNull(Trim(txtPhone)) = True Then  ' if nothing typed in
            Exit Sub
        Else
            Dim i As Byte
            Dim Extract As String
            For i = 1 To Len(txtPhone.Value)
                If Mid(txtPhone.Value, i, 1) <> "(" And _
                    Mid(txtPhone.Value, i, 1) <> ")" And _
                    Mid(txtPhone.Value, i, 1) <> "-" And _
                    Mid(txtPhone.Value, i, 1) <> " " Then
                    Extract = Extract & Mid(txtPhone.Value, i, 1)
                End If
            Next i
                If IsNumeric(Extract) = False Or Len(Extract) < 8 Or InStr(1, Extract, ".") Then
                    MsgBox "Phone must be at least a 8-digit number and should not " _
                        & "include punctuation marks other than ""()"" and ""-"". Please check again.", vbOKOnly
                txtPhone.SetFocus
                txtPhone = ""
                End If
        End If
    End If
End Sub

Private Sub txtFax_AFTERupdate()
    If load = False Then
        If IsNull(Trim(txtFax)) = True Then  ' if nothing typed in
            Exit Sub
        Else
            Dim i As Byte
            Dim Extract As String
            For i = 1 To Len(txtFax.Value)
                If Mid(txtFax.Value, i, 1) <> "(" And _
                    Mid(txtFax.Value, i, 1) <> ")" And _
                    Mid(txtFax.Value, i, 1) <> "-" And _
                    Mid(txtFax.Value, i, 1) <> " " Then
                    Extract = Extract & Mid(txtFax.Value, i, 1)
                End If
            Next i
                If IsNumeric(Extract) = False Or Len(Extract) < 8 Or InStr(1, Extract, ".") Then
                    MsgBox "Fax must be at least a 8-digit number and should not " _
                        & "include punctuation marks other than ""()"" and ""-"". Please check again.", vbOKOnly
                txtFax.SetFocus
                txtFax = ""
                End If
        End If
    End If
End Sub
Private Sub cboCountry_afterupdate()
'ENTER FORMs use afterdate only for cascading
'all invalid input will go to NotInList event and addnew there
'UPDATE FORMs use afterupdate to check/cascading/addnew
    If Trim(cboCountry.Text) <> "" Then
        'the cboShipcountry.RowSource must be'Table/Query'
        'to use.text
            Dim newCountry As String
            newCountry = Me.cboCountry
            
            If IsNumeric(newCountry) Then
                GetBoundColumnValue "Country", "CountryList", "CountryID", newCountry, G_CountryName
                If G_CountryName = "" Then 'means there is no such value matching this Country number
                    MsgBox "No Country Matches this ID number. Please check again."
                    cboCountry = ""
                Else 'there is a country matching this number
                    Me.cboCountry = G_CountryName
                    'make the cbo populate G_countryname
                End If
            Else 'there is string input
                CheckInputWithPK "CountryList", newCountry, "Country", cboCountry, G_CountryName
                If Found = False Then
                    If MsgBox("Are you sure to add the new item '" & newCountry _
                        & "' to the list?", vbYesNo, "New Item") = vbYes Then
                        DoInsert newCountry
                        EquipCountry
                        Set cboCountry.Recordset = G_CountrySet
                        Write_log 111, "Insert new category in CountryList: " _
                            & newCountry & " ,CustomerID=" & G_CustomerID, 0
                    Else
                        cboCountry = ""
                        G_CountryName = ""
                        EquipCountry
                        Set cboCountry.Recordset = G_CountrySet
                        cboCountry.Dropdown
                    End If
                End If
            End If
    Else 'there is nothing input
        G_CountryName = ""
        'for region to return nothing
        'otherwise the region still follow the previous CountryName
    End If
    
    
    EquipRegion G_CountryName
    Set Me.cboRegion.Recordset = G_RegionSet
    Me.cboRegion = cboRegion.ItemData(8)
    'default is Ontario
    
End Sub
Private Sub cboCountry_gotfocus()
    If cboChange = True Then
        'DefaultSQL = "select Country, CountryID from CountryList WHERE "
        'FilterCboAsYouType G_CountrySet, cboCountry, DefaultSQL, "CountryID", "Country"
        'Set Me.cboCountry.Recordset = FilterSet
        cboCountry.Dropdown
    End If
End Sub
Private Sub cboCountry_Change()
    If cboChange = True Then
        'DefaultSQL = "select Country, CountryID from CountryList WHERE "
        'FilterCboAsYouType G_CountrySet, cboCountry, DefaultSQL, "CountryID", "Country"
        'Set Me.cboCountry.Recordset = FilterSet
        cboCountry.Dropdown
    End If
End Sub
Private Sub Cbocountry_NotInList(newData As String, Response As Integer)
'UPDATE FORMs uses AfterUpdate to Insert new items to the list
'therefore,NotInList not working here
    
    'On Error GoTo Error_Handler
        Dim intAnswer As Integer
        intAnswer = MsgBox(" """ & newData & """  is not an approved category. " & vbCrLf _
            & "Do you want to add it now?", vbYesNo + vbQuestion, "Invalid Category")
    
        Select Case intAnswer
            Case vbYes
                DoInsert (newData)

                Write_log 111, "Insert new category in CountryList: " _
                            & newData & " ,CustomerID=" & G_CustomerID, 0
                Response = acDataErrContinue
                'requery,to avoid error not in the list
                EquipCountry
                Set Me.cboCountry.Recordset = G_CountrySet
            Case vbNo
            
                MsgBox "Please select an item from the list.", _
                    vbExclamation + vbOKOnly, "Invalid Entry"
                
                cboCountry.Undo
                EquipCountry
                Set Me.cboCountry.Recordset = G_CountrySet
                'cboCountry.Dropdown
                Response = acDataErrContinue
        End Select

End Sub
Private Sub DoInsert(newData As String)
    Dim conn As New adodb.Connection
    Dim sql As String
    sql = "INSERT INTO Countrylist( Country ) VALUES ('" & newData & "')"

    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    conn.Execute sql

    conn.Close
    Set conn = Nothing
    
End Sub

Private Sub cboCountry_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub cboCountry_KeyDown(keycode As Integer, Shift As Integer)

    If cboCountry.ListWidth = cboCountry.ListWidth And keycode = vbKeyDown Then
        cboCountry.Dropdown
    End If
    
End Sub

===============================================================================
--frmUpdateOrderDetails
Option Compare Database
Option Explicit
Dim Flag As Boolean
Dim conn As New adodb.Connection
Dim DetailsSet As adodb.Recordset
Dim ProductSet As adodb.Recordset
Dim newProductID As Integer ' prepare to get G_ProductID

Dim Integrity As Integer
Dim SQLStmt As String

Dim MaxRecNo As Long
Dim RecordNumber As Long
Dim fastNumber As Integer
Dim j As Byte
Dim i As Integer  'to record which DB is involved
Dim UpdateSQL As String
Private Sub btnClose_Click()
    DoCmd.Close
End Sub
Private Sub fetchDetailsRS(rs As adodb.Recordset)
        
    newProductID = ProductSet.Fields(0)
    G_ProductID = newProductID

    Dim sql As String
    sql = "SELECT * from OrderDetails_" & i & " where Status is null AND OrderID=" & G_OrderID & " AND ProductID=" & G_ProductID
    Set DetailsSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    '---------------------------------------------------------
    DetailsSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    DetailsSet.Open sql, conn, adOpenStatic, adLockBatchOptimistic
    '----------------------------------------------------------
    
End Sub
Private Sub btnFirst_Click()
    Flag = True 'form starts loading, input validation is not working for txtProductID
   
    If RecordNumber > 1 Then
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        ProductSet.MoveFirst
        populateProductID ProductSet
        fetchDetailsRS ProductSet
        Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If
    
    Flag = False
End Sub
Private Sub btnFastPrevious_Click()
    Flag = True
    If RecordNumber > 1 Then
        If RecordNumber > fastNumber Then
            RecordNumber = RecordNumber - fastNumber
            ProductSet.Find "ProductID=" & txtProductID.Column(0)
            'the above is to let ProductSet to move to the right position
            'as the dropdownlist selected
            ProductSet.Move -fastNumber
            populateProductID ProductSet
            fetchDetailsRS ProductSet
            Set Me.Recordset = DetailsSet
            populateResult DetailsSet
        ElseIf RecordNumber < fastNumber Then
            RecordNumber = 1
            ProductSet.MoveFirst
            populateProductID ProductSet
            fetchDetailsRS ProductSet
            Set Me.Recordset = DetailsSet
            populateResult DetailsSet
        End If
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    Flag = False
End Sub
Private Sub btnPrevious_Click()
    Flag = True
    If RecordNumber > 1 Then
        RecordNumber = RecordNumber - 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        ProductSet.Find "ProductID=" & txtProductID.Column(0)
        'the above is to let ProductSet to move to the right position
        'as the dropdownlist selected
        ProductSet.MovePrevious
        populateProductID ProductSet
        fetchDetailsRS ProductSet
        Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If
    Flag = False
End Sub
Private Sub btnLast_Click()
    Flag = True
    If RecordNumber < MaxRecNo Then
        RecordNumber = MaxRecNo
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        ProductSet.MoveLast
        populateProductID ProductSet
        fetchDetailsRS ProductSet
        Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
    Flag = False
End Sub
Private Sub btnFastNext_Click()
    Flag = True
    If RecordNumber < MaxRecNo Then
        If RecordNumber < MaxRecNo - fastNumber Then
            RecordNumber = RecordNumber + fastNumber
            ProductSet.Find "ProductID=" & txtProductID.Column(0)
            'the above is to let ProductSet to move to the right position
            'as the dropdownlist selected
            ProductSet.Move fastNumber
            populateProductID ProductSet
            fetchDetailsRS ProductSet
            Set Me.Recordset = DetailsSet
            populateResult DetailsSet
        Else
            RecordNumber = MaxRecNo
            ProductSet.MoveLast
            populateProductID ProductSet
            fetchDetailsRS ProductSet
            Set Me.Recordset = DetailsSet
            populateResult DetailsSet
        End If
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    Flag = False
    
End Sub
Private Sub btnNext_Click()
    Flag = True
    If RecordNumber < MaxRecNo Then
        RecordNumber = RecordNumber + 1
        ProductSet.Find "ProductID=" & txtProductID.Column(0)
        'the above is to let ProductSet to move to the right position
        'as the dropdownlist selected
        ProductSet.MoveNext
        populateProductID ProductSet
        fetchDetailsRS ProductSet
        Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    Flag = False
End Sub
Private Sub OpenNavigationButtons(x As Boolean)
    If x = True Then
            
        btnNext.Enabled = True
        btnFastNext.Enabled = True
        btnLast.Enabled = True
        btnPrevious.Enabled = True
        btnFastPrevious.Enabled = True
        btnFirst.Enabled = True
    Else
        btnNext.Enabled = False
        btnFastNext.Enabled = False
        btnLast.Enabled = False
        btnPrevious.Enabled = False
        btnFastPrevious.Enabled = False
        btnFirst.Enabled = False
    End If
End Sub
Private Sub CheckIntegrity()
    
    If Trim(txtProductID) = "" Or Trim(txtUnitPrice) = "" Or Trim(txtDiscount) = "" Or Trim(txtQuantity) = "" Then
        
        MsgBox "Cannot Update: Data not complete.", vbOKOnly
        btnReset_Click
    Else
        Integrity = 1
    End If
End Sub

Private Sub btnEdit_Click()
   
     If btnEdit.Caption = "Edit" Then
        If IsNull(txtProductID) = True Or txtOrderID.Value = "0" Or IsNull(txtOrderID) = True Or txtOrderID = "0" Then
            MsgBox "Cannot Update: the ProductID is null or the OrderID is invalid."
            Exit Sub
        Else
            btnEdit.SetFocus
            btnEdit.Caption = "Update"
            txtProductID.Locked = True 'can't update the PK!!!
            ChangeColorOpenAndLock (True)
            OpenNavigationButtons (False) 'start updating and close the buttons
        End If
        txtUnitPrice.SetFocus
    Else 'to click the btn "Update"

        CheckIntegrity
        If Integrity = 1 Then 'means data are complete and ready for continuing
            'txtOrderID.SetFocus
            'If Trim(txtOrderID.Text) = "" Or txtOrderID.Text = "0" Then
                'MsgBox "Cannot Update: OrderID is invalid."
                ''doInit
                'DoCmd.Close
                'Exit Sub
            'End If
            'txtProductID.SetFocus
            'If Trim(txtProductID.Text) = "" Then
                'MsgBox "Cannot Update ProductID due to Primary Key. " _
                    '& "If you wish to add new OrderDetails, please go to form Enter New Order Details."
                'doInit
                'DoCmd.Close
                'Exit Sub
            'End If
            '------------------------------------------
            'as the combined key has two columns, update either one will cause error by ACCESS,
            'here ProductID cant be updated
            '-------------------------------------------
            
            G_ProductID = txtProductID.Column(0)
        
            Dim sql As String
            If MsgBox("Are you sure to update the OrderDetails [ProductID=" & G_ProductID & "]?", _
                      vbOKCancel, "Confirm Update OrderID=[" & G_OrderID & "]") = vbOK Then
                sql = setSQLUpdate
                sql = setSQLSet(sql)
                UpdateSQL = sql 'reserve the UpdateSQL in the form level
            
                DoUpdate UpdateSQL, i
                Write_log 3, UpdateSQL
            
                ProductSet.Find "ProductID=" & G_ProductID
                'find the target record in the recordset
                populateProductID ProductSet
                'fetch Detail's recordset and update the recordset
                fetchDetailsRS ProductSet
                
                DetailsSet!UnitPrice = txtUnitPrice
                DetailsSet!Quantity = txtQuantity
                DetailsSet!Discount = txtDiscount
                '-----------------------
                DetailsSet.Update
                '-----------------------
                populateResult DetailsSet
                               
                btnEdit.Caption = "Edit"
                ChangeColorOpenAndLock False
                OpenNavigationButtons True
                txtUnitPrice.SetFocus
            End If

        End If
    End If
    
End Sub
Private Sub ChangeColorOpenAndLock(a As Boolean)

    If a = True Then
        Dim x As Control
        For Each x In Me.Controls
            If TypeOf x Is TextBox And x.Tag <> "Preserve" Then
                x.BackColor = Get_Color3
                x.SetFocus
                x.Enabled = True
                x.Locked = False
            End If
        Next x
        
        Dim y As Control
        For Each y In Me.Controls
            If TypeOf y Is ComboBox And y.Tag <> "Preserve" Then
                y.BackColor = Get_Color3
                y.SetFocus
                y.Enabled = True
                y.Locked = False
            End If
        Next y
    Else
        Dim f As Control
        For Each f In Me.Controls
            If TypeOf f Is TextBox And f.Tag <> "Preserve" Then
                f.BackColor = vbWhite
                f.SetFocus
                
                f.Locked = True
            End If
        Next f
        
        Dim G As Control
        For Each G In Me.Controls
            If TypeOf G Is ComboBox And G.Tag <> "Preserve" Then
                G.BackColor = vbWhite
                G.SetFocus
                
                G.Locked = True
            End If
        Next G
        txtProductID.Locked = False
    End If
End Sub
Private Sub DoUpdate(sql As String, i As Integer)

    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)
    
    conn.Open
    DoCmd.SetWarnings False
    conn.Execute UpdateSQL
    DoCmd.SetWarnings True
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Function setSQLUpdate() As String

    setSQLUpdate = "Update OrderDetails_" & i
    
End Function
Private Function setSQLSet(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt
    'sql = addUpdatedValue(sql, txtProductID, "N")
    sql = addUpdatedValue(sql, txtUnitPrice, "N")
    sql = addUpdatedValue(sql, txtQuantity, "N")
    sql = addUpdatedValue(sql, txtDiscount, "N")

    sql = sql & " where OrderID=" & G_OrderID & " and ProductID=" & G_ProductID

    setSQLSet = sql
End Function
Private Function addUpdatedValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    If tb.Tag <> "Preserve" Then ' to exclude the txtOrderID
        tb.SetFocus
        tmpSQL = sql
        
        'SET
        If InStr(1, tmpSQL, " SET ") <> 0 Then
            tmpSQL = tmpSQL & " , "
        Else
            tmpSQL = tmpSQL & " SET "
        End If
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        
    
        'VALUE
        If Trim(tb.Text) <> "" Then

            Select Case ft
                Case "S"
                    tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
                Case "D"
                    tmpSQL = tmpSQL & "'" & CStr(tb.Text) & "'"
                Case "N"
                    tmpSQL = tmpSQL & "'" & tb.Text & "'"
            
            End Select
        Else
            tmpSQL = tmpSQL & "Null"
        End If
    
        addUpdatedValue = tmpSQL
    End If
End Function
Private Function addUpdatedValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql

    'WHERE
    If InStr(1, tmpSQL, " SET ") <> 0 Then
        tmpSQL = tmpSQL & " , "
    Else
        tmpSQL = tmpSQL & " SET "
    End If
    'COLUMN NAME =
    tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
    'VALUE
    If Trim(cbo.Text) <> "" Then
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "'" & CStr(cbo.Text) & "'"
            Case "N"
                tmpSQL = tmpSQL & "'" & cbo.Text & "'"
        
        End Select
    Else
            tmpSQL = tmpSQL & "Null"
    End If

    addUpdatedValue1 = tmpSQL

End Function

Private Sub btnReset_Click()
    ChangeColorOpenAndLock False
    OpenNavigationButtons True
    
    populateResult DetailsSet
    btnEdit.Caption = "Edit"
    txtProductID.SetFocus
End Sub

Private Sub populateResult(rs As adodb.Recordset)

    'setSearchedValue txtOrderID, rs, 0
    'setSearchedValue1 txtProductID, rs, 1
    setSearchedValue txtUnitPrice, rs, 2
    setSearchedValue txtQuantity, rs, 3
    setSearchedValue txtDiscount, rs, 4
     
End Sub
Private Sub populateProductID(rs As adodb.Recordset)

    setSearchedValue1 txtProductID, rs, 0
    
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    tb.Locked = False
    tb.Enabled = True
    tb.Value = val
    tb.Locked = True

End Sub
Private Sub setSearchedValue1(cbo As ComboBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    cbo.Locked = False
    cbo.Enabled = True
    cbo.Value = val
    'cbo.Locked = True
    'don't lock txtProductID, as we will choose value from the dropdownlist

End Sub
Private Sub doInit()
    'preparing the textbox for later search
    'doReset txtOrderID
    'doReset txtProductID
    doReset txtUnitPrice
    doReset txtQuantity
    doReset txtDiscount
       
    'RecordNumber = 1
    lblRecNo.Caption = ""
    btnNext.Enabled = False
    btnFastNext.Enabled = False
    btnLast.Enabled = False
    btnPrevious.Enabled = False
    btnFastPrevious.Enabled = False
    btnFirst.Enabled = False
    
    'below is reset every form-level parameter
    SQLStmt = "" 'to clear the SQL clause for next new search
    j = 0

End Sub
Private Sub doReset(tb As TextBox)

    tb.Enabled = True
    tb.Locked = False
    tb.Value = ""
    
End Sub
Private Sub doReset1(cbo As ComboBox)  ',Optional enabled As Boolean = True

    cbo.Enabled = True
    cbo.Locked = False
    cbo.Value = ""
    
End Sub
Private Sub Form_Load()
    Flag = True 'form starts loading, input validation is not working for txtProductID
    txtProductID.LimitToList = False
    
    'populate the current date_time
    lblDateTime.Caption = Get_DT
    'turn on the timer on the form
    Me.TimerInterval = 1000 'set the interval of timer to 1 second =1000ms
    lblDateTime.RightMargin = 0
    
    Me.Caption = "Update OrderDetails"
    'No display navi. Buttons (on the bottom)
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    
    Me.Filter = "txtOrderID =" & G_OrderID
    Me.FilterOn = True
    txtOrderID.Enabled = True
    txtOrderID.Locked = False
    txtOrderID.SetFocus
    txtOrderID.Text = G_OrderID
    txtOrderID.Locked = True
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    Dim y As Control
    For Each y In Me.Controls
        If TypeOf y Is TextBox Then
        y.BackColor = vbWhite
        End If
    Next y
    
    '------------------------------------
    Dim sql As String
    
    i = getDBnumber(G_OrderID)
    ' fetch data from external Access DBs
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)
    conn.Open
    
    'below is to set dropdown list of txtProductID
    
    sql = "SELECT ProductID from OrderDetails_" & i & " where Status is null AND OrderID=" & G_OrderID
        
    Set ProductSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    '---------------------------------------------------------
    ProductSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    ProductSet.Open sql, conn, adOpenStatic, adLockBatchOptimistic
    '----------------------------------------------------------
    Set Me.txtProductID.Recordset = ProductSet
    If ProductSet.RecordCount > 0 Then
        ProductSet.MoveFirst
        populateProductID ProductSet
        
        MaxRecNo = ProductSet.RecordCount
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        
        newProductID = ProductSet.Fields(0)
        G_ProductID = newProductID
        
        sql = "SELECT * from OrderDetails_" & i & " where Status is null AND OrderID=" & G_OrderID & " AND ProductID=" & G_ProductID
        Set DetailsSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
        '---------------------------------------------------------
        DetailsSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
        DetailsSet.Open sql, conn, adOpenStatic, adLockBatchOptimistic
        '----------------------------------------------------------
        'Set Me.Recordset = DetailsSet
        populateResult DetailsSet
    Else
        MsgBox "There are no Order Details for this OrderID yet. " _
            & "Please go to form Enter New Order Details if you wish to enter any information."
        
    End If

    '-------------------------
    txtOrderID.SetFocus

    '-------------------------
    j = 0
    UpdateSQL = " "
    
    If Fix(MaxRecNo / 10) < 1 Then
        fastNumber = 1
    Else
        fastNumber = Fix(MaxRecNo / 10)
    End If
    
    btnEdit.Caption = "Edit"
    
    Flag = False 'txtProductID is checking 'limit to list' now
    'txtProductID.LimitToList = True
End Sub

Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub

Private Sub txtProductID_AfterUpdate()
    Dim sql As String
    If Flag = False Then
        'newProductID = txtProductID.Column(0)
        'the text.column(0) here =null, so we need to change to value property
        If IsNull(txtProductID) = True Then
            MsgBox "ProductID cannot be empty.", vbOKOnly
            
            ProductSet.MoveFirst
            
        ElseIf IsNumeric(txtProductID) = True Then
            
            newProductID = txtProductID
            If newProductID = txtProductID And newProductID > 0 Then
                'here cant use productset.fiels(0)=previous ProductID, not the value just chosen
                G_ProductID = newProductID
                ProductSet.Find "ProductID=" & G_ProductID
                If ProductSet.EOF = True Then
                    MsgBox "There is no such ProductID matching with this OrderID. Please check again."
                    Set Me.txtProductID.Recordset = ProductSet
                    ProductSet.MoveFirst
                End If

            Else
                MsgBox "ProductID must an positive interger. Please check again.", vbOKOnly
                Set Me.txtProductID.Recordset = ProductSet
                ProductSet.MoveFirst
            End If
                
          ElseIf IsNumeric(txtProductID) = False Then
                MsgBox "ProductID must an positive interger. Please check again.", vbOKOnly
                Set Me.txtProductID.Recordset = ProductSet
                ProductSet.MoveFirst
           End If
            populateProductID ProductSet
                            
            fetchDetailsRS ProductSet
            populateResult DetailsSet
            RecordNumber = txtProductID.ListIndex + 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
      
    End If
End Sub
Private Sub txtProductID_keydown(keycode As Integer, Shift As Integer)

    If txtProductID.ListWidth = txtProductID.ListWidth And keycode = vbKeyDown Then
        txtProductID.Dropdown
    End If
    
End Sub
Private Sub txtProductID_Change()
    'txtProductID.Dropdown
End Sub
Private Sub txtProductID_Click()

    SendKeys "{F4}"
    'close the dropdownlist in one move
End Sub
Private Sub txtProductID_gotfocus()

    Me.txtProductID.Dropdown
    
End Sub

Private Sub txtUnitPrice_AFTERupdate()
        
    If IsNumeric(txtUnitPrice.Value) = True Then
        Dim x As Single
        x = txtUnitPrice.Value
        If x > 0 Then
            x = 0
        Else
            MsgBox "UnitPrice must be a Positive Single. Please check again.", vbOKOnly, "Update"
            txtUnitPrice.SetFocus
            txtUnitPrice = " "
            txtQuantity.SetFocus
            txtUnitPrice.SetFocus
        End If
    Else
        MsgBox "UnitPrice must be a Positive Single. Please check again.", vbOKOnly, "Update"
        txtUnitPrice.SetFocus
        txtUnitPrice = " "
        txtQuantity.SetFocus
        txtUnitPrice.SetFocus 'back and turn, the focus on the unitprice again
        
    End If
        
End Sub
Private Sub txtQuantity_AFTERupdate()

    If IsNumeric(txtQuantity.Value) = True Then
        Dim x As Integer
        x = txtQuantity.Value
        If x = txtQuantity And x > 0 Then
            x = 0
        Else
            MsgBox "Quantity must be a Positive Integer. Please check again.", vbOKOnly, "Update"
            txtQuantity.SetFocus
            txtQuantity = " "
            txtUnitPrice.SetFocus
            txtQuantity.SetFocus
        End If
    Else
        MsgBox "Quantity must be a Positive Integer. Please check again.", vbOKOnly, "Update"
        txtQuantity.SetFocus
        txtQuantity = " "
        txtUnitPrice.SetFocus
        txtQuantity.SetFocus
        
    End If
 
End Sub
Private Sub txtDiscount_AFTERupdate()

    If IsNumeric(txtDiscount.Value) = True Then
        Dim x As Single
        x = txtDiscount.Value
        If x >= 0 And x < 1 Then
            x = 0
        Else
            MsgBox "Discount must be a Decimal or Zero. Please check again.", vbOKOnly, "Update"
            txtDiscount.SetFocus
            txtDiscount = " "
            txtUnitPrice.SetFocus
            txtDiscount.SetFocus
        End If
    Else
        MsgBox "Discount must be a a Decimal or Zero. Please check again.", vbOKOnly, "Update"
        txtDiscount.SetFocus
        txtDiscount = " "
        txtUnitPrice.SetFocus
        txtDiscount.SetFocus
    End If
        
End Sub

===============================================================================================
--frmUpdateOrders 
Option Compare Database
Option Explicit
Dim load As Boolean 'to determine when to check the input
Dim cboChange As Boolean
Dim DefaultSQL As String
'Dim FilterSet As ADODB.Recordset
Dim CustomerSet As adodb.Recordset
Dim ShipperSet As adodb.Recordset
Dim EmployeeSet As adodb.Recordset 'for form load event
Dim workRS As adodb.Recordset
'---------------------------
Dim Integrity As Integer 'to check integrity
Dim CountDuplicate As Long 'to check how many duplicate records have been found
Dim neworderdate As Date 'help check duplicate
Dim newCustomerID As String
'---------------------------
Dim Flag As Boolean 'to decide navigate small/large data
Dim Editable As Boolean 'if no record found, btnEdit won't work
Dim DownArrowKey As Boolean 'to help down arrow key work

Dim recset As adodb.Recordset
Dim CountRecords As Long ' in the form level
'to count how many records have been found
'if countRecords=0 means recset will be close
'hence recset cant be used in further codes
Dim recsetDetails As adodb.Recordset
Dim SQLStmt As String
Dim MaxRecNo As Long
Dim RecordNumber As Long
Dim Threshold As Long
Dim fastNumber As Integer
Dim howmanyThreshold As Long 'to record how many times the whole database can be divided by the threshold
Dim LastRows As Long 'to records how many records remain in the last fraction
Dim StartOrderID As Long
'-------------------------
Dim j As Byte ' to count how many criteria has the user not input
Dim getDBNo As Integer 'to record which DB is in use
Dim UpdateSQL As String

Private Sub btnClose_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmOrderManagement", , , , , acDialog
End Sub
Private Sub btnFirst_Click()
    
    If Flag = False Then
    
        If RecordNumber > 1 Then
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveFirst
            populateResult recset
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
    Else
        '-------------------------------
        If RecordNumber <= Threshold And RecordNumber > 1 Then ' the record is in the 1st range
    
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveFirst
            populateResult recset
        
        ElseIf RecordNumber > Threshold Then ' the record is not in the 1st range
            StartOrderID = getMinNumber - 1
            fetchRS "Asc", StartOrderID, Threshold
            recset.MoveFirst
            populateResult recset
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            MsgBox "You've reached the beginning of the Records", vbOKOnly
        End If
    End If
End Sub
Private Sub btnFastPrevious_Click()
    If Flag = False Then
        If RecordNumber > 1 Then
            If RecordNumber > fastNumber Then
                RecordNumber = RecordNumber - fastNumber
                recset.Move -fastNumber
                populateResult recset
            ElseIf RecordNumber < fastNumber Then
                RecordNumber = 1
                recset.MoveFirst
                populateResult recset
            End If
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    Else
        '-------------------------------------------------------------------
        If RecordNumber Mod Threshold + fastNumber > Threshold Then
        'record will stay within the current threshold after move or the record now is right the threshold point
            RecordNumber = RecordNumber - fastNumber
            recset.Move -fastNumber
            populateResult recset
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            
        ElseIf RecordNumber Mod Threshold + fastNumber <= Threshold And RecordNumber Mod Threshold <> 0 _
               And RecordNumber <> 1 Then
            If RecordNumber > Threshold Then
               'need to fetch data as the record will fall in the previous threshold after move
               If Not recset.BOF Then
                    recset.MoveFirst
               End If
               StartOrderID = recset.Fields(0).Value
               fetchRS "Desc", StartOrderID, Threshold
    
               recset.MoveLast
               recset.Move -fastNumber + RecordNumber Mod Threshold
               '6300-500=5800
               populateResult recset
               RecordNumber = RecordNumber - fastNumber
               lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            Else ' the record in the first range
                recset.MoveFirst
                populateResult recset
                RecordNumber = 1
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            End If
        ElseIf RecordNumber Mod Threshold = 0 Then
    
            RecordNumber = RecordNumber - fastNumber
            recset.Move -fastNumber
            populateResult recset
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                
        Else
            'the current record is exactly the fist record
            MsgBox "You've reached the beginning of the Records", vbOKOnly
          
        End If
    End If
End Sub
Private Sub btnPrevious_Click()
    If Flag = False Then
        If RecordNumber > 1 Then
            RecordNumber = RecordNumber - 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MovePrevious
            populateResult recset
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
    Else
        '------------------------------------------------------------------------------------
        If RecordNumber Mod Threshold = 1 And RecordNumber > 1 Then  'record is the threshold and will move to the previous threshold/range
            txtOrderID.Enabled = True
            txtOrderID.Locked = False
            txtOrderID.SetFocus
            StartOrderID = txtOrderID.Text
            
            fetchRS "Desc", StartOrderID, Threshold
            recset.MoveLast
            RecordNumber = RecordNumber - 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            populateResult recset
            
        ElseIf RecordNumber Mod Threshold <> 1 Then 'record is not the threshold
            recset.MovePrevious
            populateResult recset
            RecordNumber = RecordNumber - 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            MsgBox "You've reached the beginning of the Records", vbOKOnly
        End If
    End If
End Sub
Private Sub btnLast_Click()
    If Flag = False Then
    
        If RecordNumber < MaxRecNo Then
            RecordNumber = MaxRecNo
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveLast
            populateResult recset
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
    Else
        '--------------------------------------------------------------------------------------------------------------
        If MaxRecNo - RecordNumber + 1 <= LastRows And RecordNumber < MaxRecNo Then ' now in the last part
    
            RecordNumber = MaxRecNo
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveLast
            populateResult recset
        
        ElseIf RecordNumber <= MaxRecNo - LastRows Then
            StartOrderID = getNumber
            fetchRS "Desc", StartOrderID, LastRows
            
            recset.MoveLast
            populateResult recset
            RecordNumber = MaxRecNo
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            MsgBox "You've reached the end of the Records", vbOKOnly
        End If
    End If
End Sub
Private Sub btnFastNext_Click()
    If Flag = False Then
    
        If RecordNumber < MaxRecNo Then
            If RecordNumber < MaxRecNo - fastNumber Then
                RecordNumber = RecordNumber + fastNumber
                recset.Move fastNumber
                populateResult recset
            Else
                RecordNumber = MaxRecNo
                recset.MoveLast
                populateResult recset
            End If
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
        
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    Else
        '-------------------------------------------------
        If RecordNumber + fastNumber < MaxRecNo Then ' the record wont reach the end of the data anyway
        
            If RecordNumber > MaxRecNo - LastRows Then 'the record is in the last range
                RecordNumber = RecordNumber + fastNumber
                recset.Move fastNumber
                populateResult recset
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            ElseIf RecordNumber <= MaxRecNo - LastRows And RecordNumber > MaxRecNo - LastRows - fastNumber Then
                'definitely need to fetch new data of last fraction
                If Not recset.EOF Then
                    recset.MoveLast
                End If
                StartOrderID = recset.Fields(0).Value
                
                fetchRS "Asc", StartOrderID, LastRows
                recset.MoveLast
                populateResult recset
                RecordNumber = MaxRecNo
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            Else
                If RecordNumber Mod Threshold + fastNumber <= Threshold And RecordNumber Mod Threshold <> 0 Then
                'record will not reach the next threshold after move
                
                    RecordNumber = RecordNumber + fastNumber
                    recset.Move fastNumber
                    populateResult recset
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                    
                ElseIf RecordNumber Mod Threshold + fastNumber > Threshold Then
                    'need to fetch data of next threshold
                    recset.MoveLast
                    StartOrderID = recset.Fields(0).Value
                    
                    fetchRS "Asc", StartOrderID, Threshold
    
                    recset.MoveFirst '5800+500=6300
                    recset.Move fastNumber - (Threshold - RecordNumber Mod Threshold) - 1
                    populateResult recset
                    RecordNumber = Threshold * (Fix(RecordNumber / Threshold) + 1) + fastNumber - (Threshold - RecordNumber Mod Threshold)
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                    
                ElseIf RecordNumber Mod Threshold = 0 Then ' current the end of range and need new data
                    StartOrderID = recset.Fields(0).Value
                    fetchRS "Asc", StartOrderID, Threshold
    
                    recset.Move fastNumber - 1
                    populateResult recset
                    RecordNumber = Threshold * (Fix(RecordNumber / Threshold) + 1) + fastNumber - (Threshold - RecordNumber Mod Threshold)
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                 
                End If
            End If
        Else 'RecordNumber + fastNumber >= Maxrecno
            If RecordNumber > MaxRecNo - LastRows Then 'the record is in the last range
                RecordNumber = MaxRecNo
                recset.MoveLast
                populateResult recset
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            ElseIf RecordNumber <= MaxRecNo - LastRows Then
            ' the Record will move to the last fraction
                If Not recset.EOF Then
                    recset.MoveLast
                End If
                StartOrderID = recset.Fields(0).Value
                
                fetchRS "Asc", StartOrderID, LastRows
            
                recset.MoveLast
                populateResult recset
                RecordNumber = MaxRecNo
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            Else
                MsgBox "You've reached the end of the Records", vbOKOnly
            End If
        End If
        '------------------------------------------------------------------
    End If
End Sub
Private Sub btnNext_Click()
    If Flag = False Then
        If RecordNumber < MaxRecNo Then
            RecordNumber = RecordNumber + 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveNext
            populateResult recset
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
    Else
        '-----------------------------------------------------------
       If RecordNumber Mod Threshold <> 0 And RecordNumber < MaxRecNo Then 'records are ready to move forward
    
            RecordNumber = RecordNumber + 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveNext
            populateResult recset
            
        ElseIf RecordNumber Mod Threshold = 0 And RecordNumber < MaxRecNo Then
        'when recordnumber is the threshold
            
            ' need to fetch new data
            txtOrderID.Enabled = True
            txtOrderID.Locked = False
            txtOrderID.SetFocus
            StartOrderID = txtOrderID.Text
            
            fetchRS "Asc", StartOrderID, Threshold
            recset.MoveFirst
            populateResult recset
            RecordNumber = RecordNumber + 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            MsgBox "You've reached the end of the Records", vbOKOnly
       End If
    End If

End Sub

Private Sub fetchRS(a As String, b As Long, C As Long)
    'a is indicating Order by Asc or Desc, b is the OrderID where the codes start to fetch data
    'the below is targeted when no parameter the client types in
    ' need to fetch new data
    'a is to determine ASC OR DESC
    'b is to determine the StartOrderID
    'c is to determine how many records to fetch
    Dim DB1 As Integer 'number of DBs for loop
    Dim DB2 As Integer
    Dim conn1 As adodb.Connection
    Dim conn2 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim rsPartial2 As adodb.Recordset
    Dim i As Byte 'to record one or two DBs are involved
    Dim n As Byte
    Dim m As Integer
    Dim sql As String
   
    DB1 = getDBnumber(StartOrderID) ' to know which DB will be involved
  
    If a = "Asc" Then
       'first to select information for Table Orders part
       'sql = "SELECT Top " & c & " OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, " _
            & "ShipVia, Freight, ShipName, ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry, " _
            & "CreditCard from Orders " _
            & " WHERE OrderID " _
            & " > " & StartOrderID & " and Status is null " _
            & "Order by OrderID "
       
        sql = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, " _
            & "ShipVia, Freight, ShipName, ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry, " _
            & "CreditCard from Orders " _
            & " WHERE OrderID IN " _
            & " (Select Top " & C & " OrderID from Orders Where OrderID " _
            & " > " & StartOrderID & " and Status is null " _
            & "Order by OrderID ) " _
            & "Order by OrderID "
            

        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        rsPartial1.Open sql, conn1, adOpenDynamic, adLockOptimistic
        'sometimes adLockBatchOptimistic would cause multi-step errors
        '----------------------------------------------------------
        Set recset = New adodb.Recordset
        Set recset = rsPartial1
        If rsPartial1.RecordCount < C Then
            m = C - rsPartial1.RecordCount
            If DB1 + 1 <= NumberofDBs Then
            
                DB2 = DB1 + 1
            
                sql = "SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, " _
                    & "ShipVia, Freight, ShipName, ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry, " _
                    & "CreditCard from Orders " _
                    & " WHERE OrderID IN " _
                    & " (Select Top " & m & " OrderID from Orders Where OrderID " _
                    & " > " & StartOrderID & " and Status is null " _
                    & "Order by OrderID ) " _
                    & "Order by OrderID "
               
                Set conn2 = New adodb.Connection
                conn2.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                        "Data Source=" & GetAddress("O", DB2)
                                        
                conn2.Open
            
                Set rsPartial2 = New adodb.Recordset
                '---------------------------------------------------------
                rsPartial2.CursorLocation = adUseClient
                rsPartial2.Open sql, conn1, adOpenDynamic, adLockBatchOptimistic
                rsPartial2.MoveFirst
                'below is to copy rsPartial2 to recset
                Do While Not rsPartial2.EOF
                recset.AddNew
                    For n = 0 To rsPartial2.Fields.Count - 1
                        recset.Fields(n).Value = rsPartial2.Fields(n).Value
                    Next n
                    rsPartial2.MoveNext
                Loop
            End If
         End If
          
    Else 'a = "Desc"
        
        sql = "Select * from (" _
            & "SELECT Top " & C & " OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, " _
            & "ShipVia, Freight, ShipName, ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry, " _
            & "CreditCard from Orders " _
            & " WHERE OrderID < " & StartOrderID & " and Status is null " _
            & " Order by OrderID Desc) as t " _
            & "Order by 1"
            
            Set conn1 = New adodb.Connection
            conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", DB1)
            conn1.Open
        
            Set rsPartial1 = New adodb.Recordset
            '---------------------------------------------------------
            rsPartial1.CursorLocation = adUseClient
            rsPartial1.Open sql, conn1, adOpenDynamic, adLockBatchOptimistic
            '---------------------------------------------------------
             Set recset = New adodb.Recordset
             Set recset = rsPartial1
             
         If rsPartial1.RecordCount < C Then
            m = C - rsPartial1.RecordCount
            If DB1 - 1 >= 1 Then
            
                DB2 = DB1 - 1
                sql = "Select * from (" _
                    & "SELECT Top " & m & " OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, " _
                    & "ShipVia, Freight, ShipName, ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry, " _
                    & "CreditCard from Orders " _
                    & " WHERE OrderID < " & StartOrderID & " and Status is null " _
                    & " Order by OrderID Desc) as t " _
                    & "Order by 1"
                Set conn2 = New adodb.Connection
                conn2.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                        "Data Source=" & GetAddress("O", DB2)
                conn2.Open
            
                Set rsPartial2 = New adodb.Recordset
                '---------------------------------------------------------
                rsPartial2.CursorLocation = adUseClient
                rsPartial2.Open sql, conn1, adOpenDynamic, adLockBatchOptimistic
                Set recset = New adodb.Recordset
                Set recset = rsPartial2
                'below is to copy rsPartial2 to recset
                rsPartial1.MoveFirst
                
                Do While Not rsPartial1.EOF
                recset.AddNew
                    For n = 0 To rsPartial1.Fields.Count - 1
                        recset.Fields(n).Value = rsPartial1.Fields(n).Value
                    Next n
                    rsPartial1.MoveNext
                Loop
            End If
         End If
    End If

End Sub
Private Sub CheckIntegrity()
    
        Integrity = IsNull(txtOrderID) + IsNull(txtCustomerID) + IsNull(txtOrderDate) + _
            IsNull(txtShipPostalCode) + IsNull(txtShipAddress) + IsNull(cboShipCountry) + IsNull(txtCreditCard)
            
        Select Case Integrity 'returns -1 as true, 0 as false
        
            Case Is < 0
                MsgBox "Cannot Update: Data not complete.", vbOKOnly
                btnReset_Click
            Case Else
                Integrity = 1
        End Select
End Sub
Private Sub CheckDuplicate()

    neworderdate = Me.txtOrderDate
    newCustomerID = Me.txtCustomerID
    Dim rsPartial As adodb.Recordset
    Dim DuplicateSql As String
    DuplicateSql = "Select OrderID from Orders " _
                    & " where status is null and CustomerID='" & Replace(newCustomerID, "'", "''") & "' AND OrderDate=#" & neworderdate & "#" _
                    & " AND OrderID <>" & G_OrderID
                        
    '----------------------------------------------------------------------
    'below is to find the duplicate combination of CustomerID and OrderDate
    Dim O As Integer 'to record how many DBs for loop
    Dim conn As adodb.Connection
    CountDuplicate = 0
    For O = NumberofDBs To 1 Step -1
        
        Set conn = New adodb.Connection
        conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", O)
          
        conn.Open
    
        Set rsPartial = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial.CursorLocation = adUseClient
        rsPartial.Open DuplicateSql, conn, adOpenDynamic, adLockBatchOptimistic
        '---------------------------------------------------------
        If rsPartial.RecordCount > 0 Then
           CountDuplicate = 1
           Exit For
        End If
     Next O
     
End Sub
Private Sub ChangeColorToWrite(Change As Boolean)
    If Change = True Then
        Dim x As Control
        For Each x In Me.Controls
            If TypeOf x Is TextBox And x.Tag <> "Preserve" Then
                x.BackColor = Get_Color3
                x.SetFocus
                x.Enabled = True
                x.Locked = False
            End If
        Next x
        
        Dim y As Control
        For Each y In Me.Controls
            If TypeOf y Is ComboBox And y.Tag <> "Preserve" Then
                y.BackColor = Get_Color3
                y.SetFocus
                y.Enabled = True
                y.Locked = False
                y.ForeColor = vbBlack
                'needs to change font color to black
                'otherwise can't see invalid CustomerID buried in a
                'darker background color
            End If
        Next y
    Else
        Dim m As Control
        For Each m In Me.Controls
            If TypeOf m Is TextBox And m.Tag <> "Preserve" Then
                m.BackColor = vbWhite
                m.SetFocus
                
                m.Locked = True
            End If
        Next m
        
        Dim n As Control
        For Each n In Me.Controls
            If TypeOf n Is ComboBox And n.Tag <> "Preserve" Then
                n.BackColor = vbWhite
                n.SetFocus
                
                n.Locked = True
            End If
        Next n
    End If
End Sub

Private Sub btnEdit_Click()
   
     If btnEdit.Caption = "Edit" Then
        If Editable = True Then 'mean btnEdit can work, there are records updateable
            btnEdit.SetFocus
            btnEdit.Caption = "Update"
            
            ChangeColorToWrite True
            
            
            btnNext.Enabled = False
            btnFastNext.Enabled = False
            btnLast.Enabled = False
            btnPrevious.Enabled = False
            btnFastPrevious.Enabled = False
            btnFirst.Enabled = False
            
        Else 'mean Editable=false
        
            MsgBox "Cannot Update: No records found in the DB. Please try click to reEnter more information for search."
            Exit Sub
        
        End If
    
    Else
        
        CheckIntegrity ' if ALL mandatory fields are filled
        If Integrity = 1 Then 'means data are complete and ready for continuing
        
            CheckDuplicate
            '--------------------------------------------------------------------
            If CountDuplicate <> 0 Then 'duplicate customerID and OrderDate
    
                MsgBox "Duplicate of CustomerID and OrderDate Combination", vbOKOnly
                 If MsgBox("Are you sure to Update?", vbYesNo, "Duplicate Record") = vbYes Then
                    UpdateFrontBack
                    Write_log 3, "OrderID:" & G_OrderID & ", " & "Same Client of " & newCustomerID & " has more than one orders on the same date of " & neworderdate
                 Else: Exit Sub 'do nothing,the client can continue edit fields
                 End If
                    
            Else
        
                If MsgBox("Are you sure to update the Order [ID=" & G_OrderID & "]?", _
                              vbOKCancel, "Confirm Update [" & G_OrderID & "]") = vbOK Then
                    UpdateFrontBack
                    Write_log 3, UpdateSQL
                Else: Exit Sub 'client canceled update
                End If
                
            End If
            '--------------------------------------------------------------------
        End If
          
   End If
        txtCustomerID.SetFocus
End Sub
Private Sub UpdateFrontBack()

        txtOrderID.Enabled = True
        txtOrderID.Locked = False
        txtOrderID.SetFocus
        'quote the OrderID
        G_OrderID = txtOrderID.Text
        btnSearchOrders.SetFocus
        txtOrderID.Enabled = False
        txtOrderID.Locked = True
        
        'to get which DB should be updated
        getDBNo = getDBnumber(G_OrderID)
        
        'generate the sql query for update
        Dim sql As String
        sql = setSQLUpdate
        sql = sql & setSQLSet(sql)
        UpdateSQL = sql
        
        'UPDATE BACKEND
        DoUpdate UpdateSQL, getDBNo
        
        UpdateFrontRecordset
        populateResult recset
        
        MsgBox "One Order Updated."
        btnEdit.Caption = "Edit"
                
        ChangeColorToWrite False
                
        btnNext.Enabled = True
        btnFastNext.Enabled = True
        btnLast.Enabled = True
        btnPrevious.Enabled = True
        btnFastPrevious.Enabled = True
        btnFirst.Enabled = True
    
End Sub
Private Sub UpdateFrontRecordset()
    'UPDATE FRONTEND
    'This error only occurs when using the VB/VBscript With statement,
    'and you assign an empty string to one field,
    'and then an unitialised string value to the very next field
    'With objRS
    '.AddNew
    '.Fields(Field1).Value = "" ' Empty String
    '.Fields(Field2).Value = someMadeUpVar ' Unintialised String
    '.Update
    'End With
    'For resolution to this problem, consult MS KB Article Q228935
    'https://mskb.pkisolutions.com/kb/228935
    'Microsoft has confirmed that this is a bug in the Microsoft products
    'below can't use
    'recset!CustomerID = txtCustomerID
    'recset!EmployeeID = txtEmployeeID
    'recset!OrderDate = txtOrderDate
    'recset!RequiredDate = txtRequiredDate
    'txtShippedDate.SetFocus
    'recset!ShippedDate = txtShippedDate
    'recset!ShipVia = txtShipVia
    'recset!Freight = txtFreight
    'recset!ShipName = txtShipName
    'recset!ShipAddress = txtShipAddress
    'recset!ShipCity = txtShipCity
    'recset!ShipRegion = cboShipRegion
    'recset!ShipPostalCode = txtShipPostalCode
    'recset!ShipCountry = cboShipCountry
    'recset!CreditCard = txtCreditCard
    'recset.Update
    
    'my way to deal with this problem is
    ' dont assign an empty string to a null field in the recordset!!!!

    
    SetUpdatedValue1 recset, txtCustomerID
    SetUpdatedValue1 recset, txtEmployeeID
    SetUpdatedValue recset, txtOrderDate
    SetUpdatedValue recset, txtRequiredDate
    SetUpdatedValue recset, txtShippedDate
    SetUpdatedValue1 recset, txtShipVia
    SetUpdatedValue recset, txtFreight
    SetUpdatedValue recset, txtShipName
    SetUpdatedValue recset, txtShipAddress
    SetUpdatedValue recset, txtShipCity
    SetUpdatedValue1 recset, cboShipRegion
    SetUpdatedValue recset, txtShipPostalCode
    SetUpdatedValue1 recset, cboShipCountry
    SetUpdatedValue recset, txtCreditCard
    recset.Update
    
        
End Sub
Private Sub SetUpdatedValue(rs As adodb.Recordset, tb As TextBox)
    Dim FieldsName As String
    FieldsName = Right(tb.Name, Len(tb.Name) - 3)
    tb.SetFocus
    If Trim(tb.Text) = "" Then
    'if the textbox is empty string
        If IsNull(recset.Fields(FieldsName)) = True Then
        'and if recset.fields is null
        Exit Sub ' then must not assign the empty string to a null field
        End If
    End If
    
    recset.Fields(FieldsName) = tb.Value
    
    
End Sub
Private Sub SetUpdatedValue1(rs As adodb.Recordset, cbo As ComboBox)
    Dim FieldsName As String
    FieldsName = Right(cbo.Name, Len(cbo.Name) - 3)
    cbo.SetFocus
    If Trim(cbo.Text) = "" Then
    'if the textbox is empty string
        If IsNull(recset.Fields(FieldsName)) = True Then
        Exit Sub
        End If
    End If
    
    recset.Fields(FieldsName) = cbo.Value
    
    
End Sub
Private Sub DoUpdate(sql As String, i As Integer)

    Dim conn As adodb.Connection
    Set conn = New adodb.Connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", i)

    conn.Open
    conn.Execute UpdateSQL
    
    conn.Close
    'release memory
    Set conn = Nothing

End Sub
Private Function setSQLUpdate() As String

    setSQLUpdate = "Update Orders "
    
End Function
Private Function setSQLSet(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt
    sql = addUpdatedValue(sql, txtOrderID, "N")
    sql = addUpdatedValue1(sql, txtCustomerID)
    sql = addUpdatedValue1(sql, txtEmployeeID, "N")
    sql = addUpdatedValue(sql, txtOrderDate, "D")
    sql = addUpdatedValue(sql, txtRequiredDate, "D")
    sql = addUpdatedValue(sql, txtShippedDate, "D")
    sql = addUpdatedValue1(sql, txtShipVia, "N")
    sql = addUpdatedValue(sql, txtFreight, "N")
    sql = addUpdatedValue(sql, txtShipName)
    sql = addUpdatedValue1(sql, cboShipCountry)
    sql = addUpdatedValue(sql, txtShipPostalCode)
    sql = addUpdatedValue1(sql, cboShipRegion)
    sql = addUpdatedValue(sql, txtShipCity)
    sql = addUpdatedValue(sql, txtShipAddress)
    sql = AddUpdatedValueNoSpace(sql, txtCreditCard)
    sql = sql & " where OrderID=" & G_OrderID

    setSQLSet = sql
    'logstring = sql 'tying to accumulate the user input texts for logs, but its long a SELECT clause
End Function
Private Function addUpdatedValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    If tb.Tag <> "Preserve" Then ' to exclude the txtOrderID
        tb.SetFocus
        tmpSQL = sql
        
        'SET
        If InStr(1, tmpSQL, " SET ") <> 0 Then
            tmpSQL = tmpSQL & " , "
        Else
            tmpSQL = tmpSQL & " SET "
        End If
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        
    
        'VALUE
        If Trim(tb.Text) <> "" Then

            Select Case ft
                Case "S"
                    tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
                Case "D"
                    tmpSQL = tmpSQL & "'" & CStr(tb.Text) & "'"
                Case "N"
                    tmpSQL = tmpSQL & "'" & tb.Text & "'"
            
            End Select
        Else
            tmpSQL = tmpSQL & "Null"
        End If
    
        addUpdatedValue = tmpSQL
    End If
End Function
Private Function addUpdatedValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql

    'SET
    If InStr(1, tmpSQL, " SET ") <> 0 Then
        tmpSQL = tmpSQL & " , "
    Else
        tmpSQL = tmpSQL & " SET "
    End If
    'COLUMN NAME =
    tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
    'VALUE
    If Trim(cbo.Text) <> "" Then
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "'" & CStr(cbo.Text) & "'"
            Case "N"
                tmpSQL = tmpSQL & "'" & cbo.Text & "'"
        
        End Select
    Else
            tmpSQL = tmpSQL & "Null"
    End If
    addUpdatedValue1 = tmpSQL

End Function
Private Function AddUpdatedValueNoSpace(sql As String, tb As TextBox, Optional ft As String = "S") As String
    Dim tmpSQL As String

    tb.SetFocus
    tmpSQL = sql
        
        'SET
    If InStr(1, tmpSQL, " SET ") <> 0 Then
        tmpSQL = tmpSQL & " , "
    Else
        tmpSQL = tmpSQL & " SET "
    End If
        'COLUMN NAME =
    tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
         
        'VALUE
    If Trim(tb.Text) <> "" Then
        Select Case ft
            Case "S"
            tmpSQL = tmpSQL & "'" & Replace(tb.Text, " ", "") & "'"
            ' the above is to trim all the spaces of CreditCard
            Case "N"
            tmpSQL = tmpSQL & tb.Text
            Case "D"
            tmpSQL = tmpSQL & "'" & tb.Text & "'"
        End Select
     End If
    AddUpdatedValueNoSpace = tmpSQL
    
End Function
Private Sub btnReset_Click()
    If Editable = True Then
    
        Dim x As Control
        For Each x In Me.Controls
            If TypeOf x Is TextBox And x.Tag <> "Preserve" Then
            x.BackColor = vbWhite
            End If
        Next x
        Dim y As Control
        For Each y In Me.Controls
            If TypeOf y Is ComboBox And y.Tag <> "Preserve" Then
            y.BackColor = vbWhite
            End If
        Next y
        
        btnNext.Enabled = True
        btnFastNext.Enabled = True
        btnLast.Enabled = True
        btnPrevious.Enabled = True
        btnFastPrevious.Enabled = True
        btnFirst.Enabled = True
        
        populateResult recset
        btnEdit.Caption = "Edit"
        txtCustomerID.SetFocus
    Else
        MsgBox "There is nothing to reset. Please click to reEnter and search.", vbOKOnly, "Reminder"
    End If
End Sub
Private Sub btnSearchOrders_Click()

    If btnSearchOrders.Caption = "Search Orders" Then
        MaxRecNo = getCount
        If MsgBox("Searching within a total of " & MaxRecNo & "Orders. Please wait or you can cancel and enter more information for search.", vbOKCancel) = vbOK Then
         
            btnSearchOrders.SetFocus
            btnSearchOrders.Caption = "Searching"
            btnEdit.SetFocus
            btnSearchOrders.Enabled = False
            load = True 'txtEmployeeID_change cant check the content put in the combo box
            txtCustomerID.LimitToList = False
            btnEdit.SetFocus
            doSearch 'the searching result could be null or with some records
            
            btnSearchOrders.Enabled = True
            btnSearchOrders.SetFocus
            btnSearchOrders.Caption = "Click to Reset"
            

        Else: Exit Sub
        End If
             
        'lblPrompt.Caption = ""
    Else ' it is "Click to Reset and Reenter" switching btw search and clear
        ChangeColorToWrite False 'all background be white, but locked
        doInit 'all unlocked
        load = False 'txtEmployeeID_change can check the content put in the combo box again
        Editable = False 'btnEdit cant work on blank form
        txtCustomerID.LimitToList = True
        btnSearchOrders.Caption = "Search Orders"
        btnEdit.Caption = "Edit"
    End If
End Sub
Private Function SetCount() As Byte
    Dim x As Control
    For Each x In Me.Controls
        With x
            Select Case .ControlType
                Case acTextBox
            
                        x.SetFocus
                            If Trim(x.Text) = "" Then
                                j = j + 1
                            End If
                    
                Case acComboBox
                    
                        x.SetFocus
                            If Trim(x.Text) = "" Then
                                j = j + 1
                            End If
                    
            End Select
        End With
    Next x
    SetCount = j
End Function
Private Sub doSearch()
    
    'Count how many parameters the client not typed in
    j = SetCount
    
    If j = 15 Then 'no criteria is typed in
        Flag = True 'large data navigation
        Editable = True 'definitely will get records back and btnEdit can work
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        'threshold is to be defined in Form_load Event
        howmanyThreshold = -Int(-MaxRecNo / Threshold) 'record how many times data can be divided by threshold
        LastRows = MaxRecNo Mod Threshold
        
        StartOrderID = getMinNumber - 1
        
        fetchRS "Asc", StartOrderID, Threshold
        
        btnNext.Enabled = True
        btnFastNext.Enabled = True
        btnLast.Enabled = True
        btnPrevious.Enabled = True
        btnFastPrevious.Enabled = True
        btnFirst.Enabled = True
        
        Set Me.Recordset = recset
        recset.MoveFirst
        populateResult recset
        Write_log 2, "Searching all Order information "
    
    Else
        Flag = False 'small data navigation
        fetchRSwithCriteria
         
         If CountRecords = 0 Then 'means no record has found
            MsgBox "No Orders found. Please try enter some more information. "
            Editable = False
            'here all textbox should be locked
            Dim x As Control
            For Each x In Me.Controls
                If TypeOf x Is TextBox Then
                    x.Locked = True
                End If
            Next x
            btnNext.Enabled = False
            btnFastNext.Enabled = False
            btnLast.Enabled = False
            btnPrevious.Enabled = False
            btnFastPrevious.Enabled = False
            btnFirst.Enabled = False
            
         Else 'records have found, btnEdit can work
            Editable = True
            
            btnNext.Enabled = True
            btnFastNext.Enabled = True
            btnLast.Enabled = True
            btnPrevious.Enabled = True
            btnFastPrevious.Enabled = True
            btnFirst.Enabled = True
            
            Set Me.Recordset = recset 'only one word to populate form with recordset
            If Not recset.BOF Then
                recset.MoveFirst
            End If
            populateResult recset
            
            MaxRecNo = recset.RecordCount
            RecordNumber = 1
            If MaxRecNo / 10 > 1 Then
                fastNumber = MaxRecNo / 10
            Else
                fastNumber = 1
            End If
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
  
         End If

            Write_log 2, "Searching Orders/OrderDetails information on " _
                        & Right(SQLStmt, Len(SQLStmt) - InStr(1, SQLStmt, "WHERE") + 1)

    End If
End Sub
Private Sub fetchRSwithCriteria()
    Dim i As Integer 'number of DBs for loop
    Dim rsPartial As adodb.Recordset
    Dim conn As adodb.Connection
       
    Dim m As Byte 'to record the first time, rsPartial.recordcount <>0
    m = 0
    Dim n As Long 'help recset.addnew
    Dim sql As String
    sql = setSQLSelect 'to assign static portion of the query
    sql = setSQLWhere(sql) 'to add WHERE clause collecting entered values
    SQLStmt = sql '!reserve the query in the form level
    
    Set recset = New adodb.Recordset
    CountRecords = 0
    For i = 1 To NumberofDBs
          
        Set conn = New adodb.Connection
        conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", i)
                          
        conn.Open
    
        Set rsPartial = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial.CursorLocation = adUseClient
        rsPartial.Open SQLStmt, conn, adOpenDynamic, adLockBatchOptimistic
        '---------------------------------------------------------
        CountRecords = CountRecords + rsPartial.RecordCount
        If rsPartial.RecordCount <> 0 Then
            m = m + 1
            If m = 1 Then
                Set recset = rsPartial
            Else
            
                rsPartial.MoveFirst
                Do While Not rsPartial.EOF
                recset.AddNew
                    For n = 0 To rsPartial.Fields.Count - 1
                        recset.Fields(n).Value = rsPartial.Fields(n).Value
                    Next n
                    rsPartial.MoveNext
                Loop
            End If
            
        End If
    Next i
End Sub
Private Function setSQLSelect() As String

    setSQLSelect = "SELECT * FROM Orders WHERE status is null "
    
End Function
Private Function setSQLWhere(sql_stmt As String) As String

    Dim sql As String
    
    sql = sql_stmt
    sql = addEnteredValue(sql, txtOrderID, "N")
    sql = addEnteredValue1(sql, txtCustomerID)
    sql = addEnteredValue1(sql, txtEmployeeID, "N")
    sql = addEnteredValue(sql, txtOrderDate, "D")
    sql = addEnteredValue(sql, txtRequiredDate, "D")
    sql = addEnteredValue(sql, txtShippedDate, "D")
    sql = addEnteredValue1(sql, txtShipVia, "N")
    sql = addEnteredValue(sql, txtFreight, "N")
    sql = addEnteredValue(sql, txtShipName)
    sql = addEnteredValue1(sql, cboShipCountry)
    sql = addEnteredValue(sql, txtShipPostalCode)
    sql = addEnteredValue1(sql, cboShipRegion)
    sql = addEnteredValue(sql, txtShipCity)
    sql = addEnteredValue(sql, txtShipAddress)
    sql = addEnteredValue(sql, txtCreditCard)
    sql = sql & " Order by OrderID"

    setSQLWhere = sql
    'logstring = sql 'tying to accumulate the user input texts for logs, but its long a SELECT clause
End Function
Private Function addEnteredValue(sql As String, tb As TextBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    tb.SetFocus
    tmpSQL = sql
    
    If Trim(tb.Text) <> "" Then ' if anything is entered on this textbox
        'WHERE
        'If InStr(1, tmpSQL, " WHERE ") <> 0 Then
            tmpSQL = tmpSQL & " AND "
        'Else
            'tmpSQL = tmpSQL & " WHERE "
        'End If
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(tb.Name, Len(tb.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(tb.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & CStr(tb.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & tb.Text
        
        End Select
    Else
        j = j + 1
    End If

    addEnteredValue = tmpSQL

End Function
Private Function addEnteredValue1(sql As String, cbo As ComboBox, Optional ft As String = "S") As String

    Dim tmpSQL As String
    
    cbo.SetFocus
    tmpSQL = sql
    
    If Trim(cbo.Text) <> "" Then ' if anything is entered on this textbox
        'WHERE
        'If InStr(1, tmpSQL, " WHERE ") <> 0 Then
            tmpSQL = tmpSQL & " AND "
        'Else
            'tmpSQL = tmpSQL & " WHERE "
        'End If
        'COLUMN NAME =
        tmpSQL = tmpSQL & Right(cbo.Name, Len(cbo.Name) - 3) & " = "
        'VALUE
        Select Case ft
            Case "S"
                tmpSQL = tmpSQL & "'" & Replace(CStr(cbo.Text), "'", "''") & "'"
            Case "D"
                tmpSQL = tmpSQL & "CDate('" & str(cbo.Text) & "')"
            Case "N"
                tmpSQL = tmpSQL & cbo.Text
        
        End Select
    Else
    j = j + 1
    End If

    addEnteredValue1 = tmpSQL

End Function
Private Sub populateResult(rs As adodb.Recordset)

    setSearchedValue txtOrderID, rs, 0
    setSearchedValue1 txtCustomerID, rs, 1
    setSearchedValue1 txtEmployeeID, rs, 2
    setSearchedValue txtOrderDate, rs, 3
    setSearchedValue txtRequiredDate, rs, 4
    setSearchedValue txtShippedDate, rs, 5
    setSearchedValue1 txtShipVia, rs, 6
    setSearchedValue txtFreight, rs, 7
    setSearchedValue txtShipName, rs, 8
    setSearchedValue txtShipAddress, rs, 9
    setSearchedValue txtShipCity, rs, 10
    setSearchedValue1 cboShipRegion, rs, 11
    setSearchedValue txtShipPostalCode, rs, 12
    setSearchedValue1 cboShipCountry, rs, 13
    setSearchedValueForNull txtCreditCard, rs, 14 'as there is input mask, needs special attention for txtCreditCard
    
   
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
       
    End If
    
    tb.Locked = False
    tb.Enabled = True
    'tb.SetFocus
    tb.Value = val
    tb.Locked = True

End Sub
Private Sub setSearchedValue1(cbo As ComboBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    cbo.Locked = False
    cbo.Enabled = True
    cbo.Value = val
    If cbo.Name = "txtCustomerID" Then
        CheckInactiveCustomerIDs (val)
        If CheckInactiveCustomerID = True Then ' the customerID IS INACTIVE
            cbo.ForeColor = RGB(191, 191, 191)
        Else: cbo.ForeColor = vbBlack
        End If
    End If

    
    cbo.Locked = True

End Sub
Private Sub setSearchedValueForNull(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
           
        tb.Locked = False
        tb.Enabled = True
        'tb.SetFocus
        tb.Value = val
        tb.Locked = True
    End If


End Sub
Private Sub doInit()
    'preparing the textbox for later search
    doReset txtOrderID
    doReset1 txtCustomerID
    doReset1 txtEmployeeID
    doReset txtOrderDate
    doReset txtRequiredDate
    doReset txtShippedDate
    doReset1 txtShipVia
    doReset txtFreight
    doReset txtShipName
    doReset1 cboShipRegion
    doReset txtShipPostalCode
    doReset1 cboShipCountry
    doReset txtShipCity
    doReset txtShipAddress
    doReset txtCreditCard
       
    RecordNumber = 1
    lblRecNo.Caption = ""
    btnNext.Enabled = False
    btnFastNext.Enabled = False
    btnLast.Enabled = False
    btnPrevious.Enabled = False
    btnFastPrevious.Enabled = False
    btnFirst.Enabled = False
    
    'below is reset every form-level parameter
    SQLStmt = "" 'to clear the SQL clause for next new search
    j = 0
 
End Sub
Private Sub doReset(tb As TextBox)
    'Open the textbox for putting in
    'If tb.Tag <> "s" Then
    tb.Enabled = True
    tb.Locked = False
    'tb.SetFocus
    tb.Value = ""
    'End If
    'txtOrderID.SetFocus
    'only after the txtOrderID is set focus, can the last two textboxes be disabled
    'tb.enabled = enabled
    
End Sub
Private Sub doReset1(cbo As ComboBox)  ',Optional enabled As Boolean = True
    'Open the textbox for putting in
    'If tb.Tag <> "s" Then
    cbo.Enabled = True
    cbo.Locked = False
    'cbo.SetFocus
    cbo.Value = ""
    'End If
    'txtOrderID.SetFocus
    'only after the txtOrderID is set focus, can the last two textboxes be disabled
    'tb.enabled = enabled
    
End Sub

Private Sub Form_Load()
    load = True
    Editable = False 'btnEdit can't work on blank form
    txtCustomerID.LimitToList = False
    Active = 2
    cboChange = True
    
    'populate the current date_time
    lblDateTime.Caption = Get_DT
    'turn on the timer on the form
    Me.TimerInterval = 1000 'set the interval of timer to 1 second =1000ms
    lblDateTime.RightMargin = 0
    
    Me.Caption = "Update Orders"
    'No display navi. Buttons (on the bottom)
    Me.NavigationButtons = False
    'no display selection buttons (on the left-hand side)
    Me.RecordSelectors = False
    
    EquipCountry
    Set Me.cboShipCountry.Recordset = G_CountrySet
    'Flag = False
    'cboShipCountry.Selected(30) = True
    'Flag = True
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    Dim y As Control
    For Each y In Me.Controls
        If TypeOf y Is TextBox Then
        y.BackColor = vbWhite
        End If
    Next y
  
    '------------------------------------
    EquipCustomerID Active
    Set Me.txtCustomerID.Recordset = G_CustomerSet ' only one word can populate combobox with recordset
    With txtCustomerID
        .ListWidth = .ListWidth
    End With
    
    '------------------------------------
    Dim sql As String
    txtShipVia.RowSourceType = "Table/Query"
    Dim con As adodb.Connection
    Set con = New adodb.Connection
    ' fetch data from External Access DBs
    con.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    con.Open
    
    sql = "SELECT ShipperID, CompanyName " & _
              "FROM Shippers Where Status is null"
    Set ShipperSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    ShipperSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    ShipperSet.Open sql, con, adOpenDynamic, adLockPessimistic
    Set Me.txtShipVia.Recordset = ShipperSet ' only one word can populate combobox with recordset
    With txtShipVia
        .ListWidth = .ListWidth
    End With
    '----------------------------------------------------
    txtEmployeeID.RowSourceType = "Table/Query"
    
    Set con = New adodb.Connection
    ' fetch data from External Access DBs
    con.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
                        
    con.Open
    
    sql = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
              "FROM Employees Where Status is null Order by EmployeeID"
    Set EmployeeSet = New adodb.Recordset ' to link "conn.open" to "rs.open"
    EmployeeSet.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    EmployeeSet.Open sql, con, adOpenStatic, adLockBatchOptimistic
    Set Me.txtEmployeeID.Recordset = EmployeeSet ' only one word can populate combobox with recordset
    With txtEmployeeID
        .ListWidth = .ListWidth
    End With
    
    'Set workRS = New adodb.Recordset
    'workRS.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
    
    'sql = "select EmployeeID, FirstName  as Employee " & _
              "FROM Employees Where EmployeeID=1"
  
    'workRS.Open sql, con, adOpenStatic, adLockBatchOptimistic
    'Set workRS.ActiveConnection = Nothing
    'con.Close
    '-----------------------------------------------------------
    j = 0
    SQLStmt = " "
    G_OrderID = 0
    
    Threshold = 500
    fastNumber = Threshold / 2
    
    btnSearchOrders.Caption = "Search Orders"
    btnEdit.Caption = "Edit"
    doInit
    
    'DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
 
    txtOrderID.SetFocus
    
    load = False
    txtCustomerID.LimitToList = True
End Sub
Private Sub txtEmployeeID_AfterUpdate()
    'txtEmployeeID.SetFocus
    If Trim(txtEmployeeID) <> "" Then
    
        Dim newEmployeeID As String
        newEmployeeID = Me.txtEmployeeID
        If IsNumeric(newEmployeeID) = True Then
            CheckInputWithPK "Employees", newEmployeeID, "EmployeeID", txtEmployeeID
            If Found = False Then
                txtEmployeeID.Value = ""
                If MsgBox("This EmployeeID is not valid. Please check again." _
                    & "If you wish to add a new Customer, please click Yes. ", vbYesNo) = vbYes Then
                    'DoCmd.OpenForm "frmEnterNewEmployees", , , , , acDialog
                    DoCmd.OpenForm "frmEnterNewCustomers", , , , , acDialog 'just for testing here
                Else
                    txtOrderID.SetFocus
                    txtEmployeeID.SetFocus
                    Exit Sub
                End If
            
            End If
        Else: MsgBox "The EmployeeID is an integer. Please check again.", vbOKOnly
            txtEmployeeID.Value = ""
            txtOrderID.SetFocus
            txtEmployeeID.SetFocus
        End If
    End If
        
End Sub
Private Sub txtEmployeeID_KeyDown(keycode As Integer, Shift As Integer)

    If keycode = vbKeyDown Or keycode = vbKeyUp Then
        DownArrowKey = True
        txtEmployeeID.Dropdown
    Else
        DownArrowKey = False
    
    End If
    
End Sub
Private Sub txtEMPLOYEEID_change()
If DownArrowKey = False Then

    If load = False And cboChange = True Then
        
        DefaultSQL = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
                  "FROM Employees WHERE "
    
        FilterCboAsYouType EmployeeSet, txtEmployeeID, DefaultSQL, "EmployeeID", "FirstName", "LastName", "Title"
    
        Set Me.txtEmployeeID.Recordset = FilterSet
            
            'Dim i As Byte
        'If Trim(txtEmployeeID.Text & vbNullString) <> vbNullString Then
            'If IsNumeric(txtEmployeeID.Text) = True Then
                'EmployeeSet.MoveFirst
                
                'Do While Not EmployeeSet.EOF
                    'EmployeeSet.Find "EmployeeID like '%" & CLng(txtEmployeeID.Text) & "%'"
                    'workRS.AddNew
                    'workRS.Fields("EmployeeID") = EmployeeSet.Fields("EmployeeID")
                    ''workRS.Fields("Employee") = EmployeeSet.Fields("Employee")
                    'EmployeeSet.MoveNext
               'Loop
                
            'Else
                
                'EmployeeSet.MoveFirst
                
                'Do While Not EmployeeSet.EOF
                    'EmployeeSet.Find "Employee like '%" & txtEmployeeID.Text & "%'"
                    'If Not EmployeeSet.EOF Then
                        'workRS.AddNew
                        'workRS.Fields("EmployeeID") = EmployeeSet.Fields(0).Value
                
                        'workRS.Fields("Employee") = EmployeeSet.Fields(1).Value
                    'Else
                        'Exit Do
                    'End If
                    'EmployeeSet.MoveNext
                'Loop
            'End If
            'workRS.MoveFirst
            'workRS.Delete
            'workRS.MoveNext
            'workRS.Save
            'Set Me.txtEmployeeID.Recordset = workRS
        'End If
        txtEmployeeID.Dropdown

    End If
End If
End Sub

Private Sub txtEmployeeID_gotfocus()
    If load = False And cboChange = True Then
        DefaultSQL = "select EmployeeID, FirstName & "" "" & LastName & "" ,"" & Title as Employee " & _
                    "FROM Employees WHERE "
        FilterCboAsYouType EmployeeSet, txtEmployeeID, DefaultSQL, "EmployeeID", "FirstName", "LastName", "Title"
        Set Me.txtEmployeeID.Recordset = FilterSet
        Me.txtEmployeeID.Dropdown
    End If
End Sub
Private Sub txtEmployeeID_Click()
    cboChange = False
    SendKeys "{F4}"
    cboChange = True
    'close the dropdownlist in one move
End Sub
Private Sub txtShipVia_AfterUpdate()
    'txtEmployeeID.SetFocus
    If Trim(txtShipVia) <> "" Then
    
        Dim newShipVia As String
        newShipVia = Me.txtShipVia
        If IsNumeric(newShipVia) = True Then
            CheckInputWithPK "Shippers", newShipVia, "ShipperID", txtShipVia
        Else: MsgBox "The ShipperID is an integer. Please check again.", vbOKOnly
            txtShipVia.Value = ""
        End If
    Else
        Exit Sub
    End If
        
End Sub
Private Sub txtShipvia_KeyDown(keycode As Integer, Shift As Integer)

    If keycode = vbKeyDown Or keycode = vbKeyUp Then
        DownArrowKey = True
        txtShipVia.Dropdown
    Else
        DownArrowKey = False
    
    End If
    
End Sub
Private Sub txtShipVia_change()
If DownArrowKey = False Then
    If load = False Then
        
        DefaultSQL = "select ShipperID, CompanyName " & _
                  "FROM Shippers WHERE "
        
        FilterCboAsYouType ShipperSet, txtShipVia, DefaultSQL, "ShipperID", "CompanyName"
    
        Set Me.txtShipVia.Recordset = FilterSet
        txtShipVia.Dropdown

    End If
End If
End Sub
Private Sub txtShipVia_gotfocus()
    If load = False Then
        DefaultSQL = "select ShipperID, CompanyName " & _
                  "FROM Shippers WHERE "
        
        FilterCboAsYouType ShipperSet, txtShipVia, DefaultSQL, "ShipperID", "CompanyName"
    
        Set Me.txtShipVia.Recordset = FilterSet
        txtShipVia.Dropdown
    End If
End Sub

Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub
Private Sub txtCustomerID_Change()
    If cboChange = True Then
        txtCustomerID.Dropdown
    End If
End Sub
Private Sub txtCustomerID_gotfocus()
    If cboChange = True Then
        txtCustomerID.Dropdown
    End If
End Sub
Private Sub txtCustomerID_Click()
    cboChange = False
    SendKeys "{F4}"
    cboChange = True
    'close the dropdownlist in one move
End Sub
Private Sub txtCustomerID_KeyDown(keycode As Integer, Shift As Integer)

    If txtCustomerID.ListWidth = txtCustomerID.ListWidth And keycode = vbKeyDown Then
        txtCustomerID.Dropdown
    End If
    
End Sub
Private Sub cboShipCountry_afterupdate()
'ENTER FORMs use afterdate only for cascading
'all invalid input will go to NotInList event and addnew there
'UPDATE FORMs use afterupdate to check/cascading/addnew

   If Trim(cboShipCountry.Text) <> "" Then
    'the cboShipcountry.RowSource must be'Table/Query'
    'to use.text
        Dim newCountry As String
        newCountry = Me.cboShipCountry
        
        If IsNumeric(newCountry) Then
            GetBoundColumnValue "Country", "CountryList", "CountryID", newCountry, G_CountryName
            If G_CountryName = "" Then 'means there is no such value matching this Country number
                MsgBox "No Country Matches this ID number. Please check again."
                cboShipCountry = ""
            Else 'there is a country matching this number
                Me.cboShipCountry = G_CountryName
                'make the cbo populate G_countryname
            End If
            
        Else 'there is string input
            
            CheckInputWithPK "CountryList", newCountry, "Country", cboShipCountry, G_CountryName
            If Found = False Then
                If MsgBox("Are you sure to add the new item '" & newCountry _
                    & "' to the list?", vbYesNo, "New Item") = vbYes Then
                    G_CountryName = newCountry
                    DoInsert newCountry
                    EquipCountry
                    Set cboShipCountry.Recordset = G_CountrySet
                    Write_log 111, "Insert new category in CountryList: " _
                        & newCountry & " ,CountryName=" & G_CountryName, 0
                Else
                    cboShipCountry = ""
                    G_CountryName = ""
                    EquipCountry
                    Set cboShipCountry.Recordset = G_CountrySet
                End If
            Else
                G_CountryName = newCountry
            End If
        End If
    Else 'there is nothing input
        G_CountryName = ""
        'for region to return nothing
        'otherwise the region still follow the previous CountryName
    End If
    
    EquipRegion G_CountryName
    Set Me.cboShipRegion.Recordset = G_RegionSet
    Me.cboShipRegion = cboShipRegion.ItemData(8)
    'default is Ontario

End Sub
Private Sub cboShipCountry_Change()
'change event canbe omitted if autoexpand is on
'afterupdate is to take charge to expand for the columns excluding 1st column
    'If cboChange = True Then
        'DefaultSQL = "select Country, CountryID from CountryList WHERE "
        'FilterCboAsYouType G_CountrySet, cboShipCountry, DefaultSQL, "CountryID", "Country"
        'Set Me.cboShipCountry.Recordset = FilterSet
        'cboShipCountry.Dropdown
    'End If

End Sub
Private Sub cboShipCountry_gotfocus()

    If cboChange = True Then
        'DefaultSQL = "select Country, CountryID from CountryList WHERE "
        'FilterCboAsYouType G_CountrySet, cboShipCountry, DefaultSQL, "CountryID", "Country"
        'Set Me.cboShipCountry.Recordset = FilterSet
        cboShipCountry.Dropdown
    End If

End Sub
Private Sub cboShipCountry_Click()
    cboChange = False
    SendKeys "{F4}"
    'close the dropdownlist in one move
    cboChange = True
End Sub
Private Sub cboShipCountry_KeyDown(keycode As Integer, Shift As Integer)

    'If cboShipCountry.ListWidth = cboShipCountry.ListWidth And KeyCode = vbKeyDown Then
        'cboShipCountry.Dropdown
    'End If
       'If KeyCode = vbKeyDown And Shift <> acAltMask Then
        'cboShipCountry.Dropdown
    'End If
End Sub
Private Sub cboShipCountry_NotInList(newData As String, Response As Integer)
    
        Dim intAnswer As Integer
        intAnswer = MsgBox(" """ & newData & """  is not an approved category. " & vbCrLf _
            & "Do you want to add it now?", vbYesNo + vbQuestion, "Invalid Category")
    
        Select Case intAnswer
            Case vbYes
                DoInsert
                Write_log 111, "Insert new category in CountryList: " _
                            & newData & " ,CustomerID=" & G_CustomerID, 0
                Response = acDataErrAdded
                
            Case vbNo
            
                MsgBox "Please select an item from the list.", _
                    vbExclamation + vbOKOnly, "Invalid Entry"
                Response = acDataErrContinue
        End Select
    
        cboShipCountry.Undo
        EquipCountry
        Set Me.cboShipCountry.Recordset = G_CountrySet
        
End Sub
Private Sub DoInsert(newData As String)
    Dim conn As New adodb.Connection
    Dim sql As String
    sql = "INSERT INTO Countrylist( Country ) VALUES ('" & newData & "')"

    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    conn.Execute sql

    conn.Close
    Set conn = Nothing
    
End Sub
Private Sub txtFreight_AFTERupdate()
    
    If IsNull(Trim(txtFreight)) = True Then
        Exit Sub
    Else
    
        If IsNumeric(txtFreight.Value) = True Then
            Dim x As Currency
            x = txtFreight.Value
            If x >= 0 Then
                x = 0
            Else
                MsgBox "Freight must be Positive. Please check again.", vbOKOnly
                txtFreight.SetFocus
                txtFreight = " "
            End If
        Else
            MsgBox "Freight must be Positive. Please check again.", vbOKOnly
            txtFreight.SetFocus
            txtFreight = " "
        End If
    End If
        'txtEmployeeID.SetFocus 'not working
End Sub

Private Sub btnDetails_Click()

    txtOrderID.Enabled = True
    txtOrderID.Locked = False
    txtOrderID.SetFocus
    If Trim(txtOrderID) <> "" Then
        G_OrderID = txtOrderID.Text
        txtOrderID.Locked = True
        fetchRSDetails G_OrderID
        If recsetDetails.RecordCount = 0 Then
            MsgBox "There are no Order Details for this OrderID yet. " _
                & "Please go to form Enter New Order Details if you wish to enter any information."
            Exit Sub
        Else
            DoCmd.OpenForm "frmUpdateOrderDetails", , , , , acDialog
        End If
    Else
        MsgBox "You have not chosen any Order yet.", vbOKOnly
    End If
 
End Sub
Private Sub fetchRSDetails(b As Long)
    Dim DB1 As Integer 'number of DBs for loop
    Dim conn1 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim sql As String
   
    DB1 = getDBnumber(G_OrderID) ' to know which DB will be involved

        ' to select information for Table Order_Details part
        sql = "SELECT * " _
            & "from " _
            & "OrderDetails_" & DB1 _
            & " WHERE OrderID = " & G_OrderID & " AND Status is null  " _

        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        rsPartial1.Open sql, conn1, adOpenKeyset, adLockOptimistic
        'rsPartial1.Open sql, conn1, adOpendynamic, adLockBatchOptimistic
        Set recsetDetails = New adodb.Recordset
        Set recsetDetails = rsPartial1
End Sub

===================================================================================================
--frmViewCustomers
Option Compare Database
Option Explicit
Dim TimerSeconds As Long
Dim recset As adodb.Recordset
Dim fastNumber As Integer 'to count for btnFastPrevious and btnFastPrevious
Dim MaxRecNo As Long
Dim RecordNumber As Long
Private Sub btnFirst_Click()
    If RecordNumber > 1 Then
        RecordNumber = 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveFirst
        populateResult recset
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If

End Sub
Private Sub btnFastPrevious_Click()
    If RecordNumber > 1 Then
        If RecordNumber > fastNumber Then
            RecordNumber = RecordNumber - fastNumber
            recset.Move -fastNumber
            populateResult recset
        ElseIf RecordNumber < fastNumber Then
            RecordNumber = 1
            recset.MoveFirst
            populateResult recset
        End If
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnPrevious_Click()

    If RecordNumber > 1 Then
        RecordNumber = RecordNumber - 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MovePrevious
        populateResult recset
    Else
        MsgBox "You've reached the beginning of the records.", vbOKOnly
    End If

End Sub
Private Sub btnLast_Click()
    If RecordNumber < MaxRecNo Then
        RecordNumber = MaxRecNo
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveLast
        populateResult recset
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
End Sub
Private Sub btnFastNext_Click()
    If RecordNumber < MaxRecNo Then
        If RecordNumber < MaxRecNo - fastNumber Then
            RecordNumber = RecordNumber + fastNumber
            recset.Move fastNumber
            populateResult recset
        Else
            RecordNumber = MaxRecNo
            recset.MoveLast
            populateResult recset
        End If
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If
    
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnNext_Click()

    If RecordNumber < MaxRecNo Then
        RecordNumber = RecordNumber + 1
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        recset.MoveNext
        populateResult recset
    Else
        MsgBox "You've reached the end of the records.", vbOKOnly
    End If

End Sub
Private Sub btnClose_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmCustomerManagement", , , , , acDialog
End Sub
Private Sub OptButton_AfterUpdate()
    If OptButton = 1 Then
        Active = 1
        doSearch
    Else
        Active = 2
        doSearch
    End If
End Sub
Private Sub doSearch()
    Dim sql As String
    If Active = 1 Then 'active only
        sql = "Select * from Customers Where Status is null"
    ElseIf Active = 2 Then 'all including inactive'
        sql = "Select * from Customers"
    End If
    
    Dim conn As adodb.Connection
    Dim i As Integer
     
    Set conn = New adodb.Connection 'obtain the connection
    conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                            "Data Source=" & GetAddress("O", 0)
    conn.Open
    
    Set recset = New adodb.Recordset
    recset.CursorLocation = adUseClient
    recset.Open sql, conn, adOpenDynamic, adLockBatchOptimistic
    
    recset.MoveFirst
    populateResult recset
    
    fastNumber = 100
    MaxRecNo = recset.RecordCount
    RecordNumber = 1
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub Form_Load()

    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    TimerSeconds = TimerSeconds + 1
    lblDateTime.RightMargin = 0
        
    Me.Caption = "View Order Details"
    Me.NavigationButtons = False
    Me.RecordSelectors = False
    
    Me.Caption = "View Customers"
   
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    CheckActive "frmViewCustomers" ' to get the selected value "active" from OptButton in the form
    doSearch
    
    btnNext.Enabled = True
    btnFastNext.Enabled = True
    btnLast.Enabled = True
    btnPrevious.Enabled = True
    btnFastPrevious.Enabled = True
    btnFirst.Enabled = True
      
    'DoCmd.OpenForm "frmCustomerManagement", , , , , acHidden
End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub
Private Sub populateResult(rs As adodb.Recordset)

    Dim a As Control
    For Each a In Me.Controls
        If TypeOf a Is TextBox Then
            a.Locked = False
            a.Enabled = True
        End If
    Next a
        
    setSearchedValue txtCustomerID, rs, 0
    setSearchedValue txtCompanyName, rs, 1
    setSearchedValue txtContactName, rs, 2
    setSearchedValue txtContactTitle, rs, 3
    setSearchedValue txtAddress, rs, 4
    setSearchedValue txtCity, rs, 5
    setSearchedValue txtRegion, rs, 6
    setSearchedValue txtPostalCode, rs, 7
    setSearchedValue txtCountry, rs, 8
    setSearchedValue txtPhone, rs, 9
    setSearchedValue txtFax, rs, 10
   
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    tb.Locked = False
    tb.Enabled = True
    tb.Value = val
    If tb.Name = "txtCustomerID" Then
        CheckInactiveCustomerIDs (val)
        If CheckInactiveCustomerID = True Then ' the customerID IS INACTIVE
            tb.ForeColor = RGB(191, 191, 191)
        Else: tb.ForeColor = vbBlack
        End If
    End If
    tb.Locked = True

End Sub

======================================================================================
--frmViewOrderDetails
Option Compare Database
Option Explicit
Dim recset As adodb.Recordset 'recordset for listbox--lstViewOrderDetails
Dim recset1 As adodb.Recordset 'recordset for all textboxes
Dim recset2 As adodb.Recordset
Private Sub btnClosePage_Click()
    DoCmd.Close
End Sub
Private Sub Form_Load()

    Active = 2
    'populate the current date_time
    lblDateTime.Caption = Get_DT
    'turn on the timer on the form
    Me.TimerInterval = 1000 'set the interval of timer to 1 second =1000ms
    lblDateTime.RightMargin = 0
    
    Me.Caption = "View Order Details"
    Me.NavigationButtons = False
    Me.RecordSelectors = False
    
    Me.Filter = "OrderID = " & G_OrderID
    Me.FilterOn = True
    txtOrderID.Enabled = True
    txtOrderID.Locked = False
    txtOrderID.SetFocus
    txtOrderID.Text = G_OrderID
    txtOrderID.Locked = True
    
    'Dim strRecordSource As String
    'strRecordSource = "SELECT o.OrderID, o.CustomerID, o.EmployeeID, o.OrderDate, o.RequiredDate, o.ShippedDate, o.Freight, o.ShipName, " & _
    "o.ShipAddress, o.ShipCity, o.ShipRegion, o.ShipPostalCode, o.ShipCountry, o.CreditCard, s.CompanyName, s.Phone, s.ShipperID " & _
    "FROM Orders AS o LEFT JOIN Shippers AS s ON o.Shipvia=s.ShipperID where OrderID=" & G_OrderID
    'Me.RecordSource = strRecordSource
    'the above is recordsource for bound form
    'in this case, i prefer to unbound form with ADO recordset
    If G_OrderID = 0 Or Trim(txtOrderID) = "" Then
        MsgBox "You have not chosen any Order yet. Please go to frmViewOrders to choose one first."
    Else
            Dim i As Integer
            i = getDBnumber(G_OrderID)
            
            Dim sql1 As String
            sql1 = "Select ShipVia as ShipperID, * from Orders where OrderID=" & G_OrderID
            
            Dim conn1 As adodb.Connection
            Set conn1 = New adodb.Connection
            conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", i)
            conn1.Open
            
            Set recset1 = New adodb.Recordset
            '---------------------------------------------------------
            recset1.CursorLocation = adUseClient
            recset1.Open sql1, conn1, adOpenDynamic, adLockBatchOptimistic
            '---------------------------------------------------------
        
            If IsNull(recset1.Fields(0)) = False Then
                G_ShipperID = recset1.Fields(0).Value
            
                Dim sql2 As String
                sql2 = "Select CompanyName, Phone from Shippers where status is null and ShipperID=" & G_ShipperID
                                                  
                Dim conn2 As adodb.Connection
                Set conn2 = New adodb.Connection
                conn2.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                         "Data Source=" & GetAddress("O", 0)
                                        
                conn2.Open
                Set recset2 = New adodb.Recordset
                '---------------------------------------------------------
                recset2.CursorLocation = adUseClient
                recset2.Open sql2, conn2, adOpenDynamic, adLockBatchOptimistic
                '---------------------------------------------------------
                populateResult1 recset1
                If IsNull(recset2) = False Then 'if the shipper is already inactivated
                    populateResult2 recset2
                End If
            Else
                populateResult1 recset1
            End If
            
            'below is not workable due to no connection to the backend DB
            'lstViewOrderDetails.RowSource = _
                "SELECT ProductID, UnitPrice, " & _
                "Quantity, Discount, OrderAmount " & _
                "FROM (SELECT OrderID, ProductID, UnitPrice, Quantity, Discount, CCUR(IIF(UnitPrice*Quantity*(1-Discount) is null, 0, UnitPrice*Quantity*(1-Discount))) AS OrderAmount " & _
                "FROM OrderDetails_" & i & _
                " WHERE OrderID = " & G_OrderID & ")"
            
            'refresh data with the query carring the filter on OrderID
            'lstViewOrderDetails.Requery
            
            lstViewOrderDetails.RowSourceType = "Table/Query"
            Dim sql As String
            sql = "SELECT ProductID, UnitPrice, " & _
                    "Quantity, Discount, OrderAmount " & _
                    "FROM (SELECT OrderID, ProductID, UnitPrice, Quantity, Discount, CCUR(IIF(UnitPrice*Quantity*(1-Discount) is null, 0, UnitPrice*Quantity*(1-Discount))) AS OrderAmount " & _
                    "FROM OrderDetails_" & i & _
                    " WHERE Status is null and OrderID = " & G_OrderID & ")"
            Dim conn As adodb.Connection
            Set conn = New adodb.Connection
            ' fetch data from External Access DBs
            conn.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", i)
            conn.Open
            Set recset = New adodb.Recordset ' to link "conn.open" to "rs.open"
        
            recset.CursorLocation = adUseClient 'adUseClient and adOpenDynamic, adLockPessimistic for set cbobox.recordset=CustomerSet
            recset.Open sql, conn, adOpenDynamic, adLockPessimistic
            Set Me.lstViewOrderDetails.Recordset = recset
    End If
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
End Sub
Private Sub populateResult1(rs As adodb.Recordset)
        
    'setSearchedValue txtOrderID, rs, 1
    setSearchedValue txtCustomerID, rs, 2
    setSearchedValue txtEmployeeID, rs, 3
    setSearchedValue txtOrderDate, rs, 4
    setSearchedValue txtRequiredDate, rs, 5
    setSearchedValue txtShippedDate, rs, 6
    setSearchedValue txtFreight, rs, 7
    setSearchedValue txtShipName, rs, 8
    setSearchedValue txtShipAddress, rs, 9
    setSearchedValue txtShipCity, rs, 10
    setSearchedValue txtShipRegion, rs, 11
    setSearchedValue txtShipPostalCode, rs, 12
    setSearchedValue txtShipCountry, rs, 13
    setSearchedValue txtCreditCard, rs, 14
   
  
End Sub
Private Sub populateResult2(rs As adodb.Recordset)

    setSearchedValue txtCompanyName, rs, 0
    setSearchedValue txtPhone, rs, 1
   
  
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    'to decide for null value
    Dim val As String
    If IsNull(rs(fn).Value) Then
       val = " "
    Else
       val = rs(fn).Value
    End If
    
    tb.Locked = False
    tb.Enabled = True
 
    tb.Value = val
    
    'in populate:
    If tb.Name = "txtCustomerID" Then
        CheckInactiveCustomerIDs (val)
        If CheckInactiveCustomerID = True Then ' the customerID IS INACTIVE
            tb.ForeColor = RGB(191, 191, 191)
        Else: tb.ForeColor = vbBlack
        End If
    End If

    tb.Locked = True

End Sub
Private Sub Form_Timer()

    lblDateTime.Caption = Get_DT
    
End Sub

===========================================================================
--frmViewOrders
Option Compare Database
Option Explicit
Dim TimerSeconds As Long
Dim recset As adodb.Recordset 'the whole recset we have now, which could increase with btnNext
Dim recsetDetails As adodb.Recordset
Dim RecordNumber As Long
Dim MaxRecNo As Long 'the total records from all our DB
Dim Threshold As Long 'to restrict how many records we fetch each time from DB
Dim fastNumber As Long 'to restrict how many records to jump when fastNext/fastPrevious is pressed
Dim howmanyThreshold As Long 'to record how many times the whole database can be divided by the threshold
Dim StartOrderID As Long
Dim LastRows As Long 'this is to calculate the count of Orders in the last part
Dim DB1 As Integer 'number of DBs for loop
Dim DB2 As Integer
Private Sub btnClosePage_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmOrderManagement", , , , , acDialog
End Sub
Private Sub fetchRSDetails(b As Long)
    
    Dim conn1 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim sql As String
   
    DB1 = getDBnumber(G_OrderID) ' to know which DB will be involved

        ' to select information for Table Order_Details part
        sql = "SELECT OrderID,  Count(ProductID) " _
            & "as TotalProducts, ccur(sum(Amount)) as OrderAmount " _
            & "from (" _
            & "SELECT OrderID, ProductID, " _
            & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
            & "From " _
            & "OrderDetails_" & DB1 _
            & " WHERE OrderID = " & G_OrderID & " AND Status is null ) as t " _
            & "Group by OrderID  "
        'sql = "SELECT OrderID,  Count(ProductID) " _
            & "as TotalProducts, format(sum(Amount),'C') as OrderAmount " _
            & "from (" _
            & "SELECT OrderID, ProductID, " _
            & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
            & "From " _
            & "OrderDetails" _
            & " WHERE OrderID = " & G_OrderID & " AND Status is null ) as t " _
            & "Group by OrderID  "
        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)
        'conn1.ConnectionString = "Provider=SQLOLEDB;SERVER=your_server;Database=JuliaDatabase;Trusted_Connection=Yes"
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        rsPartial1.Open sql, conn1, adOpenKeyset, adLockOptimistic
        'rsPartial1.Open sql, conn1, adOpendynamic, adLockBatchOptimistic
        Set recsetDetails = New adodb.Recordset
        Set recsetDetails = rsPartial1
End Sub
    ' need to fetch new data
Private Sub fetchRS(a As String, b As Long, C As Long)
    ' need to fetch new data
    'a is to determine ASC OR DESC
    'b is to determine the StartOrderID
    'c is to determine how many records to fetch
    
    Dim conn1 As adodb.Connection
    Dim conn2 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim rsPartial2 As adodb.Recordset
    Dim i As Byte 'to record one or two DBs are involved
    Dim n As Byte
    Dim m As Long
    Dim sql As String
   
    DB1 = getDBnumber(StartOrderID) ' to know which DB will be involved
    
    If a = "Asc" Then
        'first to select information for Table Orders part
        sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName " _
                & "From " _
                & "Orders " _
                & "WHERE OrderID in " _
                & "(Select Top " & C & " OrderID from Orders WHERE OrderID > " & StartOrderID & " and Status is null " _
                & " Order by OrderID) " _
                & "Order by OrderID "
       
        'below is not working any more, even I add filter like "Where Status is null"
        'sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName, Count(ProductID) " _
                & "as TotalProducts, ccur(sum(Amount)) as OrderAmount " _
                & "from (" _
                & "SELECT o.OrderID, OrderDate, RequiredDate, ShippedDate, ShipName, ProductID, " _
                & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
                & "From " _
                & "Orders as o left Join OrderDetails_" & DB1 & " as od " _
                & "on o.OrderID=od.OrderID " _
                & "WHERE o.OrderID in " _
                & "(Select Top " & Threshold & " OrderID from Orders WHERE OrderID > " & StartOrderID & " and Status is null )) as t " _
                & "Group by OrderID, OrderDate, RequiredDate, ShippedDate, ShipName "

        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)

        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        'rsPartial1.Open sql, conn1, adOpenKeyset, adLockOptimistic
        rsPartial1.Open sql, conn1, adOpenStatic, adLockBatchOptimistic
        '----------------------------------------------------------
        Set recset = New adodb.Recordset
        Set rsPartial1.ActiveConnection = Nothing
        conn1.Close
        Set recset = rsPartial1
        If recset.RecordCount < C Then
            Dim z As Long
            z = recset.RecordCount
            m = C - z
            
            If DB1 + 1 <= NumberofDBs Then
                DB2 = DB1 + 1
            
            sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName " _
                    & "From " _
                    & "Orders " _
                    & "WHERE OrderID in " _
                    & "(Select Top " & m & " OrderID from Orders WHERE OrderID > " & StartOrderID & " and Status is null " _
                    & " Order by OrderID) " _
                    & "Order by OrderID "
                        
                    
            Set conn2 = New adodb.Connection
            conn2.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", DB2)

            conn2.Open
        
            Set rsPartial2 = New adodb.Recordset
            '---------------------------------------------------------
            rsPartial2.CursorLocation = adUseClient
            rsPartial2.Open sql, conn2, adOpenStatic, adLockBatchOptimistic
            rsPartial2.MoveFirst
            'below is to copy rsPartial2 to recset
            Do While Not rsPartial2.EOF
            recset.AddNew
                'For n = 0 To rsPartial2.Fields.Count - 1
                    'recset.Fields(rsPartial2.Fields(n).Name).Value = rsPartial2.Fields(n).Value
                    recset.Fields("OrderID") = rsPartial2.Fields(0).Value
                    recset.Fields("OrderDate") = rsPartial2.Fields(1).Value
                    recset.Fields("RequiredDate") = rsPartial2.Fields(2).Value
                    recset.Fields("ShippedDate") = rsPartial2.Fields(3).Value
                    recset.Fields("ShipName") = rsPartial2.Fields(4).Value
                'Next n
                rsPartial2.MoveNext
            Loop
            End If
         End If
          
    Else 'a = "Desc"
        sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName " _
            & "From " _
            & "Orders " _
            & "WHERE OrderID in " _
            & "(Select Top " & C & " OrderID from Orders WHERE OrderID <  " & StartOrderID & " and Status is null " _
            & " Order by OrderID Desc) " _
            & "Order by OrderID"
        'below is not working any more, even I add filter like "Where Status is null"
        'sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName,Count(ProductID) " _
            & "as TotalProducts, ccur(sum(Amount)) as OrderAmount " _
            & "from (" _
            & "SELECT o.OrderID, OrderDate, RequiredDate, ShippedDate, ShipName, ProductID, " _
            & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
            & "From " _
            & "Orders as o left Join OrderDetails_" & DB1 & " as od " _
            & "on o.OrderID=od.OrderID " _
            & "WHERE o.OrderID in " _
            & "(Select Top " & Threshold & " OrderID from Orders WHERE OrderID <  " & StartOrderID & " and Status is null " _
            & " Order by OrderID Desc)) as t " _
            & "Group by OrderID,  OrderDate, RequiredDate, ShippedDate, ShipName " _
            & "Order by OrderID"
            
            Set conn1 = New adodb.Connection
            conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", DB1)
                                     
            conn1.Open
        
            Set rsPartial1 = New adodb.Recordset
            '---------------------------------------------------------
            rsPartial1.CursorLocation = adUseClient
            rsPartial1.Open sql, conn1, adOpenDynamic, adLockBatchOptimistic
            '---------------------------------------------------------
             Set recset = New adodb.Recordset
             Set recset = rsPartial1
             
         If recset.RecordCount < C Then
            m = C - recset.RecordCount
            If DB1 - 1 >= 2 Then
            DB2 = DB1 - 1
            
            sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName " _
                & "From " _
                & "Orders " _
                & "WHERE OrderID in " _
                & "(Select Top " & m & " OrderID from Orders WHERE OrderID <  " & StartOrderID & " and Status is null " _
                & " Order by OrderID Desc) " _
                & "Order by OrderID"
                
            Set conn2 = New adodb.Connection
            conn2.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                    "Data Source=" & GetAddress("O", DB2)
                                     
            conn2.Open
        
            Set rsPartial2 = New adodb.Recordset
            '---------------------------------------------------------
            rsPartial2.CursorLocation = adUseClient
            rsPartial2.Open sql, conn1, adOpenDynamic, adLockBatchOptimistic
            Set recset = New adodb.Recordset
            Set recset = rsPartial2
            'below is to copy rsPartial2 to recset
            rsPartial1.MoveFirst
            
            Do While Not rsPartial1.EOF
            recset.AddNew
                For n = 0 To rsPartial1.Fields.Count - 1
                    recset.Fields(n).Value = rsPartial1.Fields(n).Value
                Next n
                rsPartial1.MoveNext
            Loop
            End If
         End If
    End If


End Sub
Private Sub btnFirst_Click()
    

        '-------------------------------
        If RecordNumber <= Threshold And RecordNumber > 1 Then ' the record is in the 1st range
    
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
        
        ElseIf RecordNumber > Threshold Then ' the record is not in the 1st range
            StartOrderID = getMinNumber - 1
            fetchRS "Asc", StartOrderID, Threshold
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            MsgBox "You've reached the beginning of the Records", vbOKOnly
        End If
  
End Sub
Private Sub btnFastPrevious_Click()

    '-------------------------------------------------------------------

    If RecordNumber Mod Threshold + fastNumber > Threshold Then
    'record will stay within the current threshold after move or the record now is right the threshold point
        RecordNumber = RecordNumber - fastNumber
        recset.Move -fastNumber
        populateOrders recset
        G_OrderID = recset.Fields(0)
        fetchRSDetails G_OrderID
        populateOrderDetails recsetDetails
        '---------------------
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        
    ElseIf RecordNumber Mod Threshold + fastNumber <= Threshold And RecordNumber Mod Threshold <> 0 _
           And RecordNumber <> 1 Then
        If RecordNumber > Threshold Then
           'need to fetch data as the record will fall in the previous threshold after move
            If Not recset.BOF Then
                 recset.MoveFirst
            End If
                StartOrderID = recset.Fields(0).Value
                fetchRS "Desc", StartOrderID, Threshold

           recset.MoveLast
           recset.Move -fastNumber + RecordNumber Mod Threshold
           '6300-500=5800
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
           RecordNumber = RecordNumber - fastNumber
           lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else ' the record in the first range
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        End If
    ElseIf RecordNumber Mod Threshold = 0 Then

        RecordNumber = RecordNumber - fastNumber
        recset.Move -fastNumber
        populateOrders recset
        G_OrderID = recset.Fields(0)
        fetchRSDetails G_OrderID
        populateOrderDetails recsetDetails
        '---------------------
        lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            
    Else
        'the current record is exactly the fist record
        MsgBox "You've reached the beginning of the Records", vbOKOnly
      
    End If

End Sub
Private Sub btnPrevious_Click()

        '------------------------------------------------------------------------------------
        If RecordNumber Mod Threshold = 1 And RecordNumber > 1 Then  'record is the threshold and will move to the previous threshold/range
            txtOrderID.Enabled = True
            txtOrderID.Locked = False
            txtOrderID.SetFocus
            StartOrderID = txtOrderID.Text
            
            fetchRS "Desc", StartOrderID, Threshold
            recset.MoveLast
            RecordNumber = RecordNumber - 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
            
        ElseIf RecordNumber Mod Threshold <> 1 Then 'record is not the threshold
            recset.MovePrevious
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
            RecordNumber = RecordNumber - 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            MsgBox "You've reached the beginning of the Records", vbOKOnly
        End If
  
End Sub
Private Sub btnLast_Click()

        '--------------------------------------------------------------------------------------------------------------
        If MaxRecNo - RecordNumber + 1 <= LastRows And RecordNumber < MaxRecNo Then ' now in the last part
    
            RecordNumber = MaxRecNo
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
        
        ElseIf RecordNumber <= MaxRecNo - LastRows Then
            StartOrderID = getNumber
            fetchRS "Desc", StartOrderID, LastRows
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
            RecordNumber = MaxRecNo
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            MsgBox "You've reached the end of the Records", vbOKOnly
        End If
   
End Sub
Private Sub btnFastNext_Click()

        '-------------------------------------------------
        If RecordNumber + fastNumber < MaxRecNo Then ' the record wont reach the end of the data anyway
        
            If RecordNumber > MaxRecNo - LastRows Then 'the record is in the last range
                RecordNumber = RecordNumber + fastNumber
                recset.Move fastNumber
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                '---------------------
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            ElseIf RecordNumber <= MaxRecNo - LastRows And RecordNumber > MaxRecNo - LastRows - fastNumber Then
                'definitely need to fetch new data of last fraction
                If Not recset.EOF Then
                    recset.MoveLast
                End If
                StartOrderID = recset.Fields(0).Value
                
                fetchRS "Asc", StartOrderID, LastRows
            
                recset.MoveLast
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                '---------------------
                RecordNumber = MaxRecNo
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            Else
                If RecordNumber Mod Threshold + fastNumber <= Threshold And RecordNumber Mod Threshold <> 0 Then
                'record will not reach the next threshold after move
                
                    RecordNumber = RecordNumber + fastNumber
                    recset.Move fastNumber
                    populateOrders recset
                    G_OrderID = recset.Fields(0)
                    fetchRSDetails G_OrderID
                    populateOrderDetails recsetDetails
                    '---------------------
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                    
                ElseIf RecordNumber Mod Threshold + fastNumber > Threshold Then
                    'need to fetch data of next threshold
                    recset.MoveLast
                    StartOrderID = recset.Fields(0).Value
                    
                    fetchRS "Asc", StartOrderID, Threshold
    
                    recset.MoveFirst '5800+500=6300
                    recset.Move fastNumber - (Threshold - RecordNumber Mod Threshold) - 1
                    populateOrders recset
                    G_OrderID = recset.Fields(0)
                    fetchRSDetails G_OrderID
                    populateOrderDetails recsetDetails
                    '---------------------
                    RecordNumber = Threshold * (Fix(RecordNumber / Threshold) + 1) + fastNumber - (Threshold - RecordNumber Mod Threshold)
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                    
                ElseIf RecordNumber Mod Threshold = 0 Then ' current the end of range and need new data
                    StartOrderID = recset.Fields(0).Value
                    fetchRS "Asc", StartOrderID, Threshold
    
                    recset.Move fastNumber - 1
                    populateOrders recset
                    G_OrderID = recset.Fields(0)
                    fetchRSDetails G_OrderID
                    populateOrderDetails recsetDetails
                    '---------------------
                    RecordNumber = Threshold * (Fix(RecordNumber / Threshold) + 1) + fastNumber - (Threshold - RecordNumber Mod Threshold)
                    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                 
                End If
            End If
        Else 'RecordNumber + fastNumber >= Maxrecno
            If RecordNumber > MaxRecNo - LastRows Then 'the record is in the last range
                RecordNumber = MaxRecNo
                recset.MoveLast
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                '---------------------
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            ElseIf RecordNumber <= MaxRecNo - LastRows Then
            ' the Record will move to the last fraction
                If Not recset.EOF Then
                    recset.MoveLast
                End If
                StartOrderID = recset.Fields(0).Value
                
                fetchRS "Asc", StartOrderID, LastRows
            
                recset.MoveLast
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
                '---------------------
                RecordNumber = MaxRecNo
                lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            Else
                MsgBox "You've reached the end of the Records", vbOKOnly
            End If
        End If
        '------------------------------------------------------------------
End Sub
Private Sub btnNext_Click()

        '-----------------------------------------------------------
        If RecordNumber Mod Threshold <> 0 And RecordNumber < MaxRecNo Then 'records are ready to move forward
    
            RecordNumber = RecordNumber + 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            '---------------------
            recset.MoveNext
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
            
        ElseIf RecordNumber Mod Threshold = 0 And RecordNumber < MaxRecNo Then
        'when recordnumber is the threshold
            
            ' need to fetch new data
            txtOrderID.Enabled = True
            txtOrderID.Locked = False
            txtOrderID.SetFocus
            StartOrderID = txtOrderID.Text
            
            fetchRS "Asc", StartOrderID, Threshold
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
            '---------------------
            RecordNumber = RecordNumber + 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
        Else
            MsgBox "You've reached the end of the Records", vbOKOnly
       End If


End Sub
Private Sub btnClose_Click()
    DoCmd.Close
End Sub
Private Sub btnViewOrderDetails_Click()

    txtOrderID.SetFocus
    G_OrderID = txtOrderID.Text
    DoCmd.OpenForm "frmViewOrderDetails", , , , , acDialog

End Sub

Private Sub Form_Load()
Dim starttime As Double
starttime = Timer
    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    TimerSeconds = TimerSeconds + 1
    lblDateTime.RightMargin = 0
    
    Me.Caption = "View Orders"
    Me.NavigationButtons = False
    Me.RecordSelectors = False
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    Threshold = 100000

    fastNumber = Threshold / 2
    MaxRecNo = getCount
    RecordNumber = 1
    'threshold is to be defined in Form_load Event
    howmanyThreshold = -Int(-MaxRecNo / Threshold) 'record how many times data can be divided by threshold
    LastRows = MaxRecNo Mod Threshold
    
    StartOrderID = getMinNumber - 1
     
    'fetchRS "Asc", StartOrderID, threshold ' to get recset from Table Orders
    fetchRS "Asc", StartOrderID, Threshold
    'in the fetchRS, i need to seperately connecet the tables of Orders
    'adding Status into the DB makes it impossible to join the tables of Orders and OrderDetails as usually did
    'even I use filter like "Where Status is null"
    'NEXT it to fetch information from OrderDetails
    recset.MoveFirst
    
    G_OrderID = recset.Fields(0).Value
    fetchRSDetails G_OrderID ' to get recset from Table Order_Details
    
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    btnNext.Enabled = True
    btnFastNext.Enabled = True
    btnLast.Enabled = True
    btnPrevious.Enabled = True
    btnFastPrevious.Enabled = True
    btnFirst.Enabled = True

    populateOrders recset

    recsetDetails.MoveFirst
    populateOrderDetails recsetDetails
    
    'DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
    
Dim MinutesElapsed As String
MinutesElapsed = Format((Timer - starttime) / 86400, "hh:mm:ss")
lblLoadFormTime.Caption = "Loading Time: " & MinutesElapsed & vbNewLine _
                            & " for " & Format(Threshold, "##0,000") & " rows"
End Sub
Private Sub populateOrders(rs As adodb.Recordset)
        
    setSearchedValue txtOrderID, rs, 0
    setSearchedValue txtOrderDate, rs, 1
    setSearchedValue txtRequiredDate, rs, 2
    setSearchedValue txtShippedDate, rs, 3
    setSearchedValue txtShipName, rs, 4

End Sub
Private Sub populateOrderDetails(rs As adodb.Recordset)
    'rs.fields(0) is OrderID
    setSearchedValue1 txtTotalProducts, rs, 1
    setSearchedValue1 txtOrderAmount, rs, 2
  
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)

        'to decide for null value
        Dim val As String
        If IsNull(rs(fn).Value) Then
           val = " "
        Else
           val = rs(fn).Value
        End If
        
        tb.Locked = False
        tb.Enabled = True
        'tb.SetFocus
        tb.Value = val

End Sub
Private Sub setSearchedValue1(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    If recsetDetails.RecordCount = 0 Then
        With txtTotalProducts
            .Locked = False
            .Enabled = True
            '.SetFocus
            .Value = "0"
        End With
        With txtOrderAmount
            .Locked = False
            .Enabled = True
            '.SetFocus
            .Value = "$0.00"
        End With
    Else
    
        'to decide for null value
        Dim val As String
        If IsNull(rs(fn).Value) Then
           val = " "
        Else
           val = rs(fn).Value
        End If
        
        tb.Locked = False
        tb.Enabled = True
        'tb.SetFocus
        If tb.Name = "txtOrderAmount" Then
            tb.Value = "$" & val
            
        Else
            tb.Value = val
        End If
    End If

End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub

=====================================================================
--frmViewOrderDetails
Option Compare Database
Option Explicit
Dim TimerSeconds As Long
Dim recset As adodb.Recordset 'the whole recset we have now, which could increase with btnNext
Dim recsetDetails As adodb.Recordset
Dim RecordNumber As Long
Dim MaxRecNo As Long 'the total records from all our DB
Dim Threshold As Long 'to restrict how many records we fetch each time from DB
Dim fastNumber As Integer 'to restrict how many records to jump when fastNext/fastPrevious is pressed
Dim howmanyThreshold As Long 'to record how many times the whole database can be divided by the threshold
Dim StartOrderID As Long
Dim LastRows As Long 'this is to calculate the count of Orders in the last part

Private Sub btnClosePage_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmOrderManagement", , , , , acDialog
End Sub
Private Sub fetchRSDetails(b As Long)
    Dim DB1 As Integer 'number of DBs for loop
    Dim conn1 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim sql As String
   
    DB1 = getDBnumber(G_OrderID) ' to know which DB will be involved

        ' to select information for Table Order_Details part

        sql = "SELECT OrderID,  Count(ProductID) " _
            & "as TotalProducts, format(sum(Amount),'C') as OrderAmount " _
            & "from (" _
            & "SELECT OrderID, ProductID, " _
            & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
            & "From " _
            & "OrderDetails" _
            & " WHERE OrderID = " & G_OrderID & " AND Status is null ) as t " _
            & "Group by OrderID  "
        Set conn1 = New adodb.Connection
        'conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)
        conn1.ConnectionString = "Provider=SQLOLEDB;SERVER=your_server;Database=JuliaDatabase;Trusted_Connection=Yes"
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        rsPartial1.Open sql, conn1, adOpenKeyset, adLockOptimistic
        'rsPartial1.Open sql, conn1, adOpendynamic, adLockBatchOptimistic
        Set recsetDetails = New adodb.Recordset
        Set recsetDetails = rsPartial1
End Sub
    ' need to fetch new data
Private Sub fetchRS(a As String, Optional b As Long, Optional C As Long)
    ' need to fetch new data
    'a is to determine ASC OR DESC
    'b is to determine the StartOrderID
    'c is to determine how many records to fetch
    Dim DB1 As Integer 'number of DBs  for loop
    Dim DB2 As Integer
    Dim conn1 As adodb.Connection
    Dim conn2 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim rsPartial2 As adodb.Recordset
    Dim i As Byte 'to record one or two DBs are involved
    Dim n As Byte
    Dim m As Long
    Dim sql As String
   
    DB1 = getDBnumber(StartOrderID) ' to know which DB will be involved
    
    If a = "Asc" Then
        'first to select information for Table Orders part
        sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName " _
                & "From " _
                & "Orders " _
                & "Where Status is null " _
                & "Order by OrderID "
          'below is too slow
         'sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName, Count(ProductID) " _
                & "as TotalProducts, format(sum(Amount),'c2') as OrderAmount " _
                & "from (" _
                & "SELECT o.OrderID, OrderDate, RequiredDate, ShippedDate, ShipName, ProductID, " _
                & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
                & "From " _
                & "Orders as o left Join OrderDetails as od " _
                & "on o.OrderID=od.OrderID " _
                & "WHERE od.Status is null and o.Status is null " _
                & ")as t " _
                & "group by OrderID, OrderDate, RequiredDate,ShippedDate, ShipName "
                

        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=SQLOLEDB;SERVER=your_server;Database=JuliaDatabase;Trusted_Connection=Yes"
        conn1.ConnectionTimeout = 20
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        'rsPartial1.Open sql, conn1, adOpenKeyset, adLockOptimistic
        rsPartial1.Open sql, conn1, adOpenStatic, adLockBatchOptimistic
        '----------------------------------------------------------
        Set recset = New adodb.Recordset
        Set rsPartial1.ActiveConnection = Nothing
        conn1.Close
        Set recset = rsPartial1
        
    End If


End Sub
Private Sub btnLast_Click()
    
        If RecordNumber < MaxRecNo Then
            RecordNumber = MaxRecNo
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If

    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnFastNext_Click()
    
        If RecordNumber < MaxRecNo Then
            If RecordNumber < MaxRecNo - fastNumber Then
                RecordNumber = RecordNumber + fastNumber
                recset.Move fastNumber
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            Else
                RecordNumber = MaxRecNo
                recset.MoveLast
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            End If
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If

    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                
End Sub
Private Sub btnNext_Click()

        If RecordNumber < MaxRecNo Then
            RecordNumber = RecordNumber + 1
   
            recset.MoveNext
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnFirst_Click()
    
        If RecordNumber > 1 Then
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If

    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnFastPrevious_Click()

        If RecordNumber > 1 Then
            If RecordNumber > fastNumber Then
                RecordNumber = RecordNumber - fastNumber
                recset.Move -fastNumber
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            ElseIf RecordNumber < fastNumber Then
                RecordNumber = 1
                recset.MoveFirst
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            End If
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
        
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnPrevious_Click()

        If RecordNumber > 1 Then
            RecordNumber = RecordNumber - 1
            
            recset.MovePrevious
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If

    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo

End Sub
Private Sub btnClose_Click()
    DoCmd.Close
End Sub
Private Sub btnViewOrderDetails_Click()

    txtOrderID.SetFocus
    G_OrderID = txtOrderID.Text
    DoCmd.OpenForm "frmViewOrderDetails", , , , , acDialog

End Sub

Private Sub Form_Load()
Dim starttime As Double
starttime = Timer
    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    TimerSeconds = TimerSeconds + 1
    lblDateTime.RightMargin = 0
    
    Me.Caption = "View Orders"
    Me.NavigationButtons = False
    Me.RecordSelectors = False
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    Threshold = 500

    fastNumber = Threshold / 2
    'MaxRecNo = getCount
    RecordNumber = 1
    'threshold is to be defined in Form_load Event
    'howmanyThreshold = -Int(-MaxRecNo / Threshold) 'record how many times data can be divided by threshold
    'LastRows = MaxRecNo Mod Threshold
    
    'StartOrderID = getMinNumber - 1
     
    'fetchRS "Asc", StartOrderID, threshold ' to get recset from Table Orders
    fetchRS "Asc"
    MaxRecNo = recset.RecordCount
    'in the fetchRS, i need to seperately connecet the tables of Orders
    'adding Status into the DB makes it impossible to join the tables of Orders and OrderDetails as usually did
    'even I use filter like "Where Status is null"
    'NEXT it to fetch information from OrderDetails
    recset.MoveFirst
    
    G_OrderID = recset.Fields(0).Value
    fetchRSDetails G_OrderID ' to get recset from Table Order_Details
    
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    btnNext.Enabled = True
    btnFastNext.Enabled = True
    btnLast.Enabled = True
    btnPrevious.Enabled = True
    btnFastPrevious.Enabled = True
    btnFirst.Enabled = True

    recset.MoveFirst
    populateOrders recset
    
    'Set Me.Recordset = recsetDetails
    recsetDetails.MoveFirst
    populateOrderDetails recsetDetails
    
    'DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
Dim MinutesElapsed As String
MinutesElapsed = Format((Timer - starttime) / 86400, "hh:mm:ss")
lblLoadFormTime.Caption = "Loading Time: " & MinutesElapsed & vbNewLine _
                            & " for " & Format(MaxRecNo, "###,000") & " rows"
End Sub
Private Sub populateOrders(rs As adodb.Recordset)
        
    setSearchedValue txtOrderID, rs, 0
    setSearchedValue txtOrderDate, rs, 1
    setSearchedValue txtRequiredDate, rs, 2
    setSearchedValue txtShippedDate, rs, 3
    setSearchedValue txtShipName, rs, 4
    'setSearchedValue txtTotalProducts, rs, 5
    'setSearchedValue txtOrderAmount, rs, 6

End Sub
Private Sub populateOrderDetails(rs As adodb.Recordset)
    'rs.fields(0) is OrderID
    setSearchedValue1 txtTotalProducts, rs, 1
    setSearchedValue1 txtOrderAmount, rs, 2
  
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)

        'to decide for null value
        Dim val As String
        If IsNull(rs(fn).Value) Then
           val = " "
        Else
           val = rs(fn).Value
        End If
        
        tb.Locked = False
        tb.Enabled = True
        'tb.SetFocus
        tb.Value = val

End Sub
Private Sub setSearchedValue1(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    If recsetDetails.RecordCount = 0 Then
        With txtTotalProducts
            .Locked = False
            .Enabled = True
            '.SetFocus
            .Value = "0"
        End With
        With txtOrderAmount
            .Locked = False
            .Enabled = True
            '.SetFocus
            .Value = "$0.00"
        End With
    Else
    
        'to decide for null value
        Dim val As String
        If IsNull(rs(fn).Value) Then
           val = " "
        Else
           val = rs(fn).Value
        End If
        
        tb.Locked = False
        tb.Enabled = True
        'tb.SetFocus
        If tb.Name = "txtOrderAmount" Then
            tb.Value = "$" & val
            
        Else
            tb.Value = val
        End If
    End If

End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub

===================================================================
--frmViewOrders-SQL DB
Option Compare Database
Option Explicit
Dim TimerSeconds As Long
Dim recset As adodb.Recordset 'the whole recset we have now, which could increase with btnNext
Dim recsetDetails As adodb.Recordset
Dim RecordNumber As Long
Dim MaxRecNo As Long 'the total records from all our DB
Dim Threshold As Long 'to restrict how many records we fetch each time from DB
Dim fastNumber As Integer 'to restrict how many records to jump when fastNext/fastPrevious is pressed
Dim howmanyThreshold As Long 'to record how many times the whole database can be divided by the threshold
Dim StartOrderID As Long
Dim LastRows As Long 'this is to calculate the count of Orders in the last part

Private Sub btnClosePage_Click()
    DoCmd.Close
    DoCmd.OpenForm "frmOrderManagement", , , , , acDialog
End Sub
Private Sub fetchRSDetails(b As Long)
    Dim DB1 As Integer 'number of DBs for loop
    Dim conn1 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim sql As String
   
    DB1 = getDBnumber(G_OrderID) ' to know which DB will be involved

        ' to select information for Table Order_Details part

        sql = "SELECT OrderID,  Count(ProductID) " _
            & "as TotalProducts, format(sum(Amount),'C') as OrderAmount " _
            & "from (" _
            & "SELECT OrderID, ProductID, " _
            & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
            & "From " _
            & "OrderDetails" _
            & " WHERE OrderID = " & G_OrderID & " AND Status is null ) as t " _
            & "Group by OrderID  "
        Set conn1 = New adodb.Connection
        'conn1.ConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                                "Data Source=" & GetAddress("O", DB1)
        conn1.ConnectionString = "Provider=SQLOLEDB;SERVER=your_server;Database=JuliaDatabase;Trusted_Connection=Yes"
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        rsPartial1.Open sql, conn1, adOpenKeyset, adLockOptimistic
        'rsPartial1.Open sql, conn1, adOpendynamic, adLockBatchOptimistic
        Set recsetDetails = New adodb.Recordset
        Set recsetDetails = rsPartial1
End Sub
    ' need to fetch new data
Private Sub fetchRS(a As String, Optional b As Long, Optional C As Long)
    ' need to fetch new data
    'a is to determine ASC OR DESC
    'b is to determine the StartOrderID
    'c is to determine how many records to fetch
    Dim DB1 As Integer 'number of DBs  for loop
    Dim DB2 As Integer
    Dim conn1 As adodb.Connection
    Dim conn2 As adodb.Connection
    Dim rsPartial1 As adodb.Recordset
    Dim rsPartial2 As adodb.Recordset
    Dim i As Byte 'to record one or two DBs are involved
    Dim n As Byte
    Dim m As Long
    Dim sql As String
   
    DB1 = getDBnumber(StartOrderID) ' to know which DB will be involved
    
    If a = "Asc" Then
        'first to select information for Table Orders part
        sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName " _
                & "From " _
                & "Orders " _
                & "Where Status is null " _
                & "Order by OrderID "
          'below is too slow
         'sql = "SELECT OrderID, OrderDate, RequiredDate, ShippedDate, ShipName, Count(ProductID) " _
                & "as TotalProducts, format(sum(Amount),'c2') as OrderAmount " _
                & "from (" _
                & "SELECT o.OrderID, OrderDate, RequiredDate, ShippedDate, ShipName, ProductID, " _
                & "iif(UnitPrice * Quantity * (1 - Discount) Is Null, 0, UnitPrice * Quantity * (1 - Discount)) As Amount " _
                & "From " _
                & "Orders as o left Join OrderDetails as od " _
                & "on o.OrderID=od.OrderID " _
                & "WHERE od.Status is null and o.Status is null " _
                & ")as t " _
                & "group by OrderID, OrderDate, RequiredDate,ShippedDate, ShipName "
                

        Set conn1 = New adodb.Connection
        conn1.ConnectionString = "Provider=SQLOLEDB;SERVER=your_server;Database=JuliaDatabase;Trusted_Connection=Yes"
        conn1.ConnectionTimeout = 20
        conn1.Open
    
        Set rsPartial1 = New adodb.Recordset
        '---------------------------------------------------------
        rsPartial1.CursorLocation = adUseClient
        'rsPartial1.Open sql, conn1, adOpenKeyset, adLockOptimistic
        rsPartial1.Open sql, conn1, adOpenStatic, adLockBatchOptimistic
        '----------------------------------------------------------
        Set recset = New adodb.Recordset
        Set rsPartial1.ActiveConnection = Nothing
        conn1.Close
        Set recset = rsPartial1
        
    End If


End Sub
Private Sub btnLast_Click()
    
        If RecordNumber < MaxRecNo Then
            RecordNumber = MaxRecNo
            recset.MoveLast
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If

    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    
End Sub
Private Sub btnFastNext_Click()
    
        If RecordNumber < MaxRecNo Then
            If RecordNumber < MaxRecNo - fastNumber Then
                RecordNumber = RecordNumber + fastNumber
                recset.Move fastNumber
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            Else
                RecordNumber = MaxRecNo
                recset.MoveLast
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            End If
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If

    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
                
End Sub
Private Sub btnNext_Click()

        If RecordNumber < MaxRecNo Then
            RecordNumber = RecordNumber + 1
   
            recset.MoveNext
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the end of the records.", vbOKOnly
        End If
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnFirst_Click()
    
        If RecordNumber > 1 Then
            RecordNumber = 1
            lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
            recset.MoveFirst
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If

    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnFastPrevious_Click()

        If RecordNumber > 1 Then
            If RecordNumber > fastNumber Then
                RecordNumber = RecordNumber - fastNumber
                recset.Move -fastNumber
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            ElseIf RecordNumber < fastNumber Then
                RecordNumber = 1
                recset.MoveFirst
                populateOrders recset
                G_OrderID = recset.Fields(0)
                fetchRSDetails G_OrderID
                populateOrderDetails recsetDetails
            End If
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If
        
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
End Sub
Private Sub btnPrevious_Click()

        If RecordNumber > 1 Then
            RecordNumber = RecordNumber - 1
            
            recset.MovePrevious
            populateOrders recset
            G_OrderID = recset.Fields(0)
            fetchRSDetails G_OrderID
            populateOrderDetails recsetDetails
        Else
            MsgBox "You've reached the beginning of the records.", vbOKOnly
        End If

    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo

End Sub
Private Sub btnClose_Click()
    DoCmd.Close
End Sub
Private Sub btnViewOrderDetails_Click()

    txtOrderID.SetFocus
    G_OrderID = txtOrderID.Text
    DoCmd.OpenForm "frmViewOrderDetails", , , , , acDialog

End Sub

Private Sub Form_Load()
Dim starttime As Double
starttime = Timer
    lblDateTime.Caption = Get_DT
    Me.TimerInterval = 1000
    TimerSeconds = TimerSeconds + 1
    lblDateTime.RightMargin = 0
    
    Me.Caption = "View Orders"
    Me.NavigationButtons = False
    Me.RecordSelectors = False
    
    lblDateTime.BackColor = Get_Color2
    lblDateTime.ForeColor = Get_Color4
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    Form.Section(0).BackColor = Get_Color1
    
    Threshold = 500

    fastNumber = Threshold / 2
    'MaxRecNo = getCount
    RecordNumber = 1
    'threshold is to be defined in Form_load Event
    'howmanyThreshold = -Int(-MaxRecNo / Threshold) 'record how many times data can be divided by threshold
    'LastRows = MaxRecNo Mod Threshold
    
    'StartOrderID = getMinNumber - 1
     
    'fetchRS "Asc", StartOrderID, threshold ' to get recset from Table Orders
    fetchRS "Asc"
    MaxRecNo = recset.RecordCount
    'in the fetchRS, i need to seperately connecet the tables of Orders
    'adding Status into the DB makes it impossible to join the tables of Orders and OrderDetails as usually did
    'even I use filter like "Where Status is null"
    'NEXT it to fetch information from OrderDetails
    recset.MoveFirst
    
    G_OrderID = recset.Fields(0).Value
    fetchRSDetails G_OrderID ' to get recset from Table Order_Details
    
    lblRecNo.Caption = RecordNumber & "/" & MaxRecNo
    btnNext.Enabled = True
    btnFastNext.Enabled = True
    btnLast.Enabled = True
    btnPrevious.Enabled = True
    btnFastPrevious.Enabled = True
    btnFirst.Enabled = True

    recset.MoveFirst
    populateOrders recset
    
    'Set Me.Recordset = recsetDetails
    recsetDetails.MoveFirst
    populateOrderDetails recsetDetails
    
    'DoCmd.OpenForm "frmOrderManagement", , , , , acHidden
Dim MinutesElapsed As String
MinutesElapsed = Format((Timer - starttime) / 86400, "hh:mm:ss")
lblLoadFormTime.Caption = "Loading Time: " & MinutesElapsed & vbNewLine _
                            & " for " & Format(MaxRecNo, "###,000") & " rows"
End Sub
Private Sub populateOrders(rs As adodb.Recordset)
        
    setSearchedValue txtOrderID, rs, 0
    setSearchedValue txtOrderDate, rs, 1
    setSearchedValue txtRequiredDate, rs, 2
    setSearchedValue txtShippedDate, rs, 3
    setSearchedValue txtShipName, rs, 4
    'setSearchedValue txtTotalProducts, rs, 5
    'setSearchedValue txtOrderAmount, rs, 6

End Sub
Private Sub populateOrderDetails(rs As adodb.Recordset)
    'rs.fields(0) is OrderID
    setSearchedValue1 txtTotalProducts, rs, 1
    setSearchedValue1 txtOrderAmount, rs, 2
  
End Sub
Private Sub setSearchedValue(tb As TextBox, rs As adodb.Recordset, fn As Integer)

        'to decide for null value
        Dim val As String
        If IsNull(rs(fn).Value) Then
           val = " "
        Else
           val = rs(fn).Value
        End If
        
        tb.Locked = False
        tb.Enabled = True
        'tb.SetFocus
        tb.Value = val

End Sub
Private Sub setSearchedValue1(tb As TextBox, rs As adodb.Recordset, fn As Integer)
    
    If recsetDetails.RecordCount = 0 Then
        With txtTotalProducts
            .Locked = False
            .Enabled = True
            '.SetFocus
            .Value = "0"
        End With
        With txtOrderAmount
            .Locked = False
            .Enabled = True
            '.SetFocus
            .Value = "$0.00"
        End With
    Else
    
        'to decide for null value
        Dim val As String
        If IsNull(rs(fn).Value) Then
           val = " "
        Else
           val = rs(fn).Value
        End If
        
        tb.Locked = False
        tb.Enabled = True
        'tb.SetFocus
        If tb.Name = "txtOrderAmount" Then
            tb.Value = "$" & val
            
        Else
            tb.Value = val
        End If
    End If

End Sub
Private Sub Form_Timer()
    lblDateTime.Caption = Get_DT
End Sub

=======================================================================================
--frmWelcome
Option Compare Database
Option Explicit
Private Sub btnClose_Click()
    DoCmd.Quit
End Sub
Private Sub Form_Load()
    Form.Section(0).BackColor = Get_Color1
    
    Dim x As Control
    For Each x In Me.Controls
        If TypeOf x Is Label Then
        x.BackColor = Get_Color2
        End If
    Next x
    
    Me.NavigationButtons = False
    Me.RecordSelectors = False
    Me.Caption = "Welcome to Julia.com - Select a feature to start work"
End Sub
Private Sub lblOrderManagement_Click()
    DoCmd.OpenForm "frmOrderManagement", , , , , acDialog
End Sub
Private Sub lblCustomerManagement_Click()
    DoCmd.OpenForm "frmCustomerManagement", , , , , acDialog
End Sub
'Private Sub lblEmployeeManagement_Click()
    'DoCmd.OpenForm "frmEmployeeManagement", , , , , acDialog
'End Sub
'Private Sub lblProductManagement_Click()
    'DoCmd.OpenForm "frmProductManagement", , , , , acDialog
'End Sub
'Private Sub lblShipperManagement_Click()
    'DoCmd.OpenForm "frmShipperManagement", , , , , acDialog
'End Sub







